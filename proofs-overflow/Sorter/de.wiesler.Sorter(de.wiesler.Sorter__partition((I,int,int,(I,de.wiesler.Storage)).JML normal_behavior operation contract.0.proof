\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Apr 17 12:52:46 CEST 2023
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , finalFields-finalFields\\:immutable
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Mon Apr 17 12:52:46 CEST 2023
contract=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:partition([I,int,int,[I,de.wiesler.Storage)].JML normal_behavior operation contract.0
name=de.wiesler.Sorter[de.wiesler.Sorter\\:\\:partition([I,int,int,[I,de.wiesler.Storage)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "62593")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,1,1,1,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,1,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,1,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "19"))
(rule "translateJavaSubInt" (formula "9") (term "0,0"))
(rule "translateJavaAddInt" (formula "14") (term "1"))
(rule "add_literals" (formula "14") (term "1"))
(rule "translateJavaSubInt" (formula "16") (term "0"))
(rule "translateJavaSubInt" (formula "17") (term "0"))
(rule "replace_known_right" (formula "8") (term "0") (ifseqformula "22"))
 (builtin "One Step Simplification" (formula "8"))
(rule "replace_known_right" (formula "7") (term "0") (ifseqformula "23"))
 (builtin "One Step Simplification" (formula "7"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "24"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "9") (term "0,0"))
(rule "polySimp_elimSub" (formula "16") (term "0"))
(rule "polySimp_elimSub" (formula "17") (term "0"))
(rule "polySimp_addComm0" (formula "9") (term "0,0"))
(rule "polySimp_addComm0" (formula "16") (term "0"))
(rule "polySimp_addComm0" (formula "17") (term "0"))
(rule "disjointDefinition" (formula "21"))
(rule "disjointDefinition" (formula "19"))
 (builtin "One Step Simplification" (formula "19"))
(rule "notLeft" (formula "19"))
(rule "disjointDefinition" (formula "19"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "applyEq" (formula "15") (term "1,1,0,0,0") (ifseqformula "14"))
(rule "commute_and" (formula "15") (term "1,0,0"))
(rule "commute_and" (formula "15") (term "0,0,0"))
(rule "shift_paren_and" (formula "15") (term "0,0"))
(rule "commute_and_2" (formula "15") (term "0,0,0"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_partition,savedHeapBefore_partition"))
 (builtin "One Step Simplification" (formula "25"))
 (builtin "Block Contract (Internal)" (formula "25") (newnames "anonOut_heap,result_219,exc_259,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")))
    (builtin "One Step Simplification" (formula "26"))
   (rule "translateJavaSubInt" (formula "21") (term "0,0"))
   (rule "polySimp_elimSub" (formula "21") (term "0,0"))
   (rule "polySimp_addComm0" (formula "21") (term "0,0"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "exc_259_1"))
   (rule "assignment" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "emptyStatement" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "emptyStatement" (formula "25") (term "1"))
   (rule "tryEmpty" (formula "25") (term "1"))
   (rule "blockEmptyLabel" (formula "25") (term "1"))
   (rule "blockEmpty" (formula "25") (term "1"))
   (rule "methodCallEmpty" (formula "25") (term "1"))
   (rule "emptyModality" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "closeTrue" (formula "25"))
)
(branch "Precondition"
   (rule "andRight" (formula "25"))
   (branch
       (builtin "One Step Simplification" (formula "25"))
      (rule "translateJavaSubInt" (formula "25") (term "0,0"))
      (rule "polySimp_elimSub" (formula "25") (term "0,0"))
      (rule "polySimp_addComm0" (formula "25") (term "0,0"))
      (rule "close" (formula "25") (ifseqformula "9"))
   )
   (branch
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "25"))
   )
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "26"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "true_left" (formula "24"))
   (rule "disjointDefinition" (formula "68"))
    (builtin "One Step Simplification" (formula "68"))
   (rule "notLeft" (formula "68"))
   (rule "disjointDefinition" (formula "67"))
    (builtin "One Step Simplification" (formula "67"))
   (rule "notLeft" (formula "67"))
   (rule "disjointDefinition" (formula "66"))
    (builtin "One Step Simplification" (formula "66"))
   (rule "notLeft" (formula "66"))
   (rule "eqSymm" (formula "66"))
   (rule "disjointDefinition" (formula "65"))
    (builtin "One Step Simplification" (formula "65"))
   (rule "notLeft" (formula "65"))
   (rule "eqSymm" (formula "65"))
   (rule "disjointDefinition" (formula "64"))
    (builtin "One Step Simplification" (formula "64"))
   (rule "notLeft" (formula "64"))
   (rule "eqSymm" (formula "64"))
   (rule "disjointDefinition" (formula "63"))
    (builtin "One Step Simplification" (formula "63"))
   (rule "notLeft" (formula "63"))
   (rule "eqSymm" (formula "63"))
   (rule "disjointDefinition" (formula "62"))
    (builtin "One Step Simplification" (formula "62"))
   (rule "notLeft" (formula "62"))
   (rule "eqSymm" (formula "62"))
   (rule "disjointDefinition" (formula "61"))
    (builtin "One Step Simplification" (formula "61"))
   (rule "notLeft" (formula "61"))
   (rule "eqSymm" (formula "61"))
   (rule "disjointDefinition" (formula "60"))
    (builtin "One Step Simplification" (formula "60"))
   (rule "notLeft" (formula "60"))
   (rule "eqSymm" (formula "60"))
   (rule "disjointDefinition" (formula "59"))
    (builtin "One Step Simplification" (formula "59"))
   (rule "notLeft" (formula "59"))
   (rule "eqSymm" (formula "59"))
   (rule "disjointDefinition" (formula "58"))
    (builtin "One Step Simplification" (formula "58"))
   (rule "notLeft" (formula "58"))
   (rule "eqSymm" (formula "58"))
   (rule "disjointDefinition" (formula "57"))
    (builtin "One Step Simplification" (formula "57"))
   (rule "notLeft" (formula "57"))
   (rule "eqSymm" (formula "57"))
   (rule "disjointDefinition" (formula "56"))
    (builtin "One Step Simplification" (formula "56"))
   (rule "notLeft" (formula "56"))
   (rule "eqSymm" (formula "56"))
   (rule "disjointDefinition" (formula "55"))
    (builtin "One Step Simplification" (formula "55"))
   (rule "notLeft" (formula "55"))
   (rule "eqSymm" (formula "55"))
   (rule "disjointDefinition" (formula "54"))
    (builtin "One Step Simplification" (formula "54"))
   (rule "notLeft" (formula "54"))
   (rule "eqSymm" (formula "54"))
   (rule "disjointDefinition" (formula "53"))
    (builtin "One Step Simplification" (formula "53"))
   (rule "notLeft" (formula "53"))
   (rule "disjointDefinition" (formula "52"))
    (builtin "One Step Simplification" (formula "52"))
   (rule "notLeft" (formula "52"))
   (rule "eqSymm" (formula "52"))
   (rule "disjointDefinition" (formula "51"))
    (builtin "One Step Simplification" (formula "51"))
   (rule "notLeft" (formula "51"))
   (rule "eqSymm" (formula "51"))
   (rule "disjointDefinition" (formula "50"))
    (builtin "One Step Simplification" (formula "50"))
   (rule "notLeft" (formula "50"))
   (rule "disjointDefinition" (formula "49"))
    (builtin "One Step Simplification" (formula "49"))
   (rule "notLeft" (formula "49"))
   (rule "disjointDefinition" (formula "48"))
    (builtin "One Step Simplification" (formula "48"))
   (rule "notLeft" (formula "48"))
   (rule "disjointDefinition" (formula "47"))
    (builtin "One Step Simplification" (formula "47"))
   (rule "notLeft" (formula "47"))
   (rule "disjointDefinition" (formula "46"))
    (builtin "One Step Simplification" (formula "46"))
   (rule "notLeft" (formula "46"))
   (rule "disjointDefinition" (formula "45"))
    (builtin "One Step Simplification" (formula "45"))
   (rule "notLeft" (formula "45"))
   (rule "disjointDefinition" (formula "44"))
    (builtin "One Step Simplification" (formula "44"))
   (rule "notLeft" (formula "44"))
   (rule "disjointDefinition" (formula "43"))
    (builtin "One Step Simplification" (formula "43"))
   (rule "notLeft" (formula "43"))
   (rule "disjointDefinition" (formula "42"))
    (builtin "One Step Simplification" (formula "42"))
   (rule "notLeft" (formula "42"))
   (rule "disjointDefinition" (formula "41"))
    (builtin "One Step Simplification" (formula "41"))
   (rule "notLeft" (formula "41"))
   (rule "disjointDefinition" (formula "40"))
    (builtin "One Step Simplification" (formula "40"))
   (rule "notLeft" (formula "40"))
   (rule "eqSymm" (formula "40"))
   (rule "disjointDefinition" (formula "39"))
    (builtin "One Step Simplification" (formula "39"))
   (rule "notLeft" (formula "39"))
   (rule "eqSymm" (formula "39"))
   (rule "disjointDefinition" (formula "38"))
    (builtin "One Step Simplification" (formula "38"))
   (rule "notLeft" (formula "38"))
   (rule "eqSymm" (formula "38"))
   (rule "disjointDefinition" (formula "37"))
    (builtin "One Step Simplification" (formula "37"))
   (rule "notLeft" (formula "37"))
   (rule "eqSymm" (formula "37"))
   (rule "disjointDefinition" (formula "36"))
    (builtin "One Step Simplification" (formula "36"))
   (rule "notLeft" (formula "36"))
   (rule "eqSymm" (formula "36"))
   (rule "disjointDefinition" (formula "35"))
    (builtin "One Step Simplification" (formula "35"))
   (rule "notLeft" (formula "35"))
   (rule "eqSymm" (formula "35"))
   (rule "disjointDefinition" (formula "34"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "notLeft" (formula "34"))
   (rule "eqSymm" (formula "34"))
   (rule "disjointDefinition" (formula "33"))
    (builtin "One Step Simplification" (formula "33"))
   (rule "notLeft" (formula "33"))
   (rule "eqSymm" (formula "33"))
   (rule "disjointDefinition" (formula "32"))
    (builtin "One Step Simplification" (formula "32"))
   (rule "notLeft" (formula "32"))
   (rule "eqSymm" (formula "32"))
   (rule "disjointDefinition" (formula "31"))
    (builtin "One Step Simplification" (formula "31"))
   (rule "notLeft" (formula "31"))
   (rule "eqSymm" (formula "31"))
   (rule "disjointDefinition" (formula "30"))
    (builtin "One Step Simplification" (formula "30"))
   (rule "notLeft" (formula "30"))
   (rule "eqSymm" (formula "30"))
   (rule "disjointDefinition" (formula "29"))
    (builtin "One Step Simplification" (formula "29"))
   (rule "notLeft" (formula "29"))
   (rule "eqSymm" (formula "29"))
   (rule "disjointDefinition" (formula "28"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "notLeft" (formula "28"))
   (rule "eqSymm" (formula "28"))
   (rule "disjointDefinition" (formula "27"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "notLeft" (formula "27"))
   (rule "eqSymm" (formula "27"))
   (rule "disjointDefinition" (formula "26"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "notLeft" (formula "26"))
   (rule "eqSymm" (formula "26"))
   (rule "disjointDefinition" (formula "25"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "notLeft" (formula "25"))
   (rule "eqSymm" (formula "25"))
   (rule "disjointDefinition" (formula "24"))
    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "69")))
   (rule "true_left" (formula "24"))
   (rule "shift_paren_or" (formula "23"))
   (rule "ifUnfold" (formula "72") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "72") (term "1") (newnames "x"))
   (rule "arrayLengthIsAShort" (formula "14") (term "0"))
   (rule "expand_inShort" (formula "14"))
   (rule "replace_short_MIN" (formula "14") (term "0,1"))
   (rule "replace_short_MAX" (formula "14") (term "1,0"))
   (rule "andLeft" (formula "14"))
   (rule "inEqSimp_commuteLeq" (formula "15"))
   (rule "applyEq" (formula "14") (term "0") (ifseqformula "16"))
   (rule "leq_literals" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
   (rule "qeq_literals" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "arrayLengthNotNegative" (formula "14") (term "0"))
   (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
   (rule "qeq_literals" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "arrayLengthNotNegative" (formula "13") (term "0"))
   (rule "arrayLengthIsAShort" (formula "14") (term "0"))
   (rule "expand_inShort" (formula "14"))
   (rule "replace_short_MAX" (formula "14") (term "1,0"))
   (rule "replace_short_MIN" (formula "14") (term "0,1"))
   (rule "andLeft" (formula "14"))
   (rule "inEqSimp_commuteLeq" (formula "15"))
   (rule "inequality_comparison_simple" (formula "75") (term "1"))
    (builtin "One Step Simplification" (formula "75"))
   (rule "replace_known_left" (formula "75") (term "0,0,1,0") (ifseqformula "24"))
    (builtin "One Step Simplification" (formula "75"))
   (rule "ifSplit" (formula "75"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "76"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "76"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "75") (term "1"))
      (rule "variableDeclarationGhostAssign" (formula "75") (term "1"))
      (rule "variableDeclarationGhost" (formula "75") (term "1") (newnames "oldValues"))
      (rule "assignment" (formula "75") (term "1"))
       (builtin "One Step Simplification" (formula "75"))
      (rule "variableDeclarationFinalAssign" (formula "75") (term "1"))
      (rule "variableDeclarationFinal" (formula "75") (term "1") (newnames "sample"))
       (builtin "Use Operation Contract" (formula "75") (newnames "heapBefore_sample,result_220,exc_260,heapAfter_sample,anon_heap_sample") (contract "de.wiesler.Sorter[de.wiesler.Sorter::sample([I,int,int,de.wiesler.Storage)].JML normal_behavior operation contract.0"))
      (branch "Post (sample)"
          (builtin "One Step Simplification" (formula "77"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "andLeft" (formula "28"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0,1,0") (ifseqformula "28"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "30"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "30"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "32"))
         (rule "andLeft" (formula "30"))
         (rule "notLeft" (formula "34"))
         (rule "andLeft" (formula "31"))
         (rule "andLeft" (formula "32"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "34"))
         (rule "notLeft" (formula "35"))
         (rule "notLeft" (formula "34"))
         (rule "orRight" (formula "37"))
         (rule "translateJavaSubInt" (formula "28") (term "2,1,1,0"))
         (rule "translateJavaSubInt" (formula "31") (term "2,0"))
         (rule "translateJavaAddInt" (formula "32") (term "3,0"))
         (rule "replace_known_right" (formula "29") (term "1,0,1") (ifseqformula "38"))
          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")) (ifInst ""  (formula "37")))
         (rule "polySimp_elimSub" (formula "28") (term "2,1,1,0"))
         (rule "mul_literals" (formula "28") (term "1,2,1,1,0"))
         (rule "polySimp_elimSub" (formula "31") (term "2,0"))
         (rule "polySimp_addComm0" (formula "28") (term "2,1,1,0"))
         (rule "polySimp_addComm0" (formula "31") (term "2,0"))
         (rule "assignment" (formula "88") (term "1"))
          (builtin "One Step Simplification" (formula "88"))
         (rule "variableDeclarationFinalAssign" (formula "88") (term "1"))
         (rule "variableDeclarationFinal" (formula "88") (term "1") (newnames "num_samples"))
         (rule "assignment_read_attribute_final" (formula "88"))
         (branch "Normal Execution (sample != null)"
             (builtin "One Step Simplification" (formula "88"))
            (rule "variableDeclarationFinalAssign" (formula "88") (term "1"))
            (rule "variableDeclarationFinal" (formula "88") (term "1") (newnames "num_buckets"))
            (rule "assignment_read_attribute_final" (formula "88"))
            (branch "Normal Execution (sample != null)"
                (builtin "One Step Simplification" (formula "88"))
               (rule "variableDeclarationFinalAssign" (formula "88") (term "1"))
               (rule "variableDeclarationFinal" (formula "88") (term "1") (newnames "step"))
               (rule "assignment_read_attribute_final" (formula "88"))
               (branch "Normal Execution (sample != null)"
                   (builtin "One Step Simplification" (formula "88"))
                  (rule "variableDeclarationFinalAssign" (formula "88") (term "1"))
                  (rule "variableDeclarationFinal" (formula "88") (term "1") (newnames "splitters"))
                  (rule "assignment_read_attribute_final" (formula "88"))
                  (branch "Normal Execution (_storage != null)"
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "variableDeclarationGhostAssign" (formula "88") (term "1"))
                     (rule "variableDeclarationGhost" (formula "88") (term "1") (newnames "before_copy_unique"))
                     (rule "assignment" (formula "88") (term "1"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "variableDeclarationFinalAssign" (formula "88") (term "1"))
                     (rule "variableDeclarationFinal" (formula "88") (term "1") (newnames "num_splitters"))
                     (rule "methodCallWithAssignmentUnfoldArguments" (formula "88") (term "1"))
                     (rule "variableDeclarationAssign" (formula "88") (term "1"))
                     (rule "variableDeclaration" (formula "88") (term "1") (newnames "var"))
                     (rule "assignment" (formula "88") (term "1"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "variableDeclarationAssign" (formula "88") (term "1"))
                     (rule "variableDeclaration" (formula "88") (term "1") (newnames "var_1"))
                     (rule "assignment" (formula "88") (term "1"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "variableDeclarationAssign" (formula "88") (term "1"))
                     (rule "variableDeclaration" (formula "88") (term "1") (newnames "var_2"))
                     (rule "assignmentAdditionInt" (formula "88") (term "1"))
                     (branch "Overflow check"
                         (builtin "One Step Simplification" (formula "88"))
                        (rule "expand_inInt" (formula "88"))
                        (rule "replace_int_MAX" (formula "88") (term "1,0"))
                        (rule "replace_int_MIN" (formula "88") (term "0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "19"))
                        (rule "mul_literals" (formula "19") (term "1,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "88") (term "0"))
                        (rule "polySimp_mulComm0" (formula "88") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "88") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "88") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "88") (term "0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "88") (term "1"))
                        (rule "mul_literals" (formula "88") (term "1,0,1"))
                        (rule "polySimp_addComm1" (formula "88") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "88") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                        (rule "mul_literals" (formula "19") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "88") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "88") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "88") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1"))
                        (rule "polySimp_mulComm0" (formula "88") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "88") (term "1,1"))
                        (rule "mul_literals" (formula "88") (term "0,1,1"))
                        (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "19"))
                        (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0"))
                        (rule "qeq_literals" (formula "12") (term "0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
                        (rule "leq_literals" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "11"))
                        (rule "leq_literals" (formula "4") (term "0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "4"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                        (rule "mul_literals" (formula "16") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "16"))
                        (rule "leq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "12") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "12"))
                        (rule "leq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                        (rule "mul_literals" (formula "3") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                        (rule "leq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "11"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                        (rule "mul_literals" (formula "16") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "16"))
                        (rule "leq_literals" (formula "15") (term "0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
                        (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
                        (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "30"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "andLeft" (formula "30"))
                        (rule "andLeft" (formula "31"))
                        (rule "andLeft" (formula "30"))
                        (rule "andLeft" (formula "32"))
                        (rule "andLeft" (formula "30"))
                        (rule "andLeft" (formula "33"))
                        (rule "andLeft" (formula "30"))
                        (rule "andLeft" (formula "34"))
                        (rule "andLeft" (formula "30"))
                        (rule "andLeft" (formula "35"))
                        (rule "andLeft" (formula "30"))
                        (rule "andLeft" (formula "36"))
                        (rule "andLeft" (formula "30"))
                        (rule "andLeft" (formula "37"))
                        (rule "andLeft" (formula "30"))
                        (rule "andLeft" (formula "38"))
                        (rule "andLeft" (formula "30"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "translateJavaMulInt" (formula "33") (term "1"))
                        (rule "mul_literals" (formula "33") (term "1"))
                        (rule "translateJavaMulInt" (formula "32") (term "1"))
                        (rule "mul_literals" (formula "32") (term "1"))
                        (rule "disjointDefinition" (formula "66"))
                         (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "116")))
                        (rule "true_left" (formula "66"))
                        (rule "disjointDefinition" (formula "65"))
                         (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "114")))
                        (rule "true_left" (formula "65"))
                        (rule "disjointDefinition" (formula "64"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "notLeft" (formula "64"))
                        (rule "eqSymm" (formula "67"))
                        (rule "disjointDefinition" (formula "63"))
                         (builtin "One Step Simplification" (formula "63"))
                        (rule "notLeft" (formula "63"))
                        (rule "eqSymm" (formula "66"))
                        (rule "disjointDefinition" (formula "62"))
                         (builtin "One Step Simplification" (formula "62"))
                        (rule "notLeft" (formula "62"))
                        (rule "eqSymm" (formula "65"))
                        (rule "disjointDefinition" (formula "61"))
                         (builtin "One Step Simplification" (formula "61"))
                        (rule "notLeft" (formula "61"))
                        (rule "eqSymm" (formula "64"))
                        (rule "disjointDefinition" (formula "60"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "notLeft" (formula "60"))
                        (rule "eqSymm" (formula "63"))
                        (rule "disjointDefinition" (formula "59"))
                         (builtin "One Step Simplification" (formula "59"))
                        (rule "notLeft" (formula "59"))
                        (rule "eqSymm" (formula "62"))
                        (rule "disjointDefinition" (formula "58"))
                         (builtin "One Step Simplification" (formula "58"))
                        (rule "notLeft" (formula "58"))
                        (rule "eqSymm" (formula "61"))
                        (rule "disjointDefinition" (formula "57"))
                         (builtin "One Step Simplification" (formula "57"))
                        (rule "notLeft" (formula "57"))
                        (rule "eqSymm" (formula "60"))
                        (rule "disjointDefinition" (formula "56"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "notLeft" (formula "56"))
                        (rule "eqSymm" (formula "59"))
                        (rule "disjointDefinition" (formula "55"))
                         (builtin "One Step Simplification" (formula "55"))
                        (rule "notLeft" (formula "55"))
                        (rule "eqSymm" (formula "58"))
                        (rule "disjointDefinition" (formula "54"))
                         (builtin "One Step Simplification" (formula "54"))
                        (rule "notLeft" (formula "54"))
                        (rule "eqSymm" (formula "57"))
                        (rule "disjointDefinition" (formula "53"))
                         (builtin "One Step Simplification" (formula "53"))
                        (rule "notLeft" (formula "53"))
                        (rule "eqSymm" (formula "56"))
                        (rule "disjointDefinition" (formula "52"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "notLeft" (formula "52"))
                        (rule "eqSymm" (formula "55"))
                        (rule "disjointDefinition" (formula "51"))
                         (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "86")))
                        (rule "true_left" (formula "51"))
                        (rule "disjointDefinition" (formula "50"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "notLeft" (formula "50"))
                        (rule "eqSymm" (formula "53"))
                        (rule "disjointDefinition" (formula "49"))
                         (builtin "One Step Simplification" (formula "49"))
                        (rule "notLeft" (formula "49"))
                        (rule "eqSymm" (formula "52"))
                        (rule "disjointDefinition" (formula "48"))
                         (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "80")))
                        (rule "true_left" (formula "48"))
                        (rule "disjointDefinition" (formula "47"))
                         (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "78")))
                        (rule "true_left" (formula "47"))
                        (rule "disjointDefinition" (formula "46"))
                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "76")))
                        (rule "true_left" (formula "46"))
                        (rule "disjointDefinition" (formula "45"))
                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "74")))
                        (rule "true_left" (formula "45"))
                        (rule "disjointDefinition" (formula "44"))
                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "72")))
                        (rule "true_left" (formula "44"))
                        (rule "disjointDefinition" (formula "43"))
                         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "70")))
                        (rule "true_left" (formula "43"))
                        (rule "disjointDefinition" (formula "42"))
                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "68")))
                        (rule "true_left" (formula "42"))
                        (rule "disjointDefinition" (formula "41"))
                         (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "66")))
                        (rule "true_left" (formula "41"))
                        (rule "disjointDefinition" (formula "39"))
                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "63")))
                        (rule "true_left" (formula "39"))
                        (rule "disjointDefinition" (formula "39"))
                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "63")))
                        (rule "true_left" (formula "39"))
                        (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "38"))
                        (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "38"))
                        (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "38"))
                        (rule "distributeIntersection" (formula "20") (term "0"))
                        (rule "distributeIntersection" (formula "19") (term "0"))
                        (rule "distributeIntersection" (formula "20") (term "0,0"))
                        (rule "distributeIntersection" (formula "20") (term "1,0"))
                        (rule "unionEqualsEmpty" (formula "19"))
                        (rule "andLeft" (formula "19"))
                        (rule "distributeIntersection" (formula "21") (term "0,0,0"))
                        (rule "distributeIntersection" (formula "21") (term "1,0,0"))
                        (rule "distributeIntersection" (formula "21") (term "0,1,0"))
                        (rule "distributeIntersection" (formula "21") (term "1,1,0"))
                        (rule "distributeIntersection" (formula "20") (term "0"))
                        (rule "distributeIntersection" (formula "19") (term "0"))
                        (rule "unionEqualsEmpty" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "unionEqualsEmpty" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "distributeIntersection" (formula "19") (term "0,0"))
                        (rule "distributeIntersection" (formula "19") (term "1,0"))
                        (rule "unionEqualsEmpty" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "unionEqualsEmpty" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "distributeIntersection" (formula "21") (term "0"))
                        (rule "distributeIntersection" (formula "20") (term "0"))
                        (rule "unionEqualsEmpty" (formula "19"))
                        (rule "andLeft" (formula "19"))
                        (rule "unionEqualsEmpty" (formula "23"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "andLeft" (formula "23"))
                        (rule "notLeft" (formula "23"))
                        (rule "notLeft" (formula "23"))
                        (rule "eqSymm" (formula "48"))
                        (rule "eqSymm" (formula "47"))
                        (rule "unionEqualsEmpty" (formula "23"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "andLeft" (formula "23"))
                        (rule "notLeft" (formula "23"))
                        (rule "notLeft" (formula "23"))
                        (rule "eqSymm" (formula "47"))
                        (rule "eqSymm" (formula "46"))
                        (rule "unionEqualsEmpty" (formula "23"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "andLeft" (formula "23"))
                        (rule "notLeft" (formula "23"))
                        (rule "notLeft" (formula "23"))
                        (rule "eqSymm" (formula "46"))
                        (rule "eqSymm" (formula "45"))
                        (rule "unionEqualsEmpty" (formula "23"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "andLeft" (formula "23"))
                        (rule "notLeft" (formula "23"))
                        (rule "notLeft" (formula "23"))
                        (rule "eqSymm" (formula "45"))
                        (rule "eqSymm" (formula "44"))
                        (rule "unionEqualsEmpty" (formula "22"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "notLeft" (formula "22"))
                        (rule "notLeft" (formula "22"))
                        (rule "eqSymm" (formula "44"))
                        (rule "eqSymm" (formula "43"))
                        (rule "unionEqualsEmpty" (formula "21"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "notLeft" (formula "21"))
                        (rule "notLeft" (formula "21"))
                        (rule "eqSymm" (formula "43"))
                        (rule "eqSymm" (formula "42"))
                        (rule "unionEqualsEmpty" (formula "19"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "andLeft" (formula "19"))
                        (rule "notLeft" (formula "19"))
                        (rule "notLeft" (formula "19"))
                        (rule "eqSymm" (formula "42"))
                        (rule "eqSymm" (formula "41"))
                        (rule "unionEqualsEmpty" (formula "19"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "andLeft" (formula "19"))
                        (rule "notLeft" (formula "19"))
                        (rule "notLeft" (formula "19"))
                        (rule "eqSymm" (formula "41"))
                        (rule "eqSymm" (formula "40"))
                        (rule "commuteUnion_2" (formula "36") (term "0,1"))
                        (rule "commuteUnion" (formula "36") (term "1,1,1"))
                        (rule "commuteUnion" (formula "23") (term "1,1,0,1,0"))
                        (rule "commuteUnion_2" (formula "23") (term "0,0,1,0"))
                        (rule "commuteUnion" (formula "36") (term "0,0,1"))
                        (rule "commuteUnion" (formula "23") (term "0,0,0,1,0"))
                        (rule "commuteUnion_2" (formula "36") (term "0,1"))
                        (rule "commuteUnion_2" (formula "23") (term "0,0,1,0"))
                        (rule "commuteUnion_2" (formula "36") (term "1"))
                        (rule "commuteUnion_2" (formula "23") (term "0,1,0"))
                        (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "18"))
                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                        (rule "andLeft" (formula "18"))
                        (rule "andLeft" (formula "18"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "18"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "translateJavaMulInt" (formula "18") (term "1"))
                        (rule "mul_literals" (formula "18") (term "1"))
                        (rule "translateJavaMulInt" (formula "18") (term "1"))
                        (rule "mul_literals" (formula "18") (term "1"))
                        (rule "disjointDefinition" (formula "46"))
                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "114")))
                        (rule "true_left" (formula "46"))
                        (rule "disjointDefinition" (formula "45"))
                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "112")))
                        (rule "true_left" (formula "45"))
                        (rule "disjointDefinition" (formula "44"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "notLeft" (formula "44"))
                        (rule "eqSymm" (formula "65"))
                        (rule "disjointDefinition" (formula "43"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "notLeft" (formula "43"))
                        (rule "eqSymm" (formula "64"))
                        (rule "disjointDefinition" (formula "42"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "notLeft" (formula "42"))
                        (rule "eqSymm" (formula "63"))
                        (rule "disjointDefinition" (formula "41"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "notLeft" (formula "41"))
                        (rule "eqSymm" (formula "62"))
                        (rule "disjointDefinition" (formula "40"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "notLeft" (formula "40"))
                        (rule "eqSymm" (formula "61"))
                        (rule "disjointDefinition" (formula "39"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "notLeft" (formula "39"))
                        (rule "eqSymm" (formula "60"))
                        (rule "disjointDefinition" (formula "38"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "notLeft" (formula "38"))
                        (rule "eqSymm" (formula "59"))
                        (rule "disjointDefinition" (formula "37"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "notLeft" (formula "37"))
                        (rule "eqSymm" (formula "58"))
                        (rule "disjointDefinition" (formula "36"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "notLeft" (formula "36"))
                        (rule "eqSymm" (formula "57"))
                        (rule "disjointDefinition" (formula "35"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "notLeft" (formula "35"))
                        (rule "eqSymm" (formula "56"))
                        (rule "disjointDefinition" (formula "34"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "notLeft" (formula "34"))
                        (rule "eqSymm" (formula "55"))
                        (rule "disjointDefinition" (formula "33"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "notLeft" (formula "33"))
                        (rule "eqSymm" (formula "54"))
                        (rule "disjointDefinition" (formula "32"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "notLeft" (formula "32"))
                        (rule "eqSymm" (formula "53"))
                        (rule "disjointDefinition" (formula "31"))
                         (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "84")))
                        (rule "true_left" (formula "31"))
                        (rule "disjointDefinition" (formula "30"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "notLeft" (formula "30"))
                        (rule "eqSymm" (formula "51"))
                        (rule "disjointDefinition" (formula "29"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "notLeft" (formula "29"))
                        (rule "eqSymm" (formula "50"))
                        (rule "disjointDefinition" (formula "28"))
                         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "78")))
                        (rule "true_left" (formula "28"))
                        (rule "disjointDefinition" (formula "27"))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "76")))
                        (rule "true_left" (formula "27"))
                        (rule "disjointDefinition" (formula "26"))
                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "74")))
                        (rule "true_left" (formula "26"))
                        (rule "disjointDefinition" (formula "25"))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "72")))
                        (rule "true_left" (formula "25"))
                        (rule "disjointDefinition" (formula "24"))
                         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "70")))
                        (rule "true_left" (formula "24"))
                        (rule "disjointDefinition" (formula "23"))
                         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "68")))
                        (rule "true_left" (formula "23"))
                        (rule "disjointDefinition" (formula "22"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "66")))
                        (rule "true_left" (formula "22"))
                        (rule "disjointDefinition" (formula "21"))
                         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "64")))
                        (rule "true_left" (formula "21"))
                        (rule "disjointDefinition" (formula "19"))
                         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "61")))
                        (rule "true_left" (formula "19"))
                        (rule "disjointDefinition" (formula "19"))
                         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "61")))
                        (rule "true_left" (formula "19"))
                        (rule "applyEq" (formula "36") (term "0") (ifseqformula "18"))
                        (rule "applyEq" (formula "18") (term "1") (ifseqformula "36"))
                        (rule "commuteUnion_2" (formula "36") (term "0,0"))
                        (rule "commuteUnion" (formula "36") (term "1,1,0"))
                        (rule "commuteUnion" (formula "36") (term "0,0,0"))
                        (rule "commuteUnion_2" (formula "36") (term "0,0"))
                        (rule "commuteUnion_2" (formula "36") (term "0"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "true_left" (formula "36"))
                        (rule "Definition_axiom_for_isValidForLen_in_de_wiesler_SampleParameters" (formula "26") (term "0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "andLeft" (formula "28"))
                        (rule "andLeft" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "translateJavaSubInt" (formula "33") (term "0"))
                        (rule "translateJavaMod" (formula "32") (term "0"))
                        (rule "translateJavaDivInt" (formula "27") (term "1"))
                        (rule "translateJavaMulInt" (formula "33") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "33") (term "0"))
                        (rule "mul_literals" (formula "33") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "33") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "28"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "29"))
                        (rule "inEqSimp_commuteLeq" (formula "30"))
                        (rule "inEqSimp_commuteLeq" (formula "26"))
                        (rule "inEqSimp_homoInEq0" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                        (rule "mul_literals" (formula "33") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0"))
                        (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                        (rule "jmod_axiom" (formula "32") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                        (rule "polySimp_sepNegMonomial" (formula "32"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1"))
                        (rule "polySimp_rightDist" (formula "28") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1"))
                        (rule "mul_literals" (formula "28") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                        (rule "polySimp_elimOne" (formula "33") (term "0"))
                        (rule "newSym_eq" (formula "32") (inst "newSymDef=mul(int::final(result_220,
               de.wiesler.SampleParameters::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                        (rule "times_zero_1" (formula "32") (term "1,1"))
                        (rule "add_zero_right" (formula "32") (term "1"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                        (rule "eqSymm" (formula "33"))
                        (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "33"))
                        (rule "polySimp_mulAssoc" (formula "34") (term "0"))
                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "33"))
                        (rule "inEqSimp_commuteLeq" (formula "31"))
                        (rule "applyEq" (formula "30") (term "0") (ifseqformula "33"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                        (rule "elimGcdGeq_antec" (formula "30") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "30") (term "0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                        (rule "polySimp_addLiterals" (formula "30") (term "0,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0"))
                        (rule "leq_literals" (formula "30") (term "0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                        (rule "mul_literals" (formula "26") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1"))
                        (rule "polySimp_rightDist" (formula "26") (term "1"))
                        (rule "mul_literals" (formula "26") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "16"))
                        (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0"))
                        (rule "qeq_literals" (formula "26") (term "0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                        (rule "mul_literals" (formula "26") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                        (rule "mul_literals" (formula "26") (term "1"))
                        (rule "Definition_axiom_for_isInInt_in_de_wiesler_SampleParameters" (formula "46") (term "0"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "expand_inInt" (formula "46") (term "0,0"))
                        (rule "expand_inInt" (formula "46") (term "1,0"))
                        (rule "expand_inInt" (formula "46") (term "1"))
                        (rule "replace_int_MAX" (formula "46") (term "1,0,0,0"))
                        (rule "replace_int_MIN" (formula "46") (term "0,1,0,0"))
                        (rule "replace_int_MAX" (formula "46") (term "1,0,1,0"))
                        (rule "replace_int_MIN" (formula "46") (term "0,1,1,0"))
                        (rule "replace_int_MAX" (formula "46") (term "1,0,1"))
                        (rule "replace_int_MIN" (formula "46") (term "0,1,1"))
                        (rule "andLeft" (formula "46"))
                        (rule "andLeft" (formula "47"))
                        (rule "andLeft" (formula "46"))
                        (rule "andLeft" (formula "46"))
                        (rule "andLeft" (formula "48"))
                        (rule "inEqSimp_commuteLeq" (formula "51"))
                        (rule "inEqSimp_commuteLeq" (formula "47"))
                        (rule "inEqSimp_commuteLeq" (formula "49"))
                        (rule "applyEq" (formula "51") (term "0") (ifseqformula "34"))
                        (rule "applyEq" (formula "50") (term "0") (ifseqformula "34"))
                        (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "30"))
                        (rule "leq_literals" (formula "49") (term "0"))
                         (builtin "One Step Simplification" (formula "49"))
                        (rule "true_left" (formula "49"))
                        (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "27"))
                        (rule "leq_literals" (formula "47") (term "0"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "true_left" (formula "47"))
                        (rule "inEqSimp_subsumption6" (formula "49") (ifseqformula "31"))
                        (rule "mul_literals" (formula "49") (term "1,1,0"))
                        (rule "greater_literals" (formula "49") (term "0,0"))
                         (builtin "One Step Simplification" (formula "49"))
                        (rule "leq_literals" (formula "49") (term "0"))
                         (builtin "One Step Simplification" (formula "49"))
                        (rule "true_left" (formula "49"))
                        (rule "elimGcdLeq_antec" (formula "48") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))"))
                        (rule "leq_literals" (formula "48") (term "0,0"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "neg_literal" (formula "48") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                        (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "48") (term "0,0,0,0"))
                        (rule "add_literals" (formula "48") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                        (rule "add_literals" (formula "48") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "48") (term "1,0,0"))
                        (rule "add_zero_right" (formula "48") (term "0,0"))
                        (rule "qeq_literals" (formula "48") (term "0"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "36") (term "0") (inst "i=i"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "expand_inInt" (formula "36") (term "1,0,0"))
                        (rule "replace_int_MAX" (formula "36") (term "1,0,1,0,0"))
                        (rule "replace_int_MIN" (formula "36") (term "0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "36") (term "1,1,0,0,0"))
                        (rule "translateJavaAddInt" (formula "36") (term "0,2,1,1,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "36") (term "1,1,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "36") (term "0,2,1,1,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "1,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "36") (term "0,1,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "0,1,1,0,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,0,1,1,0,0,0"))
                        (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "notLeft" (formula "9"))
                        (rule "notLeft" (formula "8"))
                        (rule "andLeft" (formula "7"))
                        (rule "notLeft" (formula "8"))
                        (rule "andLeft" (formula "7"))
                        (rule "notLeft" (formula "8"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "notLeft" (formula "9"))
                        (rule "andLeft" (formula "7"))
                        (rule "notLeft" (formula "9"))
                        (rule "notLeft" (formula "7"))
                        (rule "notLeft" (formula "7"))
                        (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "44"))
                        (rule "andLeft" (formula "44"))
                        (rule "notLeft" (formula "45"))
                        (rule "andLeft" (formula "44"))
                        (rule "andLeft" (formula "44"))
                        (rule "notLeft" (formula "46"))
                        (rule "notLeft" (formula "45"))
                        (rule "andLeft" (formula "44"))
                        (rule "andLeft" (formula "44"))
                        (rule "notLeft" (formula "46"))
                        (rule "andLeft" (formula "44"))
                        (rule "notLeft" (formula "46"))
                        (rule "notLeft" (formula "45"))
                        (rule "andLeft" (formula "44"))
                        (rule "notLeft" (formula "45"))
                        (rule "notLeft" (formula "44"))
                        (rule "commute_and" (formula "107"))
                        (rule "commute_or" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_or_subsumption3" (formula "13") (term "0,0"))
                        (rule "qeq_literals" (formula "13") (term "0,1,0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "cut_direct" (formula "20") (term "0,0"))
                        (branch "CUT: result_219 = null TRUE"
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "nnf_imp2or" (formula "35") (term "0"))
                           (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                           (rule "qeq_literals" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "arrayLengthIsAShort" (formula "43") (term "0"))
                           (rule "expand_inShort" (formula "43"))
                           (rule "replace_short_MAX" (formula "43") (term "1,0"))
                           (rule "replace_short_MIN" (formula "43") (term "0,1"))
                           (rule "andLeft" (formula "43"))
                           (rule "inEqSimp_commuteLeq" (formula "44"))
                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "45"))
                           (rule "leq_literals" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                           (rule "qeq_literals" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "arrayLengthNotNegative" (formula "42") (term "0"))
                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                           (rule "qeq_literals" (formula "42"))
                           (rule "true_left" (formula "42"))
                           (rule "arrayLengthIsAShort" (formula "42") (term "0"))
                           (rule "expand_inShort" (formula "42"))
                           (rule "replace_short_MAX" (formula "42") (term "1,0"))
                           (rule "replace_short_MIN" (formula "42") (term "0,1"))
                           (rule "andLeft" (formula "42"))
                           (rule "inEqSimp_commuteLeq" (formula "43"))
                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "44"))
                           (rule "leq_literals" (formula "42"))
                           (rule "true_left" (formula "42"))
                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                           (rule "qeq_literals" (formula "42"))
                           (rule "true_left" (formula "42"))
                           (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                           (rule "qeq_literals" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "arrayLengthIsAShort" (formula "41") (term "0"))
                           (rule "expand_inShort" (formula "41"))
                           (rule "replace_short_MAX" (formula "41") (term "1,0"))
                           (rule "replace_short_MIN" (formula "41") (term "0,1"))
                           (rule "andLeft" (formula "41"))
                           (rule "inEqSimp_commuteLeq" (formula "42"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                           (rule "leq_literals" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                           (rule "qeq_literals" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "arrayLengthIsAShort" (formula "40") (term "0"))
                           (rule "expand_inShort" (formula "40"))
                           (rule "replace_short_MIN" (formula "40") (term "0,1"))
                           (rule "replace_short_MAX" (formula "40") (term "1,0"))
                           (rule "andLeft" (formula "40"))
                           (rule "inEqSimp_commuteLeq" (formula "41"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                           (rule "qeq_literals" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                           (rule "leq_literals" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                           (rule "qeq_literals" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "arrayLengthIsAShort" (formula "39") (term "0"))
                           (rule "expand_inShort" (formula "39"))
                           (rule "replace_short_MIN" (formula "39") (term "0,1"))
                           (rule "replace_short_MAX" (formula "39") (term "1,0"))
                           (rule "andLeft" (formula "39"))
                           (rule "inEqSimp_commuteLeq" (formula "40"))
                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                           (rule "qeq_literals" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                           (rule "leq_literals" (formula "39"))
                           (rule "closeFalse" (formula "39"))
                        )
                        (branch "CUT: result_219 = null FALSE"
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "nnf_imp2or" (formula "35") (term "0"))
                           (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                           (rule "qeq_literals" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "arrayLengthIsAShort" (formula "43") (term "0"))
                           (rule "expand_inShort" (formula "43"))
                           (rule "replace_short_MIN" (formula "43") (term "0,1"))
                           (rule "replace_short_MAX" (formula "43") (term "1,0"))
                           (rule "andLeft" (formula "43"))
                           (rule "inEqSimp_commuteLeq" (formula "44"))
                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                           (rule "qeq_literals" (formula "44"))
                           (rule "true_left" (formula "44"))
                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                           (rule "leq_literals" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "arrayLengthNotNegative" (formula "42") (term "0"))
                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                           (rule "qeq_literals" (formula "42"))
                           (rule "true_left" (formula "42"))
                           (rule "arrayLengthIsAShort" (formula "42") (term "0"))
                           (rule "expand_inShort" (formula "42"))
                           (rule "replace_short_MIN" (formula "42") (term "0,1"))
                           (rule "replace_short_MAX" (formula "42") (term "1,0"))
                           (rule "andLeft" (formula "42"))
                           (rule "inEqSimp_commuteLeq" (formula "43"))
                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                           (rule "qeq_literals" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                           (rule "leq_literals" (formula "42"))
                           (rule "true_left" (formula "42"))
                           (rule "arrayLengthIsAShort" (formula "41") (term "0"))
                           (rule "expand_inShort" (formula "41"))
                           (rule "replace_short_MAX" (formula "41") (term "1,0"))
                           (rule "replace_short_MIN" (formula "41") (term "0,1"))
                           (rule "andLeft" (formula "41"))
                           (rule "inEqSimp_commuteLeq" (formula "42"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                           (rule "leq_literals" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                           (rule "qeq_literals" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                           (rule "qeq_literals" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "arrayLengthIsAShort" (formula "40") (term "0"))
                           (rule "expand_inShort" (formula "40"))
                           (rule "replace_short_MAX" (formula "40") (term "1,0"))
                           (rule "replace_short_MIN" (formula "40") (term "0,1"))
                           (rule "andLeft" (formula "40"))
                           (rule "inEqSimp_commuteLeq" (formula "41"))
                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "42"))
                           (rule "leq_literals" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                           (rule "qeq_literals" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                           (rule "qeq_literals" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "arrayLengthIsAShort" (formula "39") (term "0"))
                           (rule "expand_inShort" (formula "39"))
                           (rule "replace_short_MAX" (formula "39") (term "1,0"))
                           (rule "replace_short_MIN" (formula "39") (term "0,1"))
                           (rule "andLeft" (formula "39"))
                           (rule "inEqSimp_commuteLeq" (formula "40"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "41"))
                           (rule "leq_literals" (formula "39"))
                           (rule "closeFalse" (formula "39"))
                        )
                     )
                     (branch "Usage"
                         (builtin "One Step Simplification" (formula "88"))
                        (rule "translateJavaAddInt" (formula "88") (term "0,1,0"))
                        (rule "variableDeclarationAssign" (formula "88") (term "1"))
                        (rule "variableDeclaration" (formula "88") (term "1") (newnames "var_3"))
                        (rule "assignmentSubtractionInt" (formula "88") (term "1"))
                        (branch "Overflow check"
                            (builtin "One Step Simplification" (formula "88"))
                           (rule "expand_inInt" (formula "88"))
                           (rule "replace_int_MAX" (formula "88") (term "1,0"))
                           (rule "replace_int_MIN" (formula "88") (term "0,1"))
                           (rule "polySimp_elimSub" (formula "88") (term "1,1"))
                           (rule "mul_literals" (formula "88") (term "1,1,1"))
                           (rule "polySimp_elimSub" (formula "88") (term "0,0"))
                           (rule "mul_literals" (formula "88") (term "1,0,0"))
                           (rule "polySimp_addComm0" (formula "88") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "88") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "88") (term "1"))
                           (rule "mul_literals" (formula "88") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "88") (term "0,1"))
                           (rule "add_literals" (formula "88") (term "0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "88") (term "0"))
                           (rule "polySimp_mulComm0" (formula "88") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "88") (term "1,0,0"))
                           (rule "mul_literals" (formula "88") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "88") (term "0,0"))
                           (rule "add_literals" (formula "88") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                           (rule "mul_literals" (formula "19") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1"))
                           (rule "mul_literals" (formula "88") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "88") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "88") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "88") (term "0,0"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0"))
                           (rule "qeq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
                           (rule "leq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "11"))
                           (rule "leq_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "13") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "13"))
                           (rule "leq_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "17"))
                           (rule "mul_literals" (formula "4") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "10"))
                           (rule "leq_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "12"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                           (rule "mul_literals" (formula "16") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "16"))
                           (rule "leq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
                           (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                           (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "notLeft" (formula "33"))
                           (rule "notLeft" (formula "32"))
                           (rule "andLeft" (formula "31"))
                           (rule "notLeft" (formula "32"))
                           (rule "andLeft" (formula "31"))
                           (rule "notLeft" (formula "32"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "notLeft" (formula "33"))
                           (rule "andLeft" (formula "31"))
                           (rule "notLeft" (formula "33"))
                           (rule "notLeft" (formula "31"))
                           (rule "notLeft" (formula "31"))
                           (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "notLeft" (formula "8"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "notLeft" (formula "9"))
                           (rule "notLeft" (formula "8"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "notLeft" (formula "9"))
                           (rule "andLeft" (formula "7"))
                           (rule "notLeft" (formula "9"))
                           (rule "notLeft" (formula "8"))
                           (rule "andLeft" (formula "7"))
                           (rule "notLeft" (formula "8"))
                           (rule "notLeft" (formula "7"))
                           (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "29"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "andLeft" (formula "29"))
                           (rule "andLeft" (formula "30"))
                           (rule "andLeft" (formula "29"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "29"))
                           (rule "andLeft" (formula "32"))
                           (rule "andLeft" (formula "29"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "29"))
                           (rule "andLeft" (formula "34"))
                           (rule "andLeft" (formula "29"))
                           (rule "andLeft" (formula "35"))
                           (rule "andLeft" (formula "29"))
                           (rule "andLeft" (formula "36"))
                           (rule "andLeft" (formula "29"))
                           (rule "andLeft" (formula "37"))
                           (rule "andLeft" (formula "29"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "translateJavaMulInt" (formula "32") (term "1"))
                           (rule "mul_literals" (formula "32") (term "1"))
                           (rule "translateJavaMulInt" (formula "31") (term "1"))
                           (rule "mul_literals" (formula "31") (term "1"))
                           (rule "disjointDefinition" (formula "65"))
                            (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "122")))
                           (rule "true_left" (formula "65"))
                           (rule "disjointDefinition" (formula "64"))
                            (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "120")))
                           (rule "true_left" (formula "64"))
                           (rule "disjointDefinition" (formula "63"))
                            (builtin "One Step Simplification" (formula "63"))
                           (rule "notLeft" (formula "63"))
                           (rule "eqSymm" (formula "65"))
                           (rule "disjointDefinition" (formula "62"))
                            (builtin "One Step Simplification" (formula "62"))
                           (rule "notLeft" (formula "62"))
                           (rule "eqSymm" (formula "64"))
                           (rule "disjointDefinition" (formula "61"))
                            (builtin "One Step Simplification" (formula "61"))
                           (rule "notLeft" (formula "61"))
                           (rule "eqSymm" (formula "63"))
                           (rule "disjointDefinition" (formula "60"))
                            (builtin "One Step Simplification" (formula "60"))
                           (rule "notLeft" (formula "60"))
                           (rule "eqSymm" (formula "62"))
                           (rule "disjointDefinition" (formula "59"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "notLeft" (formula "59"))
                           (rule "eqSymm" (formula "61"))
                           (rule "disjointDefinition" (formula "58"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "notLeft" (formula "58"))
                           (rule "eqSymm" (formula "60"))
                           (rule "disjointDefinition" (formula "57"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "notLeft" (formula "57"))
                           (rule "eqSymm" (formula "59"))
                           (rule "disjointDefinition" (formula "56"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "notLeft" (formula "56"))
                           (rule "eqSymm" (formula "58"))
                           (rule "disjointDefinition" (formula "55"))
                            (builtin "One Step Simplification" (formula "55"))
                           (rule "notLeft" (formula "55"))
                           (rule "eqSymm" (formula "57"))
                           (rule "disjointDefinition" (formula "54"))
                            (builtin "One Step Simplification" (formula "54"))
                           (rule "notLeft" (formula "54"))
                           (rule "eqSymm" (formula "56"))
                           (rule "disjointDefinition" (formula "53"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "notLeft" (formula "53"))
                           (rule "eqSymm" (formula "55"))
                           (rule "disjointDefinition" (formula "52"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "notLeft" (formula "52"))
                           (rule "eqSymm" (formula "54"))
                           (rule "disjointDefinition" (formula "51"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "notLeft" (formula "51"))
                           (rule "eqSymm" (formula "53"))
                           (rule "disjointDefinition" (formula "50"))
                            (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "92")))
                           (rule "true_left" (formula "50"))
                           (rule "disjointDefinition" (formula "49"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "notLeft" (formula "49"))
                           (rule "eqSymm" (formula "51"))
                           (rule "disjointDefinition" (formula "48"))
                            (builtin "One Step Simplification" (formula "48"))
                           (rule "notLeft" (formula "48"))
                           (rule "eqSymm" (formula "50"))
                           (rule "disjointDefinition" (formula "47"))
                            (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "86")))
                           (rule "true_left" (formula "47"))
                           (rule "disjointDefinition" (formula "46"))
                            (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "84")))
                           (rule "true_left" (formula "46"))
                           (rule "disjointDefinition" (formula "45"))
                            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "82")))
                           (rule "true_left" (formula "45"))
                           (rule "disjointDefinition" (formula "44"))
                            (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "80")))
                           (rule "true_left" (formula "44"))
                           (rule "disjointDefinition" (formula "43"))
                            (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "78")))
                           (rule "true_left" (formula "43"))
                           (rule "disjointDefinition" (formula "42"))
                            (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "76")))
                           (rule "true_left" (formula "42"))
                           (rule "disjointDefinition" (formula "41"))
                            (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "74")))
                           (rule "true_left" (formula "41"))
                           (rule "disjointDefinition" (formula "40"))
                            (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "72")))
                           (rule "true_left" (formula "40"))
                           (rule "disjointDefinition" (formula "39"))
                            (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "70")))
                           (rule "true_left" (formula "39"))
                           (rule "disjointDefinition" (formula "38"))
                            (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "68")))
                           (rule "true_left" (formula "38"))
                           (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "37"))
                           (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "37"))
                           (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "37"))
                           (rule "distributeIntersection" (formula "19") (term "0"))
                           (rule "distributeIntersection" (formula "18") (term "0"))
                           (rule "unionEqualsEmpty" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "distributeIntersection" (formula "18") (term "0,0"))
                           (rule "distributeIntersection" (formula "18") (term "1,0"))
                           (rule "distributeIntersection" (formula "20") (term "0"))
                           (rule "distributeIntersection" (formula "19") (term "0"))
                           (rule "distributeIntersection" (formula "18") (term "1,0,0"))
                           (rule "distributeIntersection" (formula "18") (term "0,0,0"))
                           (rule "distributeIntersection" (formula "18") (term "1,1,0"))
                           (rule "distributeIntersection" (formula "18") (term "0,1,0"))
                           (rule "distributeIntersection" (formula "20") (term "0,0"))
                           (rule "distributeIntersection" (formula "20") (term "1,0"))
                           (rule "distributeIntersection" (formula "19") (term "1,0"))
                           (rule "distributeIntersection" (formula "19") (term "0,0"))
                           (rule "unionEqualsEmpty" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "unionEqualsEmpty" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "unionEqualsEmpty" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "unionEqualsEmpty" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "unionEqualsEmpty" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "unionEqualsEmpty" (formula "24"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "andLeft" (formula "24"))
                           (rule "notLeft" (formula "24"))
                           (rule "notLeft" (formula "24"))
                           (rule "eqSymm" (formula "46"))
                           (rule "eqSymm" (formula "45"))
                           (rule "unionEqualsEmpty" (formula "24"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "andLeft" (formula "24"))
                           (rule "notLeft" (formula "24"))
                           (rule "notLeft" (formula "24"))
                           (rule "eqSymm" (formula "45"))
                           (rule "eqSymm" (formula "44"))
                           (rule "unionEqualsEmpty" (formula "23"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "notLeft" (formula "23"))
                           (rule "notLeft" (formula "23"))
                           (rule "eqSymm" (formula "44"))
                           (rule "eqSymm" (formula "43"))
                           (rule "unionEqualsEmpty" (formula "22"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "andLeft" (formula "22"))
                           (rule "notLeft" (formula "23"))
                           (rule "notLeft" (formula "22"))
                           (rule "eqSymm" (formula "43"))
                           (rule "eqSymm" (formula "42"))
                           (rule "unionEqualsEmpty" (formula "20"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "notLeft" (formula "20"))
                           (rule "notLeft" (formula "20"))
                           (rule "eqSymm" (formula "42"))
                           (rule "eqSymm" (formula "41"))
                           (rule "unionEqualsEmpty" (formula "20"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "notLeft" (formula "20"))
                           (rule "notLeft" (formula "20"))
                           (rule "eqSymm" (formula "41"))
                           (rule "eqSymm" (formula "40"))
                           (rule "unionEqualsEmpty" (formula "18"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "eqSymm" (formula "40"))
                           (rule "eqSymm" (formula "39"))
                           (rule "unionEqualsEmpty" (formula "18"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "eqSymm" (formula "39"))
                           (rule "eqSymm" (formula "38"))
                           (rule "commuteUnion" (formula "35") (term "0,0,1"))
                           (rule "commuteUnion" (formula "35") (term "1,1,1"))
                           (rule "commuteUnion_2" (formula "22") (term "0,0,1,0"))
                           (rule "commuteUnion" (formula "22") (term "1,1,0,1,0"))
                           (rule "commuteUnion" (formula "35") (term "0,1"))
                           (rule "commuteUnion" (formula "22") (term "0,0,0,1,0"))
                           (rule "commuteUnion_2" (formula "22") (term "0,0,1,0"))
                           (rule "commuteUnion_2" (formula "22") (term "0,1,0"))
                           (rule "Definition_axiom_for_isValidForLen_in_de_wiesler_SampleParameters" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "26"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "translateJavaMulInt" (formula "32") (term "0,0"))
                           (rule "translateJavaMod" (formula "31") (term "0"))
                           (rule "translateJavaDivInt" (formula "26") (term "1"))
                           (rule "translateJavaSubInt" (formula "32") (term "0"))
                           (rule "polySimp_elimSub" (formula "32") (term "0"))
                           (rule "mul_literals" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "27"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29"))
                           (rule "inEqSimp_commuteLeq" (formula "28"))
                           (rule "inEqSimp_commuteLeq" (formula "25"))
                           (rule "inEqSimp_homoInEq0" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                           (rule "jmod_axiom" (formula "31") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                           (rule "polySimp_sepNegMonomial" (formula "31"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,1"))
                           (rule "mul_literals" (formula "27") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "104") (term "1") (ifseqformula "29"))
                           (rule "leq_literals" (formula "104") (term "0,1"))
                            (builtin "One Step Simplification" (formula "104"))
                           (rule "inEqSimp_leqRight" (formula "104"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "1"))
                           (rule "leq_literals" (formula "30") (term "0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "newSym_eq" (formula "31") (inst "newSymDef=mul(int::final(result_220,
               de.wiesler.SampleParameters::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                           (rule "times_zero_1" (formula "31") (term "1,1"))
                           (rule "add_zero_right" (formula "31") (term "1"))
                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                           (rule "eqSymm" (formula "32"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "32"))
                           (rule "inEqSimp_commuteLeq" (formula "30"))
                           (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "32"))
                           (rule "polySimp_mulAssoc" (formula "33") (term "0"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                           (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(5(2(8(1(4(7(3(7(0(1(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "leq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                           (rule "mul_literals" (formula "26") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                           (rule "mul_literals" (formula "26") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "29"))
                           (rule "mul_literals" (formula "27") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1"))
                           (rule "mul_literals" (formula "27") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0"))
                           (rule "qeq_literals" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "35") (term "0") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "expand_inInt" (formula "35") (term "1,0,0"))
                           (rule "replace_int_MAX" (formula "35") (term "1,0,1,0,0"))
                           (rule "replace_int_MIN" (formula "35") (term "0,1,1,0,0"))
                           (rule "translateJavaAddInt" (formula "35") (term "0,2,1,1,0"))
                           (rule "translateJavaSubInt" (formula "35") (term "1,1,0,0,0"))
                           (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "1,1,1,0,0,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "0,2,1,1,0"))
                           (rule "polySimp_addComm1" (formula "35") (term "1,1,0,0,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "0,1,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "35") (term "1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,1,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,0,1,1,0,0,0"))
                           (rule "Definition_axiom_for_isInInt_in_de_wiesler_SampleParameters" (formula "45") (term "0"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "expand_inInt" (formula "45") (term "0,0"))
                           (rule "expand_inInt" (formula "45") (term "1,0"))
                           (rule "expand_inInt" (formula "45") (term "1"))
                           (rule "replace_int_MIN" (formula "45") (term "0,1,0,0"))
                           (rule "replace_int_MAX" (formula "45") (term "1,0,0,0"))
                           (rule "replace_int_MAX" (formula "45") (term "1,0,1,0"))
                           (rule "replace_int_MIN" (formula "45") (term "0,1,1,0"))
                           (rule "replace_int_MIN" (formula "45") (term "0,1,1"))
                           (rule "replace_int_MAX" (formula "45") (term "1,0,1"))
                           (rule "andLeft" (formula "45"))
                           (rule "andLeft" (formula "45"))
                           (rule "andLeft" (formula "47"))
                           (rule "andLeft" (formula "46"))
                           (rule "andLeft" (formula "45"))
                           (rule "inEqSimp_commuteLeq" (formula "50"))
                           (rule "inEqSimp_commuteLeq" (formula "48"))
                           (rule "inEqSimp_commuteLeq" (formula "46"))
                           (rule "applyEq" (formula "50") (term "0") (ifseqformula "33"))
                           (rule "applyEq" (formula "49") (term "0") (ifseqformula "33"))
                           (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "27"))
                           (rule "leq_literals" (formula "46") (term "0"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "30"))
                           (rule "leq_literals" (formula "47") (term "0"))
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "true_left" (formula "47"))
                           (rule "inEqSimp_contradInEq5" (formula "47") (ifseqformula "1"))
                           (rule "mul_literals" (formula "47") (term "1,1,0"))
                           (rule "greater_literals" (formula "47") (term "0,0"))
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "qeq_literals" (formula "47") (term "0"))
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "closeFalse" (formula "47"))
                        )
                        (branch "Usage"
                            (builtin "One Step Simplification" (formula "88"))
                           (rule "translateJavaSubInt" (formula "88") (term "0,1,0"))
                           (rule "polySimp_elimSub" (formula "88") (term "0,1,0"))
                           (rule "mul_literals" (formula "88") (term "1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "88") (term "0,1,0"))
                           (rule "variableDeclarationAssign" (formula "88") (term "1"))
                           (rule "variableDeclaration" (formula "88") (term "1") (newnames "var_4"))
                           (rule "assignment" (formula "88") (term "1"))
                            (builtin "One Step Simplification" (formula "88"))
                           (rule "variableDeclarationAssign" (formula "88") (term "1"))
                           (rule "variableDeclaration" (formula "88") (term "1") (newnames "var_5"))
                           (rule "assignment" (formula "88") (term "1"))
                            (builtin "One Step Simplification" (formula "88"))
                            (builtin "Use Operation Contract" (formula "88") (newnames "heapBefore_copy_unique,result_221,exc_261,heapAfter_copy_unique,anon_heap_copy_unique") (contract "de.wiesler.Functions[de.wiesler.Functions::copy_unique([I,int,int,int,int,[I)].JML normal_behavior operation contract.0"))
                           (branch "Post (copy_unique)"
                               (builtin "One Step Simplification" (formula "90"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "expand_inInt" (formula "38") (term "1,0,0,1,0,0,1,1,0,1"))
                              (rule "expand_inInt" (formula "38") (term "0,1,0,1"))
                              (rule "expand_inInt" (formula "38") (term "1,0,0,0,1,1,0,1"))
                              (rule "expand_inInt" (formula "38") (term "1,0,0,0,1,1,1,0,1"))
                              (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
                              (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0,1,0,0,1,1,0,1"))
                              (rule "replace_int_MAX" (formula "38") (term "1,0,0,1,0,1"))
                              (rule "replace_int_MIN" (formula "38") (term "0,1,0,1,0,1"))
                              (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0,0,1,1,0,1"))
                              (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0,0,1,1,0,1"))
                              (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0,0,1,1,1,0,1"))
                              (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0,0,1,1,1,0,1"))
                              (rule "andLeft" (formula "38"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "40"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "42"))
                              (rule "andLeft" (formula "43"))
                              (rule "translateJavaSubInt" (formula "38") (term "2,1,0"))
                              (rule "translateJavaSubInt" (formula "42") (term "1,0,1,0"))
                              (rule "translateJavaAddInt" (formula "42") (term "0,2,1,1,1,0"))
                              (rule "polySimp_elimSub" (formula "38") (term "2,1,0"))
                              (rule "mul_literals" (formula "38") (term "1,2,1,0"))
                              (rule "polySimp_elimSub" (formula "42") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "42") (term "1,1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "42") (term "0,2,1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "38") (term "2,1,0"))
                              (rule "add_literals" (formula "38") (term "0,2,1,0"))
                              (rule "polySimp_addComm0" (formula "42") (term "1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "41") (term "1,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "41") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "40"))
                              (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "42") (term "1,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "43"))
                              (rule "assignment" (formula "97") (term "1"))
                               (builtin "One Step Simplification" (formula "97"))
                              (rule "blockEmpty" (formula "97") (term "1"))
                              (rule "variableDeclarationGhostAssign" (formula "97") (term "1"))
                              (rule "variableDeclarationGhost" (formula "97") (term "1") (newnames "before_from_sorted_samples"))
                              (rule "assignment" (formula "97") (term "1"))
                               (builtin "One Step Simplification" (formula "97"))
                               (builtin "Block Contract (Internal)" (formula "97") (newnames "anonOut_heap_0,result_222,exc_262,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
                              (branch "Validity"
                                  (builtin "One Step Simplification" (formula "98"))
                                  (builtin "One Step Simplification" (formula "46"))
                                 (rule "andLeft" (formula "46"))
                                 (rule "translateJavaSubInt" (formula "46") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "46") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                                 (rule "narrowSelectArrayType" (formula "98") (term "2,0,1,0") (ifseqformula "46") (ifseqformula "97"))
                                 (rule "variableDeclarationAssign" (formula "98") (term "1"))
                                 (rule "variableDeclaration" (formula "98") (term "1") (newnames "exc_262_1"))
                                 (rule "assignment" (formula "98") (term "1"))
                                  (builtin "One Step Simplification" (formula "98"))
                                 (rule "emptyStatement" (formula "98") (term "1"))
                                  (builtin "One Step Simplification" (formula "98"))
                                 (rule "emptyStatement" (formula "98") (term "1"))
                                 (rule "commute_and" (formula "41") (term "1,0,0"))
                                 (rule "commute_and" (formula "41") (term "0,0,0"))
                                 (rule "commute_and" (formula "42") (term "0,0,0"))
                                 (rule "commute_and" (formula "42") (term "1,0,0"))
                                 (rule "commute_and" (formula "41") (term "1,0,0,1,0"))
                                 (rule "commute_and" (formula "41") (term "0,0,0,1,0"))
                                 (rule "commute_and_2" (formula "41") (term "0,0,1,0"))
                                 (rule "shift_paren_and" (formula "41") (term "0,0"))
                                 (rule "commute_and_2" (formula "41") (term "0,0,0"))
                                 (rule "shift_paren_and" (formula "42") (term "0,0"))
                                 (rule "commute_and_2" (formula "42") (term "0,0,0"))
                                 (rule "tryEmpty" (formula "98") (term "1"))
                                 (rule "blockEmptyLabel" (formula "98") (term "1"))
                                 (rule "blockEmpty" (formula "98") (term "1"))
                                 (rule "methodCallEmpty" (formula "98") (term "1"))
                                  (builtin "One Step Simplification" (formula "98"))
                                 (rule "emptyModality" (formula "98") (term "1"))
                                  (builtin "One Step Simplification" (formula "98"))
                                 (rule "closeTrue" (formula "98"))
                              )
                              (branch "Precondition"
                                 (rule "andRight" (formula "97"))
                                 (branch
                                     (builtin "One Step Simplification" (formula "97"))
                                    (rule "translateJavaSubInt" (formula "97") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "97") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "97") (term "0,0"))
                                    (rule "close" (formula "97") (ifseqformula "9"))
                                 )
                                 (branch
                                     (builtin "One Step Simplification" (formula "97"))
                                    (rule "wellFormedAnonEQ" (formula "97") (ifseqformula "38"))
                                    (rule "wellFormedAnonEQ" (formula "97") (term "0") (ifseqformula "28"))
                                    (rule "wellFormedAnon" (formula "97") (term "0,0"))
                                    (rule "replace_known_left" (formula "97") (term "1,0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "1")) (ifInst ""  (formula "25")) (ifInst ""  (formula "37")))
                                    (rule "closeTrue" (formula "97"))
                                 )
                              )
                              (branch "Usage"
                                  (builtin "One Step Simplification" (formula "98"))
                                  (builtin "One Step Simplification" (formula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0,1,0") (ifseqformula "38"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,1,1,0") (ifseqformula "38"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,1,1,1,0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,1,0,1,0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "46"))
                                 (rule "andLeft" (formula "46"))
                                 (rule "andLeft" (formula "46"))
                                 (rule "andLeft" (formula "47"))
                                 (rule "andLeft" (formula "46"))
                                 (rule "eqSymm" (formula "50"))
                                 (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "true_left" (formula "49"))
                                 (rule "commute_or_2" (formula "48") (term "1"))
                                 (rule "shift_paren_or" (formula "48"))
                                 (rule "commute_or_2" (formula "48") (term "1,0"))
                                 (rule "shift_paren_or" (formula "48") (term "0"))
                                 (rule "shift_paren_or" (formula "48") (term "0,0"))
                                 (rule "commute_and" (formula "41") (term "1,0,0"))
                                 (rule "commute_and" (formula "41") (term "0,0,0"))
                                 (rule "commute_and" (formula "42") (term "0,0,0"))
                                 (rule "commute_and" (formula "42") (term "1,0,0"))
                                 (rule "shift_paren_or" (formula "48") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "48"))
                                 (rule "commute_and" (formula "41") (term "1,0,0,1,0"))
                                 (rule "commute_and" (formula "41") (term "0,0,0,1,0"))
                                 (rule "commute_and_2" (formula "41") (term "0,0,1,0"))
                                 (rule "shift_paren_and" (formula "41") (term "0,0"))
                                 (rule "commute_and_2" (formula "41") (term "0,0,0"))
                                 (rule "shift_paren_and" (formula "42") (term "0,0"))
                                 (rule "commute_and_2" (formula "42") (term "0,0,0"))
                                 (rule "onlyCreatedObjectsAreReferencedFinal" (formula "60") (term "0") (ifseqformula "1") (ifseqformula "8"))
                                 (rule "onlyCreatedObjectsAreReferencedFinal" (formula "67") (term "0") (ifseqformula "2") (ifseqformula "9"))
                                 (rule "onlyCreatedObjectsAreReferencedFinal" (formula "69") (term "0") (ifseqformula "3") (ifseqformula "10"))
                                 (rule "onlyCreatedObjectsAreReferencedFinal" (formula "72") (term "0") (ifseqformula "4") (ifseqformula "11"))
                                 (rule "onlyCreatedObjectsAreReferencedFinal" (formula "84") (term "1") (ifseqformula "5") (ifseqformula "12"))
                                 (rule "onlyCreatedObjectsAreReferencedFinal" (formula "87") (term "0") (ifseqformula "6") (ifseqformula "13"))
                                 (rule "onlyCreatedObjectsAreReferencedFinal" (formula "76") (term "1") (ifseqformula "7") (ifseqformula "14"))
                                 (rule "onlyCreatedObjectsAreReferencedFinal" (formula "99") (term "1") (ifseqformula "8") (ifseqformula "15"))
                                 (rule "shift_paren_and" (formula "49") (term "0,0,0,1,0"))
                                 (rule "ifUnfold" (formula "109") (term "1") (inst "#boolv=x"))
                                 (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_1"))
                                 (rule "inequality_comparison_simple" (formula "109") (term "1"))
                                  (builtin "One Step Simplification" (formula "109"))
                                 (rule "replace_known_left" (formula "109") (term "0,0,1,0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "109"))
                                 (rule "ifSplit" (formula "109"))
                                 (branch "if x_1 true"
                                     (builtin "One Step Simplification" (formula "110"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_1 false"
                                     (builtin "One Step Simplification" (formula "110"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "blockEmpty" (formula "109") (term "1"))
                                     (builtin "Block Contract (Internal)" (formula "109") (newnames "anonOut_heap_1,result_223,exc_263,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
                                    (branch "Validity"
                                        (builtin "One Step Simplification" (formula "110"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "andLeft" (formula "58"))
                                       (rule "translateJavaSubInt" (formula "58") (term "0,0"))
                                       (rule "polySimp_elimSub" (formula "58") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "58") (term "0,0"))
                                       (rule "variableDeclarationAssign" (formula "110") (term "1"))
                                       (rule "variableDeclaration" (formula "110") (term "1") (newnames "exc_263_1"))
                                       (rule "assignment" (formula "110") (term "1"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "emptyStatement" (formula "110") (term "1"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "emptyStatement" (formula "110") (term "1"))
                                       (rule "tryEmpty" (formula "110") (term "1"))
                                       (rule "blockEmptyLabel" (formula "110") (term "1"))
                                       (rule "blockEmpty" (formula "110") (term "1"))
                                       (rule "methodCallEmpty" (formula "110") (term "1"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "emptyModality" (formula "110") (term "1"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "closeTrue" (formula "110"))
                                    )
                                    (branch "Precondition"
                                       (rule "andRight" (formula "109"))
                                       (branch
                                           (builtin "One Step Simplification" (formula "109"))
                                          (rule "translateJavaSubInt" (formula "109") (term "0,0"))
                                          (rule "polySimp_elimSub" (formula "109") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "109") (term "0,0"))
                                          (rule "close" (formula "109") (ifseqformula "17"))
                                       )
                                       (branch
                                           (builtin "One Step Simplification" (formula "109"))
                                          (rule "wellFormedAnon" (formula "109"))
                                          (rule "wellFormedAnonEQ" (formula "109") (term "0") (ifseqformula "46"))
                                          (rule "wellFormedAnonEQ" (formula "109") (term "0,0") (ifseqformula "36"))
                                          (rule "wellFormedAnon" (formula "109") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "109") (term "1,0,0,0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "9")) (ifInst ""  (formula "35")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")))
                                          (rule "closeTrue" (formula "109"))
                                       )
                                    )
                                    (branch "Usage"
                                        (builtin "One Step Simplification" (formula "110"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,1,0,1,0") (ifseqformula "46"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,1,1,1,0") (ifseqformula "46"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,1,1,1,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,1,0,1,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "andLeft" (formula "58"))
                                       (rule "andLeft" (formula "58"))
                                       (rule "andLeft" (formula "59"))
                                       (rule "andLeft" (formula "58"))
                                       (rule "replace_known_left" (formula "61") (term "0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "true_left" (formula "61"))
                                       (rule "shift_paren_or" (formula "60"))
                                       (rule "commute_or_2" (formula "60") (term "1,0"))
                                       (rule "shift_paren_or" (formula "60") (term "0"))
                                       (rule "commute_or_2" (formula "60") (term "1,0,0"))
                                       (rule "shift_paren_or" (formula "60") (term "0,0"))
                                       (rule "shift_paren_or" (formula "60") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "60") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "60"))
                                       (rule "commute_or_2" (formula "60") (term "0"))
                                       (rule "commute_or_2" (formula "60"))
                                       (rule "ifUnfold" (formula "113") (term "1") (inst "#boolv=x"))
                                       (rule "variableDeclaration" (formula "113") (term "1") (newnames "x_2"))
                                       (rule "inequality_comparison_simple" (formula "113") (term "1"))
                                        (builtin "One Step Simplification" (formula "113"))
                                       (rule "replace_known_left" (formula "113") (term "0,0,1,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "113"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "57") (inst "iv=iv"))
                                       (rule "andLeft" (formula "57"))
                                       (rule "getOfSeqDef" (formula "58") (term "1,1,0"))
                                       (rule "castDel" (formula "58") (term "1,1,1,0"))
                                       (rule "castDel" (formula "58") (term "2,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "58") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "58") (term "0,2,1,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "58") (term "1,1,0,1,1,0"))
                                       (rule "lenOfSeqDef" (formula "57") (term "0"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "polySimp_elimSub" (formula "57") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "57") (term "1,1"))
                                       (rule "getOfSeqDef" (formula "58") (term "0,1,0"))
                                       (rule "castDel" (formula "58") (term "2,0,1,0"))
                                       (rule "castDel" (formula "58") (term "1,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "58") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "58") (term "0,2,1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "58") (term "1,1,0,0,1,0"))
                                       (rule "lenOfSeqDef" (formula "58") (term "1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "58") (term "1,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "58") (term "1,1,1,0,0"))
                                       (rule "lenOfSeqDef" (formula "57") (term "0"))
                                       (rule "polySimp_elimSub" (formula "57") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "57") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "true_left" (formula "57"))
                                       (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1,0"))
                                       (rule "commute_and" (formula "57") (term "0,0"))
                                       (rule "commute_and" (formula "57") (term "0,1,1,0"))
                                       (rule "eqSymm" (formula "57") (term "1,0"))
                                       (rule "commute_and" (formula "57") (term "0,1,1,0"))
                                       (rule "eqSymm" (formula "57") (term "1,0"))
                                        (builtin "Use Dependency Contract" (formula "42") (ifInst ""  (formula "114") (term "0,0,1")) (ifInst ""  (formula "36")) (contract "de.wiesler.Storage[java.lang.Object::<inv>()].JML accessible clause.0"))
                                       (rule "wellFormedAnonEQ" (formula "63") (term "1,1,0,0,0") (ifseqformula "36"))
                                       (rule "wellFormedAnon" (formula "63") (term "0,1,1,0,0,0"))
                                       (rule "replace_known_left" (formula "63") (term "0,1,0,0,0") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "112")) (ifInst ""  (formula "16")) (ifInst ""  (formula "9")) (ifInst ""  (formula "33")) (ifInst ""  (formula "35")) (ifInst ""  (formula "18")) (ifInst ""  (formula "42")) (ifInst ""  (formula "18")))
                                       (rule "true_left" (formula "63"))
                                       (rule "ifSplit" (formula "114"))
                                       (branch "if x_2 true"
                                           (builtin "One Step Simplification" (formula "115"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "if x_2 false"
                                           (builtin "One Step Simplification" (formula "115"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "blockEmpty" (formula "114") (term "1"))
                                          (rule "ifUnfold" (formula "114") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "114") (term "1") (newnames "x_3"))
                                          (rule "less_equal_than_comparison_simple" (formula "114") (term "1"))
                                           (builtin "One Step Simplification" (formula "114"))
                                          (rule "ifSplit" (formula "114"))
                                          (branch "if x_3 true"
                                              (builtin "One Step Simplification" (formula "115"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "blockReturn" (formula "115") (term "1"))
                                             (rule "inEqSimp_antiSymm" (formula "52") (ifseqformula "1"))
                                             (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "52"))
                                             (rule "applyEq" (formula "116") (term "0,1,0,0,0") (ifseqformula "52"))
                                             (rule "applyEq" (formula "51") (term "1,1,0,1,0") (ifseqformula "52"))
                                             (rule "add_literals" (formula "51") (term "1,0,1,0"))
                                             (rule "applyEq" (formula "54") (term "0") (ifseqformula "52"))
                                             (rule "applyEq" (formula "53") (term "0") (ifseqformula "52"))
                                             (rule "qeq_literals" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "applyEq" (formula "49") (term "0") (ifseqformula "52"))
                                             (rule "qeq_literals" (formula "49"))
                                             (rule "true_left" (formula "49"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "51"))
                                             (rule "leq_literals" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "50"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEq" (formula "48") (term "1,0,0,0,0,0") (ifseqformula "49"))
                                             (rule "methodCallReturn" (formula "112") (term "1"))
                                              (builtin "One Step Simplification" (formula "112"))
                                             (rule "assignment" (formula "112") (term "1"))
                                              (builtin "One Step Simplification" (formula "112"))
                                             (rule "methodCallEmpty" (formula "112") (term "1"))
                                             (rule "tryEmpty" (formula "112") (term "1"))
                                             (rule "emptyModality" (formula "112") (term "1"))
                                             (rule "andRight" (formula "112"))
                                             (branch
                                                 (builtin "One Step Simplification" (formula "112"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "0,1,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                                (rule "eqSymm" (formula "55") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "55") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,0"))
                                                (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,1,1,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "27"))
                                                (rule "mul_literals" (formula "27") (term "1,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                                (rule "eqSymm" (formula "55") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,1,1,0"))
                                                (rule "eqSymm" (formula "55") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "55") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "0,0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "eqSymm" (formula "55") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "50"))
                                                (rule "mul_literals" (formula "50") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                (rule "add_literals" (formula "50") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,1,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "47") (term "0,0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,0,1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                (rule "mul_literals" (formula "27") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                                (rule "eqSymm" (formula "55") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "55") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                (rule "mul_literals" (formula "50") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                                (rule "eqSymm" (formula "55") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "55") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0,0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "0,0,1,1,0,0,0"))
                                                (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "19"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "22") (term "0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "inEqSimp_subsumption1" (formula "53") (term "0,1,1,0,0,0") (ifseqformula "25"))
                                                (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0,1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,1,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "53") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "add_literals" (formula "53") (term "0,0,0,0,0,1,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0,1,1,0,0,0"))
                                                (rule "add_literals" (formula "53") (term "1,1,0,0,0,1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "53") (term "1,0,0,0,1,1,0,0,0"))
                                                (rule "add_literals" (formula "53") (term "0,0,0,1,1,0,0,0"))
                                                (rule "qeq_literals" (formula "53") (term "0,0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "1,0,0,0"))
                                                (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "25"))
                                                (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0"))
                                                (rule "qeq_literals" (formula "19") (term "0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "20"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "21") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "21"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "25"))
                                                (rule "mul_literals" (formula "12") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                (rule "mul_literals" (formula "12") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "20"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "add_literals" (formula "24") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "24"))
                                                (rule "leq_literals" (formula "11") (term "0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "inEqSimp_and_subsumption3" (formula "44") (term "0,0,0"))
                                                (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "inEqSimp_and_subsumption3" (formula "45") (term "0,0,0"))
                                                (rule "leq_literals" (formula "45") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_and_subsumption3" (formula "22") (term "0,0,0"))
                                                (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_and_antiSymm0" (formula "44") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "leq_literals" (formula "44") (term "0"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "exLeft" (formula "44") (inst "sk=j_0"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "eqSymm" (formula "48"))
                                                (rule "inEqSimp_homoInEq0" (formula "44"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "44") (term "0,1"))
                                                (rule "mul_literals" (formula "44") (term "0,0,1"))
                                                (rule "pullOutSelect" (formula "48") (term "1") (inst "selectSK=arr_0"))
                                                (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "113")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,0,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "10")))
                                                (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,1,1,0,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "elementOfArrayRangeConcrete" (formula "48") (term "0,0"))
                                                (rule "eqSymm" (formula "48") (term "0,0,0,0"))
                                                (rule "replace_known_right" (formula "48") (term "0,0,0,0") (ifseqformula "67"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "113")) (ifInst ""  (formula "10")))
                                                (rule "elementOfArrayRangeConcrete" (formula "49") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "leq_literals" (formula "49") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "inEqSimp_homoInEq0" (formula "49") (term "0,0,0"))
                                                (rule "times_zero_2" (formula "49") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "49"))
                                                (rule "hideAuxiliaryEq" (formula "49"))
                                                (rule "elementOfUnion" (formula "48") (term "0,0"))
                                                (rule "disjointAllFields" (formula "48") (term "0,0,0") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "elementOfArrayRangeConcrete" (formula "48") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "46"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "47") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "47") (ifseqformula "23"))
                                                (rule "leq_literals" (formula "47") (term "0"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "pullOutSelect" (formula "48") (term "2,0") (inst "selectSK=arr_1"))
                                                (rule "simplifySelectOfAnon" (formula "48"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "113")) (ifInst ""  (formula "10")))
                                                (rule "applyEqReverse" (formula "49") (term "2,0") (ifseqformula "48"))
                                                (rule "hideAuxiliaryEq" (formula "48"))
                                                (rule "inEqSimp_and_antiSymm0" (formula "49") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replaceKnownSelect_taclet0012120110000012_1" (formula "49") (term "1,1,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0012120110000012_3" (formula "49") (term "1,1,1,1"))
                                                (rule "add_literals" (formula "49") (term "0,2,0,1,1"))
                                                (rule "leq_literals" (formula "49") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "nnf_imp2or" (formula "55") (term "0"))
                                                (rule "nnf_imp2or" (formula "22") (term "0"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "112"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "15"))
                                                (rule "close" (formula "112") (ifseqformula "15"))
                                             )
                                             (branch
                                                 (builtin "One Step Simplification" (formula "112"))
                                                (rule "closeTrue" (formula "112"))
                                             )
                                          )
                                          (branch "if x_3 false"
                                              (builtin "One Step Simplification" (formula "115"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "variableDeclarationFinalAssign" (formula "115") (term "1"))
                                             (rule "variableDeclarationFinal" (formula "115") (term "1") (newnames "classifier"))
                                             (rule "methodCallWithAssignmentUnfoldArguments" (formula "115") (term "1"))
                                             (rule "variableDeclarationAssign" (formula "115") (term "1"))
                                             (rule "variableDeclaration" (formula "115") (term "1") (newnames "var_6"))
                                             (rule "assignment" (formula "115") (term "1"))
                                              (builtin "One Step Simplification" (formula "115"))
                                             (rule "variableDeclarationAssign" (formula "115") (term "1"))
                                             (rule "variableDeclaration" (formula "115") (term "1") (newnames "var_7"))
                                             (rule "assignment_read_attribute_final" (formula "115"))
                                             (branch "Normal Execution (_storage != null)"
                                                 (builtin "One Step Simplification" (formula "115"))
                                                (rule "variableDeclarationAssign" (formula "115") (term "1"))
                                                (rule "variableDeclaration" (formula "115") (term "1") (newnames "var_8"))
                                                (rule "assignment" (formula "115") (term "1"))
                                                 (builtin "One Step Simplification" (formula "115"))
                                                (rule "variableDeclarationAssign" (formula "115") (term "1"))
                                                (rule "variableDeclaration" (formula "115") (term "1") (newnames "var_9"))
                                                (rule "assignment" (formula "115") (term "1"))
                                                 (builtin "One Step Simplification" (formula "115"))
                                                 (builtin "Use Operation Contract" (formula "115") (newnames "heapBefore_from_sorted_samples,result_224,exc_264,heapAfter_from_sorted_samples,anon_heap_from_sorted_samples") (contract "de.wiesler.Classifier[de.wiesler.Classifier::from_sorted_samples([I,[I,int,int)].JML normal_behavior operation contract.0"))
                                                (branch "Post (from_sorted_samples)"
                                                    (builtin "One Step Simplification" (formula "64"))
                                                    (builtin "One Step Simplification" (formula "117"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,0,0,0,0,1,1,0,1") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,0,0,0,0,0,1,1,0,1") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "andLeft" (formula "64"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "1,0,1,0") (ifseqformula "64"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0,1,0,1,0") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0,0,1,0,1,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "andLeft" (formula "65"))
                                                   (rule "andLeft" (formula "66"))
                                                   (rule "andLeft" (formula "65"))
                                                   (rule "andLeft" (formula "66"))
                                                   (rule "andLeft" (formula "65"))
                                                   (rule "notLeft" (formula "68"))
                                                   (rule "andLeft" (formula "66"))
                                                   (rule "andLeft" (formula "67"))
                                                   (rule "andLeft" (formula "66"))
                                                   (rule "andLeft" (formula "69"))
                                                   (rule "notLeft" (formula "67"))
                                                   (rule "notLeft" (formula "66"))
                                                   (rule "andLeft" (formula "67"))
                                                   (rule "andLeft" (formula "69"))
                                                   (rule "orRight" (formula "73"))
                                                   (rule "andLeft" (formula "70"))
                                                   (rule "orRight" (formula "74"))
                                                   (rule "andLeft" (formula "70"))
                                                   (rule "notLeft" (formula "72"))
                                                   (rule "orRight" (formula "75"))
                                                   (rule "orRight" (formula "75"))
                                                   (rule "orRight" (formula "75"))
                                                   (rule "eqSymm" (formula "67"))
                                                   (rule "translateJavaMod" (formula "69") (term "0"))
                                                   (rule "eqSymm" (formula "71"))
                                                   (rule "eqSymm" (formula "70"))
                                                   (rule "eqSymm" (formula "74"))
                                                   (rule "replace_known_right" (formula "65") (term "1,0,0,1") (ifseqformula "79"))
                                                    (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "81")) (ifInst ""  (formula "75")) (ifInst ""  (formula "76")) (ifInst ""  (formula "77")) (ifInst ""  (formula "78")) (ifInst ""  (formula "80")))
                                                   (rule "assignment" (formula "134") (term "1"))
                                                    (builtin "One Step Simplification" (formula "134"))
                                                   (rule "blockEmpty" (formula "134") (term "1"))
                                                   (rule "variableDeclarationFinalAssign" (formula "134") (term "1"))
                                                   (rule "variableDeclarationFinal" (formula "134") (term "1") (newnames "r"))
                                                   (rule "applyEq" (formula "71") (term "1,1") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "46") (term "0,1,0") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "95") (term "0") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "102") (term "1") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "109") (term "0") (ifseqformula "67"))
                                                   (rule "eqSymm" (formula "109"))
                                                   (rule "applyEq" (formula "70") (term "1,0") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "113") (term "1") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "64") (term "0,0,1,0") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "111") (term "0") (ifseqformula "67"))
                                                   (rule "eqSymm" (formula "111"))
                                                   (rule "applyEq" (formula "87") (term "0") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "114") (term "0") (ifseqformula "67"))
                                                   (rule "eqSymm" (formula "114"))
                                                   (rule "applyEq" (formula "50") (term "1,1,1,1,0") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "110") (term "0") (ifseqformula "67"))
                                                   (rule "eqSymm" (formula "110"))
                                                   (rule "applyEq" (formula "50") (term "1,0,1,1,0") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "49") (term "1,1,1,0,1,0") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "74") (term "1,2,1") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "74") (term "1,2,0") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "112") (term "1") (ifseqformula "67"))
                                                   (rule "pullOutSelect" (formula "71") (term "1") (inst "selectSK=arr_0"))
                                                   (rule "applyEq" (formula "75") (term "2,0") (ifseqformula "71"))
                                                   (rule "simplifySelectOfAnon" (formula "72"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,1,0,0") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,0,1,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "64"))
                                                    (builtin "One Step Simplification" (formula "71"))
                                                   (rule "replaceKnownSelect_taclet00112120110000012_0" (formula "71") (term "2,0"))
                                                    (builtin "One Step Simplification" (formula "71"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0,1,1,0,0") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0,0,1,1,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "71"))
                                                   (rule "eqSymm" (formula "75"))
                                                   (rule "elementOfUnion" (formula "71") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "71"))
                                                   (rule "applyEqReverse" (formula "75") (term "2,1") (ifseqformula "71"))
                                                   (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "71"))
                                                   (rule "hideAuxiliaryEq" (formula "71"))
                                                   (rule "pullOutSelect" (formula "70") (term "1") (inst "selectSK=arr_1"))
                                                   (rule "applyEq" (formula "75") (term "2,0") (ifseqformula "70"))
                                                   (rule "simplifySelectOfAnon" (formula "71"))
                                                    (builtin "One Step Simplification" (formula "71"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,1,0,0") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0,1,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "71"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "64"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "replaceKnownSelect_taclet00112120110000012_3" (formula "70") (term "2,0"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,1,1,0,0") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,0,1,1,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "eqSymm" (formula "75"))
                                                   (rule "elementOfUnion" (formula "70") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "70"))
                                                   (rule "applyEqReverse" (formula "75") (term "2,1") (ifseqformula "70"))
                                                   (rule "hideAuxiliaryEq" (formula "70"))
                                                   (rule "pullOutSelect" (formula "71") (term "2,0") (inst "selectSK=arr_2"))
                                                   (rule "simplifySelectOfAnon" (formula "71"))
                                                    (builtin "One Step Simplification" (formula "71"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,1,0,0") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,1,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "71"))
                                                   (rule "pullOutSelect" (formula "70") (term "2,0") (inst "selectSK=arr_3"))
                                                   (rule "simplifySelectOfAnon" (formula "70"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,1,0,0") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,1,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "pullOutSelect" (formula "72") (term "2,0") (inst "selectSK=arr_4"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "46"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,1,1,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "72") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "leq_literals" (formula "72") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "pullOutSelect" (formula "70") (term "2,0") (inst "selectSK=arr_5"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "46"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,1,1,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "70") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "leq_literals" (formula "70") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "pullOutSelect" (formula "73") (term "2,0") (inst "selectSK=arr_6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "73"))
                                                   (rule "elementOfUnion" (formula "73") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "73") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "73") (term "0,0,1,0,0,0") (ifseqformula "92"))
                                                    (builtin "One Step Simplification" (formula "73"))
                                                   (rule "pullOutSelect" (formula "70") (term "2,0") (inst "selectSK=arr_7"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "elementOfUnion" (formula "70") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "70") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "70") (term "0,0,1,0,0,0") (ifseqformula "93"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "pullOutSelect" (formula "74") (term "2,0") (inst "selectSK=arr_8"))
                                                   (rule "simplifySelectOfAnon" (formula "74"))
                                                    (builtin "One Step Simplification" (formula "74"))
                                                   (rule "pullOutSelect" (formula "70") (term "2,0") (inst "selectSK=arr_9"))
                                                   (rule "simplifySelectOfAnon" (formula "70"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "commute_or_2" (formula "79") (term "0,1,0,0"))
                                                   (rule "commute_or_2" (formula "74") (term "0,1,0,0"))
                                                   (rule "commute_or_2" (formula "78") (term "0,1,0,0"))
                                                   (rule "commute_or_2" (formula "73") (term "0,1,0,0"))
                                                   (rule "commute_or_2" (formula "79") (term "0,0,1,0,0"))
                                                   (rule "commute_or_2" (formula "79") (term "0,1,0,0"))
                                                   (rule "commute_or_2" (formula "74") (term "0,0,1,0,0"))
                                                   (rule "commute_or_2" (formula "74") (term "0,1,0,0"))
                                                   (rule "instanceCreationAssignmentUnfoldArguments" (formula "142") (term "1"))
                                                   (rule "variableDeclarationAssign" (formula "142") (term "1"))
                                                   (rule "variableDeclaration" (formula "142") (term "1") (newnames "var_10"))
                                                    (builtin "Use Operation Contract" (formula "142") (newnames "heapBefore_num_buckets,result_225,exc_265") (contract "de.wiesler.Classifier[de.wiesler.Classifier::num_buckets()].JML normal_behavior operation contract.0"))
                                                   (branch "Post (num_buckets)"
                                                       (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "66")) (ifInst ""  (formula "80")))
                                                      (rule "expand_inInt" (formula "82") (term "0,1,0"))
                                                      (rule "replace_int_MIN" (formula "82") (term "0,1,0,1,0"))
                                                      (rule "replace_int_MAX" (formula "82") (term "1,0,0,1,0"))
                                                      (rule "andLeft" (formula "82"))
                                                      (rule "andLeft" (formula "82"))
                                                      (rule "andLeft" (formula "82"))
                                                      (rule "andLeft" (formula "82"))
                                                      (rule "eqSymm" (formula "84"))
                                                      (rule "inEqSimp_commuteLeq" (formula "83"))
                                                      (rule "assignment" (formula "146") (term "1"))
                                                       (builtin "One Step Simplification" (formula "146"))
                                                      (rule "variableDeclarationAssign" (formula "146") (term "1"))
                                                      (rule "variableDeclaration" (formula "146") (term "1") (newnames "var_11"))
                                                      (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "84"))
                                                       (builtin "Use Operation Contract" (formula "146") (newnames "heapBefore_equal_buckets,result_226,exc_266") (contract "de.wiesler.Classifier[de.wiesler.Classifier::equal_buckets()].JML normal_behavior operation contract.0"))
                                                      (branch "Post (equal_buckets)"
                                                          (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "66")) (ifInst ""  (formula "80")))
                                                         (rule "andLeft" (formula "86"))
                                                         (rule "andLeft" (formula "86"))
                                                         (rule "eqSymm" (formula "86"))
                                                         (rule "assignment" (formula "148") (term "1"))
                                                          (builtin "One Step Simplification" (formula "148"))
                                                          (builtin "Use Operation Contract" (formula "148") (newnames "heapBefore_PartitionResult,self_259,exc_267,heapAfter_PartitionResult,anon_heap_PartitionResult") (contract "de.wiesler.PartitionResult[de.wiesler.PartitionResult::PartitionResult(int,boolean)].JML normal_behavior operation contract.0"))
                                                         (branch "Post (PartitionResult)"
                                                             (builtin "One Step Simplification" (formula "150"))
                                                             (builtin "One Step Simplification" (formula "89"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,1,0,0,1,0,1") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "89"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0,0,0,1,0,0,1,0,1") (ifseqformula "46"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0,0,0,0,1,0,0,1,0,1") (ifseqformula "36"))
                                                             (builtin "One Step Simplification" (formula "89"))
                                                            (rule "andLeft" (formula "89"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "1,1,0,0,1,0") (ifseqformula "89"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,1,1,0,0,1,0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "90"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,0,0,0,1,1,0,0,1,0") (ifseqformula "46"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "36"))
                                                             (builtin "One Step Simplification" (formula "90"))
                                                            (rule "andLeft" (formula "90"))
                                                            (rule "andLeft" (formula "90"))
                                                            (rule "andLeft" (formula "92"))
                                                            (rule "andLeft" (formula "91"))
                                                            (rule "andLeft" (formula "92"))
                                                            (rule "andLeft" (formula "91"))
                                                            (rule "andLeft" (formula "93"))
                                                            (rule "andLeft" (formula "91"))
                                                            (rule "andLeft" (formula "92"))
                                                            (rule "notLeft" (formula "91"))
                                                            (rule "notLeft" (formula "91"))
                                                            (rule "orRight" (formula "97"))
                                                            (rule "orRight" (formula "97"))
                                                            (rule "orRight" (formula "97"))
                                                            (rule "orRight" (formula "97"))
                                                            (rule "orRight" (formula "97"))
                                                            (rule "orRight" (formula "97"))
                                                            (rule "replace_known_right" (formula "91") (term "1,0") (ifseqformula "103"))
                                                             (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "97")) (ifInst ""  (formula "98")) (ifInst ""  (formula "99")) (ifInst ""  (formula "100")) (ifInst ""  (formula "101")) (ifInst ""  (formula "102")))
                                                            (rule "assignment" (formula "165") (term "1"))
                                                             (builtin "One Step Simplification" (formula "165"))
                                                            (rule "blockEmpty" (formula "165") (term "1"))
                                                            (rule "variableDeclarationGhostAssign" (formula "165") (term "1"))
                                                            (rule "variableDeclarationGhost" (formula "165") (term "1") (newnames "valuesBeforePartition"))
                                                            (rule "assignment" (formula "165") (term "1"))
                                                             (builtin "One Step Simplification" (formula "165"))
                                                             (builtin "Block Contract (Internal)" (formula "165") (newnames "anonOut_heap_2,result_227,exc_268,heap_Before_BLOCK_2,savedHeap_Before_BLOCK_2,o,f"))
                                                            (branch "Validity"
                                                                (builtin "One Step Simplification" (formula "97"))
                                                                (builtin "One Step Simplification" (formula "166"))
                                                               (rule "andLeft" (formula "97"))
                                                               (rule "translateJavaSubInt" (formula "97") (term "0,0"))
                                                               (rule "polySimp_elimSub" (formula "97") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "97") (term "0,0"))
                                                               (rule "narrowSelectArrayType" (formula "166") (term "2,0,1,0") (ifseqformula "97") (ifseqformula "165"))
                                                               (rule "variableDeclarationAssign" (formula "166") (term "1"))
                                                               (rule "variableDeclaration" (formula "166") (term "1") (newnames "exc_268_1"))
                                                               (rule "assignment" (formula "166") (term "1"))
                                                                (builtin "One Step Simplification" (formula "166"))
                                                               (rule "emptyStatement" (formula "166") (term "1"))
                                                                (builtin "One Step Simplification" (formula "166"))
                                                               (rule "emptyStatement" (formula "166") (term "1"))
                                                               (rule "tryEmpty" (formula "166") (term "1"))
                                                               (rule "blockEmptyLabel" (formula "166") (term "1"))
                                                               (rule "blockEmpty" (formula "166") (term "1"))
                                                               (rule "methodCallEmpty" (formula "166") (term "1"))
                                                               (rule "emptyModality" (formula "166") (term "1"))
                                                               (rule "andRight" (formula "166"))
                                                               (branch
                                                                   (builtin "One Step Simplification" (formula "166"))
                                                                  (rule "closeTrue" (formula "166"))
                                                               )
                                                               (branch
                                                                   (builtin "One Step Simplification" (formula "166"))
                                                                  (rule "inEqSimp_leqRight" (formula "114"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "28"))
                                                                  (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "51") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "0,0,1,0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                  (rule "eqSymm" (formula "58") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,1,1,0"))
                                                                  (rule "eqSymm" (formula "58") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "58") (term "0,1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "0,0,1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "0,1,0,0,0,0,0,1,0"))
                                                                  (rule "eqSymm" (formula "58") (term "1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,1,1,0"))
                                                                  (rule "eqSymm" (formula "58") (term "1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "58") (term "0,0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "51") (term "0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "78") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "78") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "78") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "73") (term "0,0,0"))
                                                                  (rule "times_zero_2" (formula "73") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "73") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "53"))
                                                                  (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                  (rule "jmod_axiom" (formula "70") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "70") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "70"))
                                                                  (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                                                  (rule "eqSymm" (formula "58") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "58") (term "0,0,1,0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "0,1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,0,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "50") (term "0,0,1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "1,0,1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "1,1,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "78") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "73") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                                                  (rule "eqSymm" (formula "58") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "58") (term "0,0,1,0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "0,0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "0,0,1,1,0,0,0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "22"))
                                                                  (rule "leq_literals" (formula "24") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "true_left" (formula "24"))
                                                                  (rule "inEqSimp_subsumption1" (formula "57") (term "0,1,1,0,0,0") (ifseqformula "27"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "57") (term "0,0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,1,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "57") (term "0,0,0,0,1,1,0,0,0"))
                                                                  (rule "add_literals" (formula "57") (term "0,0,0,0,0,1,1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0,1,1,0,0,0"))
                                                                  (rule "add_literals" (formula "57") (term "1,1,0,0,0,1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "57") (term "1,0,0,0,1,1,0,0,0"))
                                                                  (rule "add_literals" (formula "57") (term "0,0,0,1,1,0,0,0"))
                                                                  (rule "qeq_literals" (formula "57") (term "0,0,1,1,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "polySimp_addAssoc" (formula "57") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "27"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "21") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "20"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "49") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "true_left" (formula "49"))
                                                                  (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "46") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "true_left" (formula "46"))
                                                                  (rule "newSym_eq" (formula "65") (inst "newSymDef=mul(result_225, Z(0(#)))") (inst "l=l_0"))
                                                                  (rule "times_zero_1" (formula "65") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "65") (term "1"))
                                                                  (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "65"))
                                                                  (rule "eqSymm" (formula "66"))
                                                                  (rule "applyEq" (formula "80") (term "0") (ifseqformula "66"))
                                                                  (rule "applyEq" (formula "65") (term "0,0") (ifseqformula "66"))
                                                                  (rule "applyEq" (formula "79") (term "0") (ifseqformula "66"))
                                                                  (rule "applyEq" (formula "81") (term "1") (ifseqformula "66"))
                                                                  (rule "applyEq" (formula "90") (term "1") (ifseqformula "66"))
                                                                  (rule "elimGcdLeq_antec" (formula "79") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))"))
                                                                  (rule "neg_literal" (formula "79") (term "0,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "79") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "79"))
                                                                  (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "79") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "79") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "79") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "79") (term "0,0"))
                                                                  (rule "add_literals" (formula "79") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "79") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "79") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "79") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "79"))
                                                                  (rule "elimGcdGeq_antec" (formula "80") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))"))
                                                                  (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "80") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "80"))
                                                                  (rule "mul_literals" (formula "80") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "80") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "80") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "80") (term "0,0"))
                                                                  (rule "add_literals" (formula "80") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "80") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "80") (term "0,0"))
                                                                  (rule "leq_literals" (formula "80") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "80"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "21"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "22") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "22"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "26"))
                                                                  (rule "mul_literals" (formula "13") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                  (rule "mul_literals" (formula "13") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "21"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "25"))
                                                                  (rule "leq_literals" (formula "12") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "23") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "46") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "46") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "47") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "47") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "nnf_imp2or" (formula "53") (term "0"))
                                                                  (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "62"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "andLeft" (formula "62"))
                                                                  (rule "andLeft" (formula "62"))
                                                                  (rule "andLeft" (formula "62"))
                                                                  (rule "andLeft" (formula "62"))
                                                                  (rule "andLeft" (formula "62"))
                                                                  (rule "andLeft" (formula "62"))
                                                                  (rule "translateJavaSubInt" (formula "67") (term "0,2,1"))
                                                                  (rule "translateJavaSubInt" (formula "67") (term "0,2,0"))
                                                                  (rule "translateJavaMulInt" (formula "64") (term "1,1"))
                                                                  (rule "eqSymm" (formula "67"))
                                                                  (rule "eqSymm" (formula "64"))
                                                                  (rule "polySimp_elimSub" (formula "67") (term "0,2,1"))
                                                                  (rule "mul_literals" (formula "67") (term "1,0,2,1"))
                                                                  (rule "polySimp_elimSub" (formula "67") (term "0,2,0"))
                                                                  (rule "mul_literals" (formula "67") (term "1,0,2,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "67") (term "0,2,1"))
                                                                  (rule "polySimp_addComm0" (formula "67") (term "0,2,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "62"))
                                                                  (rule "applyEq" (formula "64") (term "0,0,0") (ifseqformula "89"))
                                                                  (rule "applyEq" (formula "62") (term "0") (ifseqformula "87"))
                                                                  (rule "applyEq" (formula "63") (term "0") (ifseqformula "87"))
                                                                  (rule "applyEq" (formula "64") (term "1") (ifseqformula "87"))
                                                                  (rule "elimGcdLeq_antec" (formula "63") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(4(6(#)))"))
                                                                  (rule "neg_literal" (formula "63") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "63") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "63") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "63") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "63") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                                                                  (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "63") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "63") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "true_left" (formula "63"))
                                                                  (rule "elimGcdGeq_antec" (formula "62") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "leq_literals" (formula "62") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "62") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "62") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "62") (term "0,0"))
                                                                  (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "62") (term "0,0"))
                                                                  (rule "leq_literals" (formula "62") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "inEqSimp_subsumption1" (formula "85") (ifseqformula "62"))
                                                                  (rule "leq_literals" (formula "85") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "85"))
                                                                  (rule "true_left" (formula "85"))
                                                                  (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=arr_10"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "60"))
                                                                   (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,1,1,0,0") (ifseqformula "44"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,1,1,0,0") (ifseqformula "34"))
                                                                   (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "eqSymm" (formula "67"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "60"))
                                                                   (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,1,1,0,0") (ifseqformula "44"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,0,1,1,0,0") (ifseqformula "34"))
                                                                   (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "elementOfUnion" (formula "66") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "66"))
                                                                  (rule "hideAuxiliaryEq" (formula "66"))
                                                                  (rule "elementOfUnion" (formula "66") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "eqSymm" (formula "66"))
                                                                  (rule "nnf_imp2or" (formula "47") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "46") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "23") (term "0"))
                                                                  (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0,0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "53") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "53") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                                                                  (rule "nnf_imp2or" (formula "47") (term "1,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "47") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "1,1,0,1,0"))
                                                                  (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "47") (term "0,0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "47") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "47") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "47") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0,0"))
                                                                  (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "46") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "46") (term "1,1,0,0,0"))
                                                                  (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "1,0,0,0,0"))
                                                                  (rule "Definition_axiom_for_isValidForLen_in_de_wiesler_SampleParameters" (formula "37") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "39"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "translateJavaMulInt" (formula "44") (term "0,0"))
                                                                  (rule "translateJavaMod" (formula "43") (term "0"))
                                                                  (rule "translateJavaShiftLeftInt" (formula "42") (term "1"))
                                                                  (rule "translateJavaDivInt" (formula "38") (term "1"))
                                                                  (rule "translateJavaSubInt" (formula "44") (term "0"))
                                                                  (rule "polySimp_elimSub" (formula "44") (term "0"))
                                                                  (rule "mul_literals" (formula "44") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "39"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "40"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                  (rule "replace_known_left" (formula "81") (term "0,0,0") (ifseqformula "41"))
                                                                   (builtin "One Step Simplification" (formula "81"))
                                                                  (rule "applyEqReverse" (formula "82") (term "2,0") (ifseqformula "81"))
                                                                  (rule "hideAuxiliaryEq" (formula "81"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "37"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "44"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                                                  (rule "mul_literals" (formula "44") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                                  (rule "jmod_axiom" (formula "43") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "43"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "0,1"))
                                                                  (rule "mul_literals" (formula "39") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                                  (rule "javaShiftLeftIntConstantDef" (formula "42") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1"))
                                                                  (rule "div_literals" (formula "42") (term "0,1,1,0,1"))
                                                                  (rule "times_zero_2" (formula "42") (term "1,1,0,1"))
                                                                  (rule "add_zero_right" (formula "42") (term "1,0,1"))
                                                                  (rule "shiftleft_literals" (formula "42") (term "0,1"))
                                                                  (rule "newSym_eq" (formula "43") (inst "l=l_1") (inst "newSymDef=mul(int::final(result_220,
               de.wiesler.SampleParameters::$num_buckets),
    Z(0(#)))"))
                                                                  (rule "times_zero_1" (formula "43") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "43") (term "1"))
                                                                  (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "43"))
                                                                  (rule "eqSymm" (formula "44"))
                                                                  (rule "applyEq" (formula "52") (term "1,2,1,0") (ifseqformula "44"))
                                                                  (rule "applyEq" (formula "42") (term "0") (ifseqformula "44"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                  (rule "applyEq" (formula "86") (term "0,0,0,0") (ifseqformula "44"))
                                                                  (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "44"))
                                                                  (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "44"))
                                                                  (rule "polySimp_mulAssoc" (formula "45") (term "0"))
                                                                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "44"))
                                                                  (rule "applyEq" (formula "56") (term "0") (ifseqformula "44"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "56"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "56"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1"))
                                                                  (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "leq_literals" (formula "41") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "41") (term "0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "41") (term "0,0"))
                                                                  (rule "leq_literals" (formula "41") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "elimGcdGeq" (formula "86") (term "0,0,0") (inst "elimGcdRightDiv=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "mul_literals" (formula "86") (term "0,0,0,0,0,1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                                  (rule "sub_literals" (formula "86") (term "0,0,0,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "86") (term "1,0,1,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "86") (term "0,0,0,0,1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "86") (term "1,0,0,0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "86") (term "0,0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "86") (term "0,0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "86") (term "0,1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "86") (term "1,1,0,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "86") (term "1,0,1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "86") (term "0,1,0,0,0,0"))
                                                                  (rule "leq_literals" (formula "86") (term "1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "86"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "86") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "86") (term "1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "86") (term "0,0,0,0,0"))
                                                                  (rule "qeq_literals" (formula "86") (term "0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "86"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "39"))
                                                                  (rule "mul_literals" (formula "37") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                                  (rule "add_literals" (formula "37") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "25"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "37") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                                  (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "37") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "37") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "true_left" (formula "37"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                                                                  (rule "mul_literals" (formula "37") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                                  (rule "mul_literals" (formula "37") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "57"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                                  (rule "leq_literals" (formula "1") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "leq_literals" (formula "1") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "replace_known_left" (formula "88") (term "0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "88"))
                                                                  (rule "applyEqReverse" (formula "89") (term "2,0") (ifseqformula "88"))
                                                                  (rule "hideAuxiliaryEq" (formula "88"))
                                                                  (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "43") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "true_left" (formula "43"))
                                                                  (rule "expand_moduloInteger" (formula "43") (term "0"))
                                                                  (rule "replace_int_RANGE" (formula "43") (term "1,1,0"))
                                                                  (rule "replace_int_MIN" (formula "43") (term "0,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "43") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "43") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "43"))
                                                                  (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                                  (rule "mul_literals" (formula "43") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                  (rule "mod_axiom" (formula "43") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                                                                  (rule "div_literals" (formula "43") (term "0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "43") (term "1,0,1,0"))
                                                                  (rule "add_literals" (formula "43") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                                  (rule "add_literals" (formula "43") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                                                                  (rule "mul_literals" (formula "43") (term "1"))
                                                                  (rule "elimGcdLeq_antec" (formula "43") (inst "elimGcdRightDiv=Z(8(2(1(#))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                                                                  (rule "neg_literal" (formula "43") (term "0,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "43") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                                                  (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "43") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "43") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "Definition_axiom_for_classOf_in_de_wiesler_Classifier" (formula "114") (term "1"))
                                                                  (rule "eqSymm" (formula "114"))
                                                                  (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "74") (term "0") (inst "i=i") (inst "j=j"))
                                                                   (builtin "One Step Simplification" (formula "74"))
                                                                  (rule "expand_inInt" (formula "74") (term "1,0,0,1,0"))
                                                                  (rule "expand_inInt" (formula "74") (term "1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "74") (term "0,1,1,0,0,1,0"))
                                                                  (rule "replace_int_MAX" (formula "74") (term "1,0,1,0,0,1,0"))
                                                                  (rule "replace_int_MIN" (formula "74") (term "0,1,1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "74") (term "1,0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "74") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "74") (term "1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "74") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "74") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "74") (term "0,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "173"))
                                                                  (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "28"))
                                                                   (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "31"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "32"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "33"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "34"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "translateJavaMulInt" (formula "31") (term "1"))
                                                                  (rule "mul_literals" (formula "31") (term "1"))
                                                                  (rule "translateJavaMulInt" (formula "30") (term "1"))
                                                                  (rule "mul_literals" (formula "30") (term "1"))
                                                                  (rule "disjointDefinition" (formula "64"))
                                                                   (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "204")))
                                                                  (rule "true_left" (formula "64"))
                                                                  (rule "disjointDefinition" (formula "63"))
                                                                   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "202")))
                                                                  (rule "true_left" (formula "63"))
                                                                  (rule "disjointDefinition" (formula "62"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "notLeft" (formula "62"))
                                                                  (rule "eqSymm" (formula "139"))
                                                                  (rule "disjointDefinition" (formula "61"))
                                                                   (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "notLeft" (formula "61"))
                                                                  (rule "eqSymm" (formula "138"))
                                                                  (rule "disjointDefinition" (formula "60"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "notLeft" (formula "60"))
                                                                  (rule "eqSymm" (formula "137"))
                                                                  (rule "disjointDefinition" (formula "59"))
                                                                   (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "notLeft" (formula "59"))
                                                                  (rule "eqSymm" (formula "136"))
                                                                  (rule "disjointDefinition" (formula "58"))
                                                                   (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "notLeft" (formula "58"))
                                                                  (rule "eqSymm" (formula "135"))
                                                                  (rule "disjointDefinition" (formula "57"))
                                                                   (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "notLeft" (formula "57"))
                                                                  (rule "eqSymm" (formula "134"))
                                                                  (rule "disjointDefinition" (formula "56"))
                                                                   (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "notLeft" (formula "56"))
                                                                  (rule "eqSymm" (formula "133"))
                                                                  (rule "disjointDefinition" (formula "55"))
                                                                   (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "notLeft" (formula "55"))
                                                                  (rule "eqSymm" (formula "132"))
                                                                  (rule "disjointDefinition" (formula "54"))
                                                                   (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "notLeft" (formula "54"))
                                                                  (rule "eqSymm" (formula "131"))
                                                                  (rule "disjointDefinition" (formula "53"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "notLeft" (formula "53"))
                                                                  (rule "eqSymm" (formula "130"))
                                                                  (rule "disjointDefinition" (formula "52"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "notLeft" (formula "52"))
                                                                  (rule "eqSymm" (formula "129"))
                                                                  (rule "disjointDefinition" (formula "51"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "notLeft" (formula "51"))
                                                                  (rule "eqSymm" (formula "128"))
                                                                  (rule "disjointDefinition" (formula "50"))
                                                                   (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "notLeft" (formula "50"))
                                                                  (rule "eqSymm" (formula "127"))
                                                                  (rule "disjointDefinition" (formula "49"))
                                                                   (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "notLeft" (formula "49"))
                                                                  (rule "disjointDefinition" (formula "48"))
                                                                   (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "notLeft" (formula "48"))
                                                                  (rule "eqSymm" (formula "125"))
                                                                  (rule "disjointDefinition" (formula "47"))
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "notLeft" (formula "47"))
                                                                  (rule "eqSymm" (formula "124"))
                                                                  (rule "disjointDefinition" (formula "46"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "notLeft" (formula "46"))
                                                                  (rule "disjointDefinition" (formula "45"))
                                                                   (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "notLeft" (formula "45"))
                                                                  (rule "disjointDefinition" (formula "44"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "notLeft" (formula "44"))
                                                                  (rule "disjointDefinition" (formula "43"))
                                                                   (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "168")))
                                                                  (rule "true_left" (formula "43"))
                                                                  (rule "disjointDefinition" (formula "42"))
                                                                   (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "166")))
                                                                  (rule "true_left" (formula "42"))
                                                                  (rule "disjointDefinition" (formula "41"))
                                                                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "164")))
                                                                  (rule "true_left" (formula "41"))
                                                                  (rule "disjointDefinition" (formula "40"))
                                                                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "162")))
                                                                  (rule "true_left" (formula "40"))
                                                                  (rule "disjointDefinition" (formula "39"))
                                                                   (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "160")))
                                                                  (rule "true_left" (formula "39"))
                                                                  (rule "disjointDefinition" (formula "37"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "disjointDefinition" (formula "37"))
                                                                   (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "158")))
                                                                  (rule "true_left" (formula "37"))
                                                                  (rule "applyEq" (formula "36") (term "0,1,0,0,1") (ifseqformula "85"))
                                                                  (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "85"))
                                                                  (rule "applyEq" (formula "120") (term "0") (ifseqformula "85"))
                                                                  (rule "eqSymm" (formula "120"))
                                                                  (rule "applyEq" (formula "119") (term "1") (ifseqformula "85"))
                                                                  (rule "applyEq" (formula "116") (term "0") (ifseqformula "85"))
                                                                  (rule "eqSymm" (formula "116"))
                                                                  (rule "applyEq" (formula "116") (term "0") (ifseqformula "85"))
                                                                  (rule "eqSymm" (formula "116"))
                                                                  (rule "applyEq" (formula "115") (term "0") (ifseqformula "85"))
                                                                  (rule "eqSymm" (formula "115"))
                                                                  (rule "applyEq" (formula "114") (term "1") (ifseqformula "85"))
                                                                  (rule "applyEq" (formula "114") (term "1") (ifseqformula "85"))
                                                                  (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "94") (term "2,0,0,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "90") (term "2,0,0,0") (ifseqformula "36"))
                                                                  (rule "elementOfUnion" (formula "94") (term "0,0,0"))
                                                                  (rule "distributeIntersection" (formula "37") (term "0"))
                                                                  (rule "distributeIntersection" (formula "38") (term "0"))
                                                                  (rule "elementOfUnion" (formula "90") (term "0,0,0"))
                                                                  (rule "elementOfUnion" (formula "94") (term "1,0,0,0"))
                                                                  (rule "elementOfUnion" (formula "94") (term "0,0,0,0"))
                                                                  (rule "unionEqualsEmpty" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "unionEqualsEmpty" (formula "39"))
                                                                  (rule "andLeft" (formula "39"))
                                                                  (rule "elementOfUnion" (formula "92") (term "0,0,0,0"))
                                                                  (rule "elementOfUnion" (formula "92") (term "1,0,0,0"))
                                                                  (rule "elementOfUnion" (formula "96") (term "1,1,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "96"))
                                                                  (rule "eqSymm" (formula "96") (term "1,1,1,0,0,0"))
                                                                  (rule "eqSymm" (formula "96") (term "0,1,1,0,0,0"))
                                                                  (rule "replace_known_right" (formula "96") (term "1,1,1,0,0,0") (ifseqformula "163"))
                                                                   (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "162")))
                                                                  (rule "distributeIntersection" (formula "37") (term "0"))
                                                                  (rule "distributeIntersection" (formula "38") (term "0"))
                                                                  (rule "distributeIntersection" (formula "40") (term "0"))
                                                                  (rule "distributeIntersection" (formula "39") (term "0"))
                                                                  (rule "elementOfUnion" (formula "92") (term "0,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "92"))
                                                                  (rule "hideAuxiliaryEq" (formula "92"))
                                                                  (rule "elementOfUnion" (formula "95") (term "1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "95"))
                                                                  (rule "eqSymm" (formula "95") (term "0,1,0,0,0,0"))
                                                                  (rule "eqSymm" (formula "95") (term "1,1,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "95") (term "0,1,0,0,0,0") (ifseqformula "157"))
                                                                   (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "158")))
                                                                  (rule "unionEqualsEmpty" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "distributeIntersection" (formula "39") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "39") (term "1,0"))
                                                                  (rule "distributeIntersection" (formula "41") (term "0,0"))
                                                                  (rule "distributeIntersection" (formula "41") (term "1,0"))
                                                                  (rule "distributeIntersection" (formula "40") (term "1,0"))
                                                                  (rule "distributeIntersection" (formula "40") (term "0,0"))
                                                                  (rule "elementOfUnion" (formula "96") (term "0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "96"))
                                                                  (rule "hideAuxiliaryEq" (formula "96"))
                                                                  (rule "distributeIntersection" (formula "38") (term "0"))
                                                                  (rule "distributeIntersection" (formula "37") (term "0"))
                                                                  (rule "unionEqualsEmpty" (formula "39"))
                                                                  (rule "andLeft" (formula "39"))
                                                                  (rule "unionEqualsEmpty" (formula "42"))
                                                                  (rule "andLeft" (formula "42"))
                                                                  (rule "unionEqualsEmpty" (formula "41"))
                                                                  (rule "andLeft" (formula "41"))
                                                                  (rule "unionEqualsEmpty" (formula "38"))
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "eqSymm" (formula "118"))
                                                                  (rule "eqSymm" (formula "117"))
                                                                  (rule "unionEqualsEmpty" (formula "37"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "eqSymm" (formula "117"))
                                                                  (rule "eqSymm" (formula "116"))
                                                                  (rule "unionEqualsEmpty" (formula "38"))
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "eqSymm" (formula "116"))
                                                                  (rule "eqSymm" (formula "115"))
                                                                  (rule "unionEqualsEmpty" (formula "37"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "eqSymm" (formula "115"))
                                                                  (rule "eqSymm" (formula "114"))
                                                                  (rule "unionEqualsEmpty" (formula "39"))
                                                                   (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "andLeft" (formula "39"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "eqSymm" (formula "114"))
                                                                  (rule "eqSymm" (formula "113"))
                                                                  (rule "unionEqualsEmpty" (formula "39"))
                                                                   (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "andLeft" (formula "39"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "eqSymm" (formula "113"))
                                                                  (rule "eqSymm" (formula "112"))
                                                                  (rule "unionEqualsEmpty" (formula "38"))
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "andLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "eqSymm" (formula "112"))
                                                                  (rule "eqSymm" (formula "111"))
                                                                  (rule "unionEqualsEmpty" (formula "37"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "eqSymm" (formula "111"))
                                                                  (rule "eqSymm" (formula "110"))
                                                                  (rule "commuteUnion" (formula "36") (term "1,1,1"))
                                                                  (rule "commuteUnion" (formula "36") (term "0,0,1"))
                                                                  (rule "commuteUnion" (formula "41") (term "0,0,0,1,0"))
                                                                  (rule "commuteUnion" (formula "41") (term "1,1,0,1,0"))
                                                                  (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "53") (term "0") (inst "i=i"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "expand_inInt" (formula "53") (term "1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "53") (term "1,0,1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "53") (term "0,1,1,0,0"))
                                                                  (rule "translateJavaSubInt" (formula "53") (term "1,1,0,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "53") (term "0,2,1,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "53") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "53") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "53") (term "0,2,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "53") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "53") (term "0,1,1,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "0,1,0,0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,0,1,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "53") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "53") (term "1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "0,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,0,1,1,0,0,0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "55"))
                                                                  (rule "andLeft" (formula "55"))
                                                                  (rule "andLeft" (formula "55"))
                                                                  (rule "notLeft" (formula "57"))
                                                                  (rule "notLeft" (formula "56"))
                                                                  (rule "andLeft" (formula "55"))
                                                                  (rule "notLeft" (formula "56"))
                                                                  (rule "andLeft" (formula "55"))
                                                                  (rule "notLeft" (formula "56"))
                                                                  (rule "andLeft" (formula "55"))
                                                                  (rule "notLeft" (formula "56"))
                                                                  (rule "andLeft" (formula "55"))
                                                                  (rule "andLeft" (formula "55"))
                                                                  (rule "notLeft" (formula "57"))
                                                                  (rule "notLeft" (formula "55"))
                                                                  (rule "notLeft" (formula "55"))
                                                                  (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "113"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "116"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "115"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "111"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "112"))
                                                                   (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "114"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "110"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "applyEq" (formula "109") (term "0") (ifseqformula "82"))
                                                                  (rule "replace_known_right" (formula "90") (term "0,0,0,0") (ifseqformula "109"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "replace_known_right" (formula "91") (term "0,0,0,0") (ifseqformula "109"))
                                                                   (builtin "One Step Simplification" (formula "91"))
                                                                  (rule "replace_known_right" (formula "89") (term "0,0,0,0") (ifseqformula "109"))
                                                                   (builtin "One Step Simplification" (formula "89"))
                                                                  (rule "replace_known_right" (formula "87") (term "0,0,0,0") (ifseqformula "109"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "replace_known_right" (formula "86") (term "0,0,0,0") (ifseqformula "109"))
                                                                   (builtin "One Step Simplification" (formula "86"))
                                                                  (rule "replace_known_right" (formula "88") (term "0,0,0,0") (ifseqformula "109"))
                                                                   (builtin "One Step Simplification" (formula "88"))
                                                                  (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "109"))
                                                                   (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "replace_known_left" (formula "86") (term "0,0,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "86"))
                                                                  (rule "hideAuxiliaryEq" (formula "86"))
                                                                  (rule "replace_known_left" (formula "87") (term "0,0,0,0,0,0,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "eqSymm" (formula "87"))
                                                                  (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "87"))
                                                                  (rule "hideAuxiliaryEq" (formula "87"))
                                                                  (rule "replace_known_left" (formula "87") (term "0,0,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "hideAuxiliaryEq" (formula "87"))
                                                                  (rule "replace_known_left" (formula "88") (term "0,0,0,0,0,0,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "88"))
                                                                  (rule "replace_known_left" (formula "86") (term "0,0,0,0,0,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "86"))
                                                                  (rule "replace_known_left" (formula "87") (term "0,0,0,0,0,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "applyEqReverse" (formula "88") (term "0") (ifseqformula "87"))
                                                                  (rule "hideAuxiliaryEq" (formula "87"))
                                                                  (rule "eqSymm" (formula "86"))
                                                                  (rule "eqSymm" (formula "87"))
                                                                  (rule "replace_known_right" (formula "180") (term "0,1") (ifseqformula "105"))
                                                                   (builtin "One Step Simplification" (formula "180"))
                                                                  (rule "notRight" (formula "180"))
                                                                  (rule "applyEq" (formula "84") (term "0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "78") (term "0,2,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "81") (term "0,1,0,2,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "79") (term "0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "81") (term "0,1,0,2,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "80") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "80") (term "0,1,1,1,0,0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "82") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "122") (term "2,0") (ifseqformula "87"))
                                                                  (rule "applyEq" (formula "78") (term "0,0,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "122") (term "2,1") (ifseqformula "88"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_PartitionResult" (formula "104"))
                                                                  (rule "true_left" (formula "104"))
                                                                  (rule "Free_class_invariant_axiom_for_de_wiesler_PartitionResult" (formula "103"))
                                                                  (rule "true_left" (formula "103"))
                                                                  (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "55"))
                                                                   (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "29")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                                                                  (rule "andLeft" (formula "55"))
                                                                  (rule "andLeft" (formula "56"))
                                                                  (rule "andLeft" (formula "55"))
                                                                  (rule "andLeft" (formula "57"))
                                                                  (rule "andLeft" (formula "55"))
                                                                  (rule "andLeft" (formula "58"))
                                                                  (rule "andLeft" (formula "55"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "translateJavaMulInt" (formula "57") (term "1"))
                                                                  (rule "mul_literals" (formula "57") (term "1"))
                                                                  (rule "translateJavaMulInt" (formula "56") (term "1"))
                                                                  (rule "mul_literals" (formula "56") (term "1"))
                                                                  (rule "disjointDefinition" (formula "84"))
                                                                   (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "203")))
                                                                  (rule "true_left" (formula "84"))
                                                                  (rule "disjointDefinition" (formula "83"))
                                                                   (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "201")))
                                                                  (rule "true_left" (formula "83"))
                                                                  (rule "disjointDefinition" (formula "82"))
                                                                   (builtin "One Step Simplification" (formula "82"))
                                                                  (rule "notLeft" (formula "82"))
                                                                  (rule "eqSymm" (formula "130"))
                                                                  (rule "disjointDefinition" (formula "81"))
                                                                   (builtin "One Step Simplification" (formula "81"))
                                                                  (rule "notLeft" (formula "81"))
                                                                  (rule "eqSymm" (formula "129"))
                                                                  (rule "disjointDefinition" (formula "80"))
                                                                   (builtin "One Step Simplification" (formula "80"))
                                                                  (rule "notLeft" (formula "80"))
                                                                  (rule "eqSymm" (formula "128"))
                                                                  (rule "disjointDefinition" (formula "79"))
                                                                   (builtin "One Step Simplification" (formula "79"))
                                                                  (rule "notLeft" (formula "79"))
                                                                  (rule "eqSymm" (formula "127"))
                                                                  (rule "disjointDefinition" (formula "78"))
                                                                   (builtin "One Step Simplification" (formula "78"))
                                                                  (rule "notLeft" (formula "78"))
                                                                  (rule "eqSymm" (formula "126"))
                                                                  (rule "disjointDefinition" (formula "77"))
                                                                   (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "notLeft" (formula "77"))
                                                                  (rule "eqSymm" (formula "125"))
                                                                  (rule "disjointDefinition" (formula "76"))
                                                                   (builtin "One Step Simplification" (formula "76"))
                                                                  (rule "notLeft" (formula "76"))
                                                                  (rule "eqSymm" (formula "124"))
                                                                  (rule "disjointDefinition" (formula "75"))
                                                                   (builtin "One Step Simplification" (formula "75"))
                                                                  (rule "notLeft" (formula "75"))
                                                                  (rule "eqSymm" (formula "123"))
                                                                  (rule "disjointDefinition" (formula "74"))
                                                                   (builtin "One Step Simplification" (formula "74"))
                                                                  (rule "notLeft" (formula "74"))
                                                                  (rule "eqSymm" (formula "122"))
                                                                  (rule "disjointDefinition" (formula "73"))
                                                                   (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "notLeft" (formula "73"))
                                                                  (rule "eqSymm" (formula "121"))
                                                                  (rule "disjointDefinition" (formula "72"))
                                                                   (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "notLeft" (formula "72"))
                                                                  (rule "eqSymm" (formula "120"))
                                                                  (rule "disjointDefinition" (formula "71"))
                                                                   (builtin "One Step Simplification" (formula "71"))
                                                                  (rule "notLeft" (formula "71"))
                                                                  (rule "eqSymm" (formula "119"))
                                                                  (rule "disjointDefinition" (formula "70"))
                                                                   (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "notLeft" (formula "70"))
                                                                  (rule "eqSymm" (formula "118"))
                                                                  (rule "disjointDefinition" (formula "69"))
                                                                   (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "notLeft" (formula "69"))
                                                                  (rule "disjointDefinition" (formula "68"))
                                                                   (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "notLeft" (formula "68"))
                                                                  (rule "eqSymm" (formula "116"))
                                                                  (rule "disjointDefinition" (formula "67"))
                                                                   (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "notLeft" (formula "67"))
                                                                  (rule "eqSymm" (formula "115"))
                                                                  (rule "disjointDefinition" (formula "66"))
                                                                   (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "notLeft" (formula "66"))
                                                                  (rule "disjointDefinition" (formula "65"))
                                                                   (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "notLeft" (formula "65"))
                                                                  (rule "disjointDefinition" (formula "64"))
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "notLeft" (formula "64"))
                                                                  (rule "disjointDefinition" (formula "63"))
                                                                   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "167")))
                                                                  (rule "true_left" (formula "63"))
                                                                  (rule "disjointDefinition" (formula "62"))
                                                                   (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "165")))
                                                                  (rule "true_left" (formula "62"))
                                                                  (rule "disjointDefinition" (formula "61"))
                                                                   (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "163")))
                                                                  (rule "true_left" (formula "61"))
                                                                  (rule "disjointDefinition" (formula "60"))
                                                                   (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "161")))
                                                                  (rule "true_left" (formula "60"))
                                                                  (rule "disjointDefinition" (formula "59"))
                                                                   (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "159")))
                                                                  (rule "true_left" (formula "59"))
                                                                  (rule "disjointDefinition" (formula "58"))
                                                                   (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "157")))
                                                                  (rule "true_left" (formula "58"))
                                                                  (rule "disjointDefinition" (formula "57"))
                                                                   (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "notLeft" (formula "57"))
                                                                  (rule "applyEq" (formula "111") (term "0") (ifseqformula "84"))
                                                                  (rule "eqSymm" (formula "111"))
                                                                  (rule "applyEq" (formula "108") (term "0") (ifseqformula "84"))
                                                                  (rule "eqSymm" (formula "108"))
                                                                  (rule "applyEq" (formula "108") (term "1") (ifseqformula "84"))
                                                                  (rule "applyEq" (formula "108") (term "1") (ifseqformula "84"))
                                                                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "56"))
                                                                  (rule "applyEq" (formula "105") (term "1") (ifseqformula "84"))
                                                                  (rule "applyEq" (formula "106") (term "0") (ifseqformula "84"))
                                                                  (rule "eqSymm" (formula "106"))
                                                                  (rule "applyEq" (formula "105") (term "0") (ifseqformula "84"))
                                                                  (rule "eqSymm" (formula "105"))
                                                                  (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "84"))
                                                                  (rule "applyEq" (formula "55") (term "0,1,0,0,1") (ifseqformula "83"))
                                                                  (rule "applyEq" (formula "37") (term "0,1,0,0,0") (ifseqformula "83"))
                                                                  (rule "applyEq" (formula "55") (term "1") (ifseqformula "37"))
                                                                  (rule "Definition_axiom_for_isInInt_in_de_wiesler_SampleParameters" (formula "56") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "expand_inInt" (formula "56") (term "1"))
                                                                  (rule "expand_inInt" (formula "56") (term "0,0"))
                                                                  (rule "expand_inInt" (formula "56") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "56") (term "0,1,1"))
                                                                  (rule "replace_int_MAX" (formula "56") (term "1,0,1"))
                                                                  (rule "replace_int_MIN" (formula "56") (term "0,1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "56") (term "1,0,0,0"))
                                                                  (rule "replace_int_MIN" (formula "56") (term "0,1,1,0"))
                                                                  (rule "replace_int_MAX" (formula "56") (term "1,0,1,0"))
                                                                  (rule "andLeft" (formula "56"))
                                                                  (rule "andLeft" (formula "56"))
                                                                  (rule "andLeft" (formula "58"))
                                                                  (rule "andLeft" (formula "57"))
                                                                  (rule "andLeft" (formula "56"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "61"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "59"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "57"))
                                                                  (rule "applyEq" (formula "61") (term "0") (ifseqformula "52"))
                                                                  (rule "applyEq" (formula "60") (term "0") (ifseqformula "52"))
                                                                  (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "46"))
                                                                  (rule "leq_literals" (formula "57") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "true_left" (formula "57"))
                                                                  (rule "inEqSimp_subsumption1" (formula "58") (ifseqformula "49"))
                                                                  (rule "leq_literals" (formula "58") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "true_left" (formula "58"))
                                                                  (rule "inEqSimp_subsumption4" (formula "58") (ifseqformula "50"))
                                                                  (rule "mul_literals" (formula "58") (term "0,1,0"))
                                                                  (rule "greater_literals" (formula "58") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "leq_literals" (formula "58") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "true_left" (formula "58"))
                                                                  (rule "inEqSimp_subsumption6" (formula "58") (ifseqformula "2"))
                                                                  (rule "greater_literals" (formula "58") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "mul_literals" (formula "58") (term "1,0"))
                                                                  (rule "leq_literals" (formula "58") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "true_left" (formula "58"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "18"))
                                                                  (rule "andLeft" (formula "18"))
                                                                  (rule "andLeft" (formula "18"))
                                                                  (rule "notLeft" (formula "20"))
                                                                  (rule "notLeft" (formula "19"))
                                                                  (rule "andLeft" (formula "18"))
                                                                  (rule "andLeft" (formula "18"))
                                                                  (rule "notLeft" (formula "20"))
                                                                  (rule "notLeft" (formula "19"))
                                                                  (rule "andLeft" (formula "18"))
                                                                  (rule "andLeft" (formula "18"))
                                                                  (rule "notLeft" (formula "20"))
                                                                  (rule "andLeft" (formula "18"))
                                                                  (rule "notLeft" (formula "20"))
                                                                  (rule "notLeft" (formula "19"))
                                                                  (rule "notLeft" (formula "18"))
                                                                  (rule "applyEq" (formula "104") (term "0") (ifseqformula "83"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "89"))
                                                                  (rule "andLeft" (formula "89"))
                                                                  (rule "notLeft" (formula "90"))
                                                                  (rule "notLeft" (formula "89"))
                                                                  (rule "close" (formula "103") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch "Precondition"
                                                               (rule "andRight" (formula "165"))
                                                               (branch
                                                                   (builtin "One Step Simplification" (formula "165"))
                                                                  (rule "translateJavaSubInt" (formula "165") (term "0,0"))
                                                                  (rule "polySimp_elimSub" (formula "165") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "165") (term "0,0"))
                                                                  (rule "close" (formula "165") (ifseqformula "17"))
                                                               )
                                                               (branch
                                                                   (builtin "One Step Simplification" (formula "165"))
                                                                  (rule "wellFormedAnonEQ" (formula "165") (ifseqformula "89"))
                                                                  (rule "wellFormedAnonEQ" (formula "165") (term "0") (ifseqformula "64"))
                                                                  (rule "wellFormedAnon" (formula "165") (term "0,0"))
                                                                  (rule "wellFormedAnon" (formula "165") (term "0,0,0"))
                                                                  (rule "wellFormedAnonEQ" (formula "165") (term "0,0,0,0") (ifseqformula "46"))
                                                                  (rule "wellFormedAnonEQ" (formula "165") (term "0,0,0,0,0") (ifseqformula "36"))
                                                                  (rule "wellFormedAnon" (formula "165") (term "0,0,0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "165") (term "1,0,0,0,0,0") (ifseqformula "35"))
                                                                   (builtin "One Step Simplification" (formula "165") (ifInst ""  (formula "9")) (ifInst ""  (formula "33")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "60")) (ifInst ""  (formula "63")) (ifInst ""  (formula "88")))
                                                                  (rule "closeTrue" (formula "165"))
                                                               )
                                                            )
                                                            (branch "Usage"
                                                                (builtin "One Step Simplification" (formula "166"))
                                                                (builtin "One Step Simplification" (formula "97"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0,1,0,1,0") (ifseqformula "89"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0,1,1,1,0") (ifseqformula "89"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0,0,1,0,1,0") (ifseqformula "64"))
                                                                (builtin "One Step Simplification" (formula "97"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0,0,1,1,1,0") (ifseqformula "64"))
                                                                (builtin "One Step Simplification" (formula "97"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0,0,0,0,0,1,0,1,0") (ifseqformula "46"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0,0,0,0,0,1,1,1,0") (ifseqformula "46"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0,0,0,0,0,0,1,1,1,0") (ifseqformula "36"))
                                                                (builtin "One Step Simplification" (formula "97"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0,0,0,0,0,0,1,0,1,0") (ifseqformula "36"))
                                                                (builtin "One Step Simplification" (formula "97"))
                                                               (rule "andLeft" (formula "97"))
                                                               (rule "andLeft" (formula "97"))
                                                               (rule "andLeft" (formula "99"))
                                                               (rule "andLeft" (formula "97"))
                                                               (rule "andLeft" (formula "99"))
                                                               (rule "andLeft" (formula "97"))
                                                               (rule "eqSymm" (formula "102"))
                                                               (rule "replace_known_left" (formula "101") (term "0") (ifseqformula "97"))
                                                                (builtin "One Step Simplification" (formula "101"))
                                                               (rule "true_left" (formula "101"))
                                                               (rule "shift_paren_or" (formula "100"))
                                                               (rule "commute_or_2" (formula "100") (term "1,0"))
                                                               (rule "shift_paren_or" (formula "100") (term "0"))
                                                               (rule "shift_paren_or" (formula "100") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "100") (term "0,0,0"))
                                                               (rule "shift_paren_or" (formula "100") (term "0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "100") (term "0,0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "100") (term "0,0,0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "100") (term "0,0,0,0,0,0,0"))
                                                               (rule "commute_or_2" (formula "100"))
                                                               (rule "commute_or_2" (formula "100") (term "0"))
                                                               (rule "commute_or_2" (formula "100") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "100") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "100") (term "0,0"))
                                                               (rule "commute_or_2" (formula "100") (term "0"))
                                                               (rule "commute_or_2" (formula "100") (term "0,0,0,0,0"))
                                                               (rule "commute_or_2" (formula "100") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "100") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "100") (term "0,0"))
                                                               (rule "commute_or_2" (formula "100") (term "0"))
                                                               (rule "commute_or_2" (formula "100"))
                                                                (builtin "Use Dependency Contract" (formula "42") (ifInst ""  (formula "171") (term "0,0,1")) (ifInst ""  (formula "36")) (contract "de.wiesler.Storage[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                               (rule "wellFormedAnonEQ" (formula "103") (term "1,1,0,0,0") (ifseqformula "36"))
                                                               (rule "wellFormedAnon" (formula "103") (term "0,1,1,0,0,0"))
                                                               (rule "replace_known_left" (formula "103") (term "0,1") (ifseqformula "42"))
                                                                (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "169")) (ifInst ""  (formula "16")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "33")) (ifInst ""  (formula "35")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                                                               (rule "true_left" (formula "103"))
                                                               (rule "ifUnfold" (formula "171") (term "1") (inst "#boolv=x"))
                                                               (rule "variableDeclaration" (formula "171") (term "1") (newnames "x_4"))
                                                               (rule "inequality_comparison_simple" (formula "171") (term "1"))
                                                                (builtin "One Step Simplification" (formula "171"))
                                                               (rule "replace_known_left" (formula "171") (term "0,0,1,0") (ifseqformula "97"))
                                                                (builtin "One Step Simplification" (formula "171"))
                                                               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "46") (term "0,1,0") (ifseqformula "63") (ifseqformula "65"))
                                                               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "69") (term "0,0") (ifseqformula "64") (ifseqformula "66"))
                                                               (rule "ifSplit" (formula "173"))
                                                               (branch "if x_4 true"
                                                                   (builtin "One Step Simplification" (formula "174"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch "if x_4 false"
                                                                   (builtin "One Step Simplification" (formula "174"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "blockEmpty" (formula "173") (term "1"))
                                                                   (builtin "Block Contract (Internal)" (formula "173") (newnames "anonOut_heap_3,result_228,exc_269,heap_Before_BLOCK_3,savedHeap_Before_BLOCK_3,o,f"))
                                                                  (branch "Validity"
                                                                      (builtin "One Step Simplification" (formula "174"))
                                                                      (builtin "One Step Simplification" (formula "105"))
                                                                     (rule "andLeft" (formula "105"))
                                                                     (rule "translateJavaSubInt" (formula "105") (term "0,0"))
                                                                     (rule "polySimp_elimSub" (formula "105") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "105") (term "0,0"))
                                                                     (rule "variableDeclarationAssign" (formula "174") (term "1"))
                                                                     (rule "variableDeclaration" (formula "174") (term "1") (newnames "exc_269_1"))
                                                                     (rule "assignment" (formula "174") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "174"))
                                                                     (rule "emptyStatement" (formula "174") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "174"))
                                                                     (rule "emptyStatement" (formula "174") (term "1"))
                                                                     (rule "tryEmpty" (formula "174") (term "1"))
                                                                     (rule "blockEmptyLabel" (formula "174") (term "1"))
                                                                     (rule "blockEmpty" (formula "174") (term "1"))
                                                                     (rule "methodCallEmpty" (formula "174") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "174"))
                                                                     (rule "emptyModality" (formula "174") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "174"))
                                                                     (rule "closeTrue" (formula "174"))
                                                                  )
                                                                  (branch "Precondition"
                                                                     (rule "andRight" (formula "173"))
                                                                     (branch
                                                                         (builtin "One Step Simplification" (formula "173"))
                                                                        (rule "translateJavaSubInt" (formula "173") (term "0,0"))
                                                                        (rule "polySimp_elimSub" (formula "173") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "173") (term "0,0"))
                                                                        (rule "close" (formula "173") (ifseqformula "17"))
                                                                     )
                                                                     (branch
                                                                         (builtin "One Step Simplification" (formula "173"))
                                                                        (rule "wellFormedAnon" (formula "173"))
                                                                        (rule "wellFormedAnonEQ" (formula "173") (term "0") (ifseqformula "91"))
                                                                        (rule "wellFormedAnonEQ" (formula "173") (term "0,0") (ifseqformula "65"))
                                                                        (rule "wellFormedAnon" (formula "173") (term "0,0,0"))
                                                                        (rule "wellFormedAnon" (formula "173") (term "0,0,0,0"))
                                                                        (rule "wellFormedAnonEQ" (formula "173") (term "0,0,0,0,0") (ifseqformula "47"))
                                                                        (rule "wellFormedAnonEQ" (formula "173") (term "0,0,0,0,0,0") (ifseqformula "36"))
                                                                        (rule "wellFormedAnon" (formula "173") (term "0,0,0,0,0,0,0"))
                                                                        (rule "replace_known_left" (formula "173") (term "1,0") (ifseqformula "90"))
                                                                         (builtin "One Step Simplification" (formula "173") (ifInst ""  (formula "9")) (ifInst ""  (formula "33")) (ifInst ""  (formula "35")) (ifInst ""  (formula "45")) (ifInst ""  (formula "56")) (ifInst ""  (formula "61")) (ifInst ""  (formula "64")) (ifInst ""  (formula "101")))
                                                                        (rule "closeTrue" (formula "173"))
                                                                     )
                                                                  )
                                                                  (branch "Usage"
                                                                      (builtin "One Step Simplification" (formula "105"))
                                                                      (builtin "One Step Simplification" (formula "174"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "0,0,1,0,1,0") (ifseqformula "91"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "0,0,1,1,1,0") (ifseqformula "91"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "0,0,0,1,1,1,0") (ifseqformula "65"))
                                                                      (builtin "One Step Simplification" (formula "105"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "0,0,0,1,0,1,0") (ifseqformula "65"))
                                                                      (builtin "One Step Simplification" (formula "105"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "0,0,0,0,0,0,1,1,1,0") (ifseqformula "47"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "0,0,0,0,0,0,1,0,1,0") (ifseqformula "47"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "36"))
                                                                      (builtin "One Step Simplification" (formula "105"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "36"))
                                                                      (builtin "One Step Simplification" (formula "105"))
                                                                     (rule "expand_inInt" (formula "105") (term "1,0,0,1,1"))
                                                                     (rule "expand_inInt" (formula "105") (term "1,0,0,1,0,1,1"))
                                                                     (rule "replace_int_MIN" (formula "105") (term "0,1,1,0,0,1,1"))
                                                                     (rule "replace_int_MAX" (formula "105") (term "1,0,1,0,0,1,1"))
                                                                     (rule "replace_int_MIN" (formula "105") (term "0,1,1,0,0,1,0,1,1"))
                                                                     (rule "replace_int_MAX" (formula "105") (term "1,0,1,0,0,1,0,1,1"))
                                                                     (rule "andLeft" (formula "105"))
                                                                     (rule "andLeft" (formula "106"))
                                                                     (rule "andLeft" (formula "105"))
                                                                     (rule "andLeft" (formula "106"))
                                                                     (rule "andLeft" (formula "105"))
                                                                     (rule "exLeft" (formula "110") (inst "sk=i_0"))
                                                                     (rule "andLeft" (formula "110"))
                                                                     (rule "andLeft" (formula "110"))
                                                                     (rule "andLeft" (formula "111"))
                                                                     (rule "andLeft" (formula "110"))
                                                                     (rule "exLeft" (formula "114") (inst "sk=j_0"))
                                                                     (rule "andLeft" (formula "114"))
                                                                     (rule "andLeft" (formula "114"))
                                                                     (rule "notLeft" (formula "116"))
                                                                     (rule "andLeft" (formula "115"))
                                                                     (rule "andLeft" (formula "114"))
                                                                     (rule "eqSymm" (formula "118"))
                                                                     (rule "replace_known_left" (formula "108") (term "0") (ifseqformula "105"))
                                                                      (builtin "One Step Simplification" (formula "108"))
                                                                     (rule "true_left" (formula "108"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "112"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "109"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "116"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "113"))
                                                                     (rule "pullOutSelect" (formula "117") (term "2,1") (inst "selectSK=arr_10"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "186")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "92"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "66"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "48"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "37"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "186")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "92"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "48"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "37"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "92"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "186")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "48"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "37"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "186")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "48"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "37"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "139"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "140")))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "186")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "48"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "186")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "48"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "186")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "140"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "186")) (ifInst ""  (formula "11")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "31"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "110"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "118") (term "2,0") (inst "selectSK=arr_11"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "187")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "93"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "67"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "49"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "38"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "187")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "93"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "67"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "49"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "38"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "187")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "67"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "49"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "38"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "67"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "187")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "49"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "38"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "140"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "141")))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "187")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "49"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "38"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "187")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "187")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "141"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "187")) (ifInst ""  (formula "12")))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                     (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "115"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_12"))
                                                                     (rule "simplifySelectOfAnon" (formula "2"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "188")) (ifInst ""  (formula "13")))
                                                                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_13"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "188")) (ifInst ""  (formula "13")))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "shift_paren_or" (formula "109"))
                                                                     (rule "shift_paren_or" (formula "109") (term "0"))
                                                                     (rule "commute_or_2" (formula "109") (term "1,0,0"))
                                                                     (rule "shift_paren_or" (formula "109") (term "0,0"))
                                                                     (rule "ifUnfold" (formula "188") (term "1") (inst "#boolv=x"))
                                                                     (rule "variableDeclaration" (formula "188") (term "1") (newnames "x_5"))
                                                                     (rule "shift_paren_or" (formula "109") (term "0,0,0"))
                                                                     (rule "shift_paren_or" (formula "109") (term "0,0,0,0"))
                                                                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "105") (inst "iv=iv"))
                                                                     (rule "andLeft" (formula "105"))
                                                                     (rule "lenOfSeqDef" (formula "105") (term "0"))
                                                                     (rule "eqSymm" (formula "105"))
                                                                     (rule "polySimp_elimSub" (formula "105") (term "1,1"))
                                                                     (rule "polySimp_addComm0" (formula "105") (term "1,1"))
                                                                     (rule "getOfSeqDef" (formula "106") (term "1,1,0"))
                                                                     (rule "castDel" (formula "106") (term "2,1,1,0"))
                                                                     (rule "castDel" (formula "106") (term "1,1,1,0"))
                                                                     (rule "polySimp_elimSub" (formula "106") (term "1,1,0,1,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "106") (term "0,2,1,1,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "106") (term "1,1,0,1,1,0"))
                                                                     (rule "lenOfSeqDefEQ" (formula "106") (term "1,1,0,0") (ifseqformula "61"))
                                                                     (rule "polySimp_elimSub" (formula "106") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "106") (term "1,1,1,0,0"))
                                                                     (rule "getOfSeqDef" (formula "106") (term "0,1,0"))
                                                                     (rule "castDel" (formula "106") (term "2,0,1,0"))
                                                                     (rule "castDel" (formula "106") (term "1,0,1,0"))
                                                                     (rule "polySimp_elimSub" (formula "106") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "106") (term "0,2,1,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "106") (term "1,1,0,0,1,0"))
                                                                     (rule "lenOfSeqDef" (formula "105") (term "0"))
                                                                     (rule "polySimp_elimSub" (formula "105") (term "1,0"))
                                                                     (rule "polySimp_addComm0" (formula "105") (term "1,0"))
                                                                      (builtin "One Step Simplification" (formula "105"))
                                                                     (rule "true_left" (formula "105"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "105") (term "0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "105") (term "0,0,1,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "105") (term "0,1,1,0,0"))
                                                                     (rule "replace_known_left" (formula "105") (term "0,1,1,0,0") (ifseqformula "22"))
                                                                      (builtin "One Step Simplification" (formula "105"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "105") (term "0,0,0,1,0"))
                                                                     (rule "commute_and" (formula "105") (term "0,0"))
                                                                     (rule "shift_paren_or" (formula "110") (term "0,0,0,0,0"))
                                                                     (rule "inequality_comparison_simple" (formula "189") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "189"))
                                                                     (rule "replace_known_left" (formula "189") (term "0,0,1,0") (ifseqformula "108"))
                                                                      (builtin "One Step Simplification" (formula "189"))
                                                                     (rule "commute_and" (formula "105") (term "0,1,1,0"))
                                                                     (rule "eqSymm" (formula "105") (term "1,0"))
                                                                     (rule "commute_and" (formula "105") (term "0,1,1,0"))
                                                                     (rule "eqSymm" (formula "105") (term "1,0"))
                                                                     (rule "commute_or_2" (formula "110") (term "1,0,0,0,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "110") (term "0,0,0,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "110") (term "0,0,0,0,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "110") (term "0,0,0,0,0,0,0,0"))
                                                                     (rule "commute_or_2" (formula "110") (term "0"))
                                                                     (rule "commute_or_2" (formula "110"))
                                                                     (rule "commute_or_2" (formula "110") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "110") (term "0"))
                                                                     (rule "commute_or_2" (formula "110") (term "0,0,0,0,0"))
                                                                     (rule "commute_or_2" (formula "110") (term "0,0,0,0"))
                                                                     (rule "commute_or_2" (formula "110") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "110") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "110") (term "0"))
                                                                     (rule "commute_or_2" (formula "110"))
                                                                     (rule "commute_or_2" (formula "110") (term "0,0,0,0,0,0"))
                                                                     (rule "commute_or_2" (formula "110") (term "0,0,0,0,0"))
                                                                     (rule "commute_or_2" (formula "110") (term "0,0,0,0"))
                                                                     (rule "commute_or_2" (formula "110") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "110") (term "0,0"))
                                                                      (builtin "Use Dependency Contract" (formula "44") (ifInst ""  (formula "189") (term "0,0,1")) (ifInst ""  (formula "38")) (contract "de.wiesler.Storage[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                     (rule "wellFormedAnonEQ" (formula "120") (term "1,1,0,0,0") (ifseqformula "38"))
                                                                     (rule "wellFormedAnon" (formula "120") (term "0,1,1,0,0,0"))
                                                                     (rule "replace_known_left" (formula "120") (term "0,1") (ifseqformula "44"))
                                                                      (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "187")) (ifInst ""  (formula "18")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "35")) (ifInst ""  (formula "37")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
                                                                     (rule "true_left" (formula "120"))
                                                                     (rule "ifSplit" (formula "189"))
                                                                     (branch "if x_5 true"
                                                                         (builtin "One Step Simplification" (formula "190"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "if x_5 false"
                                                                         (builtin "One Step Simplification" (formula "190"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "true_left" (formula "1"))
                                                                        (rule "blockEmpty" (formula "189") (term "1"))
                                                                         (builtin "Use Operation Contract" (formula "189") (newnames "heapBefore_partition_0,exc_270,heapAfter_partition,anon_heap_partition") (contract "de.wiesler.Partition[de.wiesler.Partition::partition([I,int,int,[I,de.wiesler.Classifier,de.wiesler.Storage)].JML normal_behavior operation contract.0"))
                                                                        (branch "Post (partition)"
                                                                            (builtin "One Step Simplification" (formula "191"))
                                                                            (builtin "One Step Simplification" (formula "121"))
                                                                           (rule "andLeft" (formula "121"))
                                                                           (rule "andLeft" (formula "122"))
                                                                           (rule "andLeft" (formula "122"))
                                                                           (rule "andLeft" (formula "124"))
                                                                           (rule "andLeft" (formula "123"))
                                                                           (rule "andLeft" (formula "125"))
                                                                           (rule "andLeft" (formula "124"))
                                                                           (rule "andLeft" (formula "125"))
                                                                           (rule "andLeft" (formula "126"))
                                                                           (rule "andLeft" (formula "127"))
                                                                           (rule "andLeft" (formula "128"))
                                                                           (rule "translateJavaSubInt" (formula "121") (term "2,0,0,0,0,0,0,0,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "125") (term "1"))
                                                                           (rule "polySimp_elimSub" (formula "121") (term "2,0,0,0,0,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "121") (term "1,2,0,0,0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "125") (term "1"))
                                                                           (rule "polySimp_addComm0" (formula "121") (term "2,0,0,0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "125") (term "1"))
                                                                           (rule "variableDeclarationGhostAssign" (formula "201") (term "1"))
                                                                           (rule "variableDeclarationGhost" (formula "201") (term "1") (newnames "valuesAfterPartition"))
                                                                           (rule "assignment" (formula "201") (term "1"))
                                                                            (builtin "One Step Simplification" (formula "201"))
                                                                            (builtin "Block Contract (Internal)" (formula "201") (newnames "anonOut_heap_4,result_229,exc_271,heap_Before_BLOCK_4,savedHeap_Before_BLOCK_4,o,f"))
                                                                           (branch "Validity"
                                                                               (builtin "One Step Simplification" (formula "132"))
                                                                               (builtin "One Step Simplification" (formula "202"))
                                                                              (rule "andLeft" (formula "132"))
                                                                              (rule "translateJavaSubInt" (formula "132") (term "0,0"))
                                                                              (rule "polySimp_elimSub" (formula "132") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "132") (term "0,0"))
                                                                              (rule "narrowSelectArrayType" (formula "123") (term "2,0") (ifseqformula "132") (ifseqformula "201"))
                                                                              (rule "narrowSelectArrayType" (formula "202") (term "2,0,1,0") (ifseqformula "132") (ifseqformula "201"))
                                                                              (rule "variableDeclarationAssign" (formula "202") (term "1"))
                                                                              (rule "variableDeclaration" (formula "202") (term "1") (newnames "exc_271_1"))
                                                                              (rule "assignment" (formula "202") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "202"))
                                                                              (rule "emptyStatement" (formula "202") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "202"))
                                                                              (rule "emptyStatement" (formula "202") (term "1"))
                                                                              (rule "applyEq" (formula "127") (term "7,0") (ifseqformula "88"))
                                                                              (rule "applyEq" (formula "125") (term "0,2,0") (ifseqformula "88"))
                                                                              (rule "applyEq" (formula "124") (term "2,0") (ifseqformula "88"))
                                                                              (rule "applyEq" (formula "127") (term "5,0") (ifseqformula "88"))
                                                                              (rule "pullOutSelect" (formula "125") (term "0") (inst "selectSK=arr_14"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "125") (ifseqformula "121"))
                                                                               (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "201")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,0,0,1,0,0") (ifseqformula "93"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,0,0,0,1,0,0") (ifseqformula "67"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "49"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "38"))
                                                                               (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "17")))
                                                                              (rule "elementOfUnion" (formula "125") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "eqSymm" (formula "125") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "125") (term "1,0,0") (ifseqformula "170"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "elementOfUnion" (formula "125") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "eqSymm" (formula "125") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "125") (term "1,0,0") (ifseqformula "169"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "elementOfUnion" (formula "125") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "eqSymm" (formula "125") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "125") (term "1,0,0") (ifseqformula "168"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "elementOfUnion" (formula "125") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "eqSymm" (formula "125") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "125") (term "1,0,0") (ifseqformula "167"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "elementOfUnion" (formula "125") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "eqSymm" (formula "125") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "125") (term "1,0,0") (ifseqformula "166"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "elementOfUnion" (formula "125") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "eqSymm" (formula "125") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "125") (term "1,0,0") (ifseqformula "165"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "elementOfUnion" (formula "125") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "125"))
                                                                              (rule "applyEqReverse" (formula "126") (term "0") (ifseqformula "125"))
                                                                              (rule "hideAuxiliaryEq" (formula "125"))
                                                                              (rule "commuteUnion_2" (formula "121") (term "1,0"))
                                                                              (rule "commuteUnion_2" (formula "121") (term "0,1,0"))
                                                                              (rule "commuteUnion" (formula "121") (term "0,0,0,0,0,0,1,0"))
                                                                              (rule "commuteUnion_2" (formula "121") (term "0,0,0,0,0,1,0"))
                                                                              (rule "commuteUnion_2" (formula "121") (term "0,0,0,0,1,0"))
                                                                              (rule "commuteUnion_2" (formula "121") (term "0,0,0,1,0"))
                                                                              (rule "commuteUnion_2" (formula "121") (term "0,0,1,0"))
                                                                              (rule "commuteUnion_2" (formula "121") (term "0,1,0"))
                                                                              (rule "commuteUnion_2" (formula "121") (term "1,0"))
                                                                              (rule "tryEmpty" (formula "202") (term "1"))
                                                                              (rule "blockEmptyLabel" (formula "202") (term "1"))
                                                                              (rule "blockEmpty" (formula "202") (term "1"))
                                                                              (rule "methodCallEmpty" (formula "202") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "202"))
                                                                              (rule "emptyModality" (formula "202") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "202"))
                                                                              (rule "closeTrue" (formula "202"))
                                                                           )
                                                                           (branch "Precondition"
                                                                              (rule "andRight" (formula "201"))
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "201"))
                                                                                 (rule "translateJavaSubInt" (formula "201") (term "0,0"))
                                                                                 (rule "polySimp_elimSub" (formula "201") (term "0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "201") (term "0,0"))
                                                                                 (rule "close" (formula "201") (ifseqformula "19"))
                                                                              )
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "201"))
                                                                                 (rule "wellFormedAnonEQ" (formula "201") (ifseqformula "121"))
                                                                                 (rule "wellFormedAnon" (formula "201") (term "0"))
                                                                                 (rule "wellFormedAnon" (formula "201") (term "0,0"))
                                                                                 (rule "wellFormedAnonEQ" (formula "201") (term "0,0,0") (ifseqformula "93"))
                                                                                 (rule "wellFormedAnonEQ" (formula "201") (term "0,0,0,0") (ifseqformula "67"))
                                                                                 (rule "wellFormedAnon" (formula "201") (term "0,0,0,0,0"))
                                                                                 (rule "wellFormedAnon" (formula "201") (term "0,0,0,0,0,0"))
                                                                                 (rule "wellFormedAnonEQ" (formula "201") (term "0,0,0,0,0,0,0") (ifseqformula "49"))
                                                                                 (rule "wellFormedAnonEQ" (formula "201") (term "0,0,0,0,0,0,0,0") (ifseqformula "38"))
                                                                                 (rule "wellFormedAnon" (formula "201") (term "0,0,0,0,0,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "201") (term "1,0,0") (ifseqformula "103"))
                                                                                  (builtin "One Step Simplification" (formula "201") (ifInst ""  (formula "11")) (ifInst ""  (formula "35")) (ifInst ""  (formula "37")) (ifInst ""  (formula "47")) (ifInst ""  (formula "58")) (ifInst ""  (formula "63")) (ifInst ""  (formula "66")) (ifInst ""  (formula "92")) (ifInst ""  (formula "109")) (ifInst ""  (formula "120")))
                                                                                 (rule "closeTrue" (formula "201"))
                                                                              )
                                                                           )
                                                                           (branch "Usage"
                                                                               (builtin "One Step Simplification" (formula "132"))
                                                                               (builtin "One Step Simplification" (formula "202"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,1,1,1,0") (ifseqformula "121"))
                                                                               (builtin "One Step Simplification" (formula "132"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,1,0,1,0") (ifseqformula "121"))
                                                                               (builtin "One Step Simplification" (formula "132"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,0,0,0,1,0,1,0") (ifseqformula "93"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,0,0,0,1,1,1,0") (ifseqformula "93"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,0,0,0,0,1,1,1,0") (ifseqformula "67"))
                                                                               (builtin "One Step Simplification" (formula "132"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,0,0,0,0,1,0,1,0") (ifseqformula "67"))
                                                                               (builtin "One Step Simplification" (formula "132"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "49"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "49"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,0,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "38"))
                                                                               (builtin "One Step Simplification" (formula "132"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "38"))
                                                                               (builtin "One Step Simplification" (formula "132"))
                                                                              (rule "expand_inInt" (formula "132") (term "1,0,0,1,1"))
                                                                              (rule "expand_inInt" (formula "132") (term "1,0,0,1,0,1,1"))
                                                                              (rule "replace_int_MAX" (formula "132") (term "1,0,1,0,0,1,1"))
                                                                              (rule "replace_int_MIN" (formula "132") (term "0,1,1,0,0,1,1"))
                                                                              (rule "replace_int_MIN" (formula "132") (term "0,1,1,0,0,1,0,1,1"))
                                                                              (rule "replace_int_MAX" (formula "132") (term "1,0,1,0,0,1,0,1,1"))
                                                                              (rule "andLeft" (formula "132"))
                                                                              (rule "andLeft" (formula "132"))
                                                                              (rule "andLeft" (formula "134"))
                                                                              (rule "andLeft" (formula "132"))
                                                                              (rule "andLeft" (formula "134"))
                                                                              (rule "exLeft" (formula "137") (inst "sk=i_1"))
                                                                              (rule "andLeft" (formula "137"))
                                                                              (rule "andLeft" (formula "137"))
                                                                              (rule "andLeft" (formula "137"))
                                                                              (rule "andLeft" (formula "139"))
                                                                              (rule "exLeft" (formula "141") (inst "sk=j_1"))
                                                                              (rule "andLeft" (formula "141"))
                                                                              (rule "notLeft" (formula "142"))
                                                                              (rule "andLeft" (formula "141"))
                                                                              (rule "andLeft" (formula "142"))
                                                                              (rule "andLeft" (formula "141"))
                                                                              (rule "translateJavaSubInt" (formula "136") (term "3,0"))
                                                                              (rule "eqSymm" (formula "145"))
                                                                              (rule "translateJavaCastInt" (formula "145") (term "2,1"))
                                                                              (rule "translateJavaCastInt" (formula "145") (term "2,0"))
                                                                              (rule "replace_known_left" (formula "135") (term "0") (ifseqformula "132"))
                                                                               (builtin "One Step Simplification" (formula "135"))
                                                                              (rule "true_left" (formula "135"))
                                                                              (rule "polySimp_elimSub" (formula "135") (term "3,0"))
                                                                              (rule "polySimp_addComm0" (formula "135") (term "3,0"))
                                                                              (rule "lenOfSeqDef" (formula "137") (term "1"))
                                                                              (rule "polySimp_elimSub" (formula "137") (term "1,1"))
                                                                              (rule "polySimp_addComm0" (formula "137") (term "1,1"))
                                                                              (rule "lenOfSeqDef" (formula "141") (term "1"))
                                                                              (rule "polySimp_elimSub" (formula "141") (term "1,1"))
                                                                              (rule "polySimp_addComm0" (formula "141") (term "1,1"))
                                                                              (rule "getOfSeqDef" (formula "144") (term "0,2,1"))
                                                                              (rule "castDel" (formula "144") (term "1,0,2,1"))
                                                                              (rule "castDel" (formula "144") (term "2,0,2,1"))
                                                                              (rule "replace_known_left" (formula "144") (term "0,0,0,2,1") (ifseqformula "136"))
                                                                               (builtin "One Step Simplification" (formula "144"))
                                                                              (rule "polySimp_elimSub" (formula "144") (term "1,0,0,2,1"))
                                                                              (rule "polySimp_addComm0" (formula "144") (term "0,2,1,0,2,1"))
                                                                              (rule "polySimp_addComm0" (formula "144") (term "1,0,0,2,1"))
                                                                              (rule "castedGetAny" (formula "144") (term "2,0"))
                                                                              (rule "getOfSeqDef" (formula "144") (term "2,0"))
                                                                              (rule "replace_known_left" (formula "144") (term "0,0,2,0") (ifseqformula "140"))
                                                                               (builtin "One Step Simplification" (formula "144"))
                                                                              (rule "polySimp_elimSub" (formula "144") (term "1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "144") (term "0,2,0,1,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "144") (term "1,0,2,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "136"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "139"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "143"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "140"))
                                                                              (rule "applyEq" (formula "127") (term "7,0") (ifseqformula "88"))
                                                                              (rule "applyEq" (formula "127") (term "5,0") (ifseqformula "88"))
                                                                              (rule "applyEq" (formula "135") (term "2,0") (ifseqformula "88"))
                                                                              (rule "applyEq" (formula "125") (term "0,2,0") (ifseqformula "88"))
                                                                              (rule "applyEq" (formula "124") (term "2,0") (ifseqformula "88"))
                                                                              (rule "pullOutSelect" (formula "144") (term "1,0,2,1") (inst "selectSK=arr_14"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "122"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "214")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "94"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "68"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "50"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "39"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                                                              (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "121") (ifseqformula "214"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "174"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "173"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "172"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "171"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "170"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "169"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "211")))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "pullOutSelect" (formula "145") (term "0,1,2,0") (inst "selectSK=arr_15"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "123"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "215")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "95"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "69"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "51"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "40"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                                                              (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "122") (ifseqformula "215"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "175"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "174"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "173"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "172"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "171"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "170"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "212")))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "pullOutSelect" (formula "127") (term "0") (inst "selectSK=arr_16"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "127") (ifseqformula "123"))
                                                                               (builtin "One Step Simplification" (formula "127") (ifInst ""  (formula "215")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,1,0,0") (ifseqformula "95"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,1,0,0") (ifseqformula "69"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "51"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "40"))
                                                                               (builtin "One Step Simplification" (formula "127") (ifInst ""  (formula "19")))
                                                                              (rule "elementOfUnion" (formula "127") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "eqSymm" (formula "127") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "127") (term "1,0,0") (ifseqformula "184"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "elementOfUnion" (formula "127") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "eqSymm" (formula "127") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "127") (term "1,0,0") (ifseqformula "183"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "elementOfUnion" (formula "127") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "eqSymm" (formula "127") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "127") (term "1,0,0") (ifseqformula "182"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "elementOfUnion" (formula "127") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "eqSymm" (formula "127") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "127") (term "1,0,0") (ifseqformula "181"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "elementOfUnion" (formula "127") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "eqSymm" (formula "127") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "127") (term "1,0,0") (ifseqformula "180"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "elementOfUnion" (formula "127") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "eqSymm" (formula "127") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "127") (term "1,0,0") (ifseqformula "179"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "elementOfUnion" (formula "127") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "127"))
                                                                              (rule "applyEqReverse" (formula "128") (term "0") (ifseqformula "127"))
                                                                              (rule "hideAuxiliaryEq" (formula "127"))
                                                                              (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_17"))
                                                                              (rule "simplifySelectOfAnon" (formula "2"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "216")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0") (ifseqformula "96"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0,0,0,0") (ifseqformula "52"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "41"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "15")))
                                                                              (rule "simplifySelectOfAnon" (formula "2"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "216")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "96"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0,0,0") (ifseqformula "52"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0,0,0,0") (ifseqformula "41"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "15")))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "96"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "216")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0,0") (ifseqformula "52"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0,0,0") (ifseqformula "41"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "15")))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "216")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "52"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "41"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "15")))
                                                                              (rule "narrowSelectArrayType" (formula "2") (term "1,0") (ifseqformula "69") (ifseqformula "216"))
                                                                              (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                                              (rule "eqSymm" (formula "2") (term "0,0,0"))
                                                                              (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "170"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "169")))
                                                                              (rule "simplifySelectOfAnon" (formula "2"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "216")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0") (ifseqformula "52"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0") (ifseqformula "41"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "15")))
                                                                              (rule "simplifySelectOfAnon" (formula "2"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "216")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "52"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0") (ifseqformula "41"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "15")))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "52"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "216")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "41"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "15")))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                              (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "170"))
                                                                               (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "41"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "216")) (ifInst ""  (formula "15")))
                                                                              (rule "narrowSelectArrayType" (formula "2") (term "1,0") (ifseqformula "40") (ifseqformula "216"))
                                                                              (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                              (rule "disjointAllFields" (formula "2") (term "0,0,0") (ifseqformula "35"))
                                                                               (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_18"))
                                                                              (rule "simplifySelectOfAnon" (formula "1"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "217")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "97"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "53"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "42"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                                                              (rule "simplifySelectOfAnon" (formula "1"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "217")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "97"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "53"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "42"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "97"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "217")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "53"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "42"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "217")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "53"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "42"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                                                              (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "70") (ifseqformula "217"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "170"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "171")))
                                                                              (rule "simplifySelectOfAnon" (formula "1"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "217")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "53"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "42"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                                                              (rule "simplifySelectOfAnon" (formula "1"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "217")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "53"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "42"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "217")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "42"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                              (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "171"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "217")) (ifInst ""  (formula "16")))
                                                                              (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "41") (ifseqformula "217"))
                                                                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                              (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_19"))
                                                                              (rule "simplifySelectOfAnon" (formula "3"))
                                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "218")) (ifInst ""  (formula "17")))
                                                                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                              (rule "hideAuxiliaryEq" (formula "3"))
                                                                              (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "15") (ifseqformula "217"))
                                                                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_20"))
                                                                              (rule "simplifySelectOfAnon" (formula "1"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "218")) (ifInst ""  (formula "17")))
                                                                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                              (rule "hideAuxiliaryEq" (formula "1"))
                                                                              (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "15") (ifseqformula "217"))
                                                                              (rule "commuteUnion_2" (formula "125") (term "1,0"))
                                                                              (rule "commuteUnion_2" (formula "125") (term "0,1,0"))
                                                                              (rule "commuteUnion" (formula "125") (term "0,0,0,0,0,0,1,0"))
                                                                              (rule "commuteUnion_2" (formula "125") (term "0,0,0,0,0,1,0"))
                                                                              (rule "commuteUnion_2" (formula "125") (term "0,0,0,0,1,0"))
                                                                              (rule "commuteUnion_2" (formula "125") (term "0,0,0,1,0"))
                                                                              (rule "commuteUnion_2" (formula "125") (term "0,0,1,0"))
                                                                              (rule "commuteUnion_2" (formula "125") (term "0,1,0"))
                                                                              (rule "commuteUnion_2" (formula "125") (term "1,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "1"))
                                                                              (rule "ifUnfold" (formula "218") (term "1") (inst "#boolv=x"))
                                                                              (rule "variableDeclaration" (formula "218") (term "1") (newnames "x_6"))
                                                                               (builtin "Use Dependency Contract" (formula "149") (term "1") (ifInst ""  (formula "149") (term "0,1")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::classOf(int)].JML accessible clause.0"))
                                                                               (builtin "One Step Simplification" (formula "148") (ifInst ""  (formula "166")) (ifInst ""  (formula "106")))
                                                                              (rule "wellFormedAnon" (formula "148") (term "1,1,0,0"))
                                                                              (rule "wellFormedAnon" (formula "148") (term "0,1,0,0"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "148") (term "0,0,0,0") (ifseqformula "97"))
                                                                              (rule "wellFormedAnon" (formula "148") (term "0,1,1,0,0"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "148") (term "0,0,0,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "148") (ifInst ""  (formula "72")) (ifInst ""  (formula "107")) (ifInst ""  (formula "107")) (ifInst ""  (formula "113")))
                                                                              (rule "wellFormedAnonEQ" (formula "148") (term "0,0") (ifseqformula "97"))
                                                                              (rule "wellFormedAnonEQ" (formula "148") (term "0,0,0") (ifseqformula "71"))
                                                                              (rule "wellFormedAnon" (formula "148") (term "0,0,0,0"))
                                                                              (rule "wellFormedAnon" (formula "148") (term "0,0,0,0,0"))
                                                                              (rule "wellFormedAnonEQ" (formula "148") (term "0,0,0,0,0,0") (ifseqformula "53"))
                                                                              (rule "wellFormedAnonEQ" (formula "148") (term "0,0,0,0,0,0,0") (ifseqformula "42"))
                                                                              (rule "wellFormedAnon" (formula "148") (term "0,0,0,0,0,0,0,0"))
                                                                              (rule "expand_inInt" (formula "148") (term "1,0"))
                                                                              (rule "replace_int_MAX" (formula "148") (term "1,0,1,0"))
                                                                              (rule "replace_int_MIN" (formula "148") (term "0,1,1,0"))
                                                                              (rule "replace_known_left" (formula "148") (term "1,0,0") (ifseqformula "96"))
                                                                               (builtin "One Step Simplification" (formula "148") (ifInst ""  (formula "15")) (ifInst ""  (formula "39")) (ifInst ""  (formula "41")) (ifInst ""  (formula "51")) (ifInst ""  (formula "62")) (ifInst ""  (formula "67")) (ifInst ""  (formula "70")))
                                                                              (rule "inEqSimp_commuteLeq" (formula "148") (term "1,0"))
                                                                               (builtin "Use Dependency Contract" (formula "150") (term "0") (ifInst ""  (formula "150") (term "0,0")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::classOf(int)].JML accessible clause.0"))
                                                                               (builtin "One Step Simplification" (formula "149") (ifInst ""  (formula "167")) (ifInst ""  (formula "106")))
                                                                              (rule "wellFormedAnon" (formula "149") (term "0,1,0,0"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "149") (term "0,0,0,0") (ifseqformula "97"))
                                                                              (rule "wellFormedAnon" (formula "149") (term "1,1,0,0"))
                                                                              (rule "wellFormedAnon" (formula "149") (term "0,1,1,0,0"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "149") (term "0,0,0,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "149") (ifInst ""  (formula "72")) (ifInst ""  (formula "107")) (ifInst ""  (formula "107")) (ifInst ""  (formula "113")))
                                                                              (rule "wellFormedAnonEQ" (formula "149") (term "0,0") (ifseqformula "97"))
                                                                              (rule "wellFormedAnonEQ" (formula "149") (term "0,0,0") (ifseqformula "71"))
                                                                              (rule "wellFormedAnon" (formula "149") (term "0,0,0,0"))
                                                                              (rule "wellFormedAnon" (formula "149") (term "0,0,0,0,0"))
                                                                              (rule "wellFormedAnonEQ" (formula "149") (term "0,0,0,0,0,0") (ifseqformula "53"))
                                                                              (rule "wellFormedAnonEQ" (formula "149") (term "0,0,0,0,0,0,0") (ifseqformula "42"))
                                                                              (rule "wellFormedAnon" (formula "149") (term "0,0,0,0,0,0,0,0"))
                                                                              (rule "expand_inInt" (formula "149") (term "1,0"))
                                                                              (rule "replace_int_MAX" (formula "149") (term "1,0,1,0"))
                                                                              (rule "replace_int_MIN" (formula "149") (term "0,1,1,0"))
                                                                              (rule "replace_known_left" (formula "149") (term "1,0,0,0,0,0,0,0") (ifseqformula "41"))
                                                                               (builtin "One Step Simplification" (formula "149") (ifInst ""  (formula "15")) (ifInst ""  (formula "39")) (ifInst ""  (formula "51")) (ifInst ""  (formula "62")) (ifInst ""  (formula "67")) (ifInst ""  (formula "70")) (ifInst ""  (formula "96")))
                                                                              (rule "inEqSimp_commuteLeq" (formula "149") (term "1,0"))
                                                                              (rule "shift_paren_or" (formula "138"))
                                                                              (rule "commute_and" (formula "148") (term "0"))
                                                                              (rule "shift_paren_or" (formula "138") (term "0"))
                                                                              (rule "commute_and" (formula "149") (term "0"))
                                                                              (rule "shift_paren_or" (formula "138") (term "0,0"))
                                                                               (builtin "Use Dependency Contract" (formula "48") (ifInst ""  (formula "220") (term "0,0,1")) (ifInst ""  (formula "42")) (contract "de.wiesler.Storage[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnonEQ" (formula "150") (term "1,1,0,0,0") (ifseqformula "42"))
                                                                              (rule "wellFormedAnon" (formula "150") (term "0,1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "150") (term "0,1,0,0,0") (ifseqformula "15"))
                                                                               (builtin "One Step Simplification" (formula "150") (ifInst ""  (formula "218")) (ifInst ""  (formula "22")) (ifInst ""  (formula "15")) (ifInst ""  (formula "39")) (ifInst ""  (formula "41")) (ifInst ""  (formula "24")) (ifInst ""  (formula "48")) (ifInst ""  (formula "24")))
                                                                              (rule "true_left" (formula "150"))
                                                                              (rule "commute_or_2" (formula "138") (term "1,0,0,0"))
                                                                              (rule "shift_paren_or" (formula "138") (term "0,0,0"))
                                                                              (rule "inequality_comparison_simple" (formula "220") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "220"))
                                                                              (rule "replace_known_left" (formula "220") (term "0,0,1,0") (ifseqformula "136"))
                                                                               (builtin "One Step Simplification" (formula "220"))
                                                                              (rule "shift_paren_or" (formula "138") (term "0,0,0,0"))
                                                                              (rule "shift_paren_or" (formula "138") (term "0,0,0,0,0"))
                                                                              (rule "shift_paren_or" (formula "138") (term "0,0,0,0,0,0"))
                                                                              (rule "shift_paren_or" (formula "138") (term "0,0,0,0,0,0,0"))
                                                                              (rule "shift_paren_or" (formula "138") (term "0,0,0,0,0,0,0,0"))
                                                                              (rule "shift_paren_or" (formula "138") (term "0,0,0,0,0,0,0,0,0"))
                                                                               (builtin "Use Dependency Contract" (formula "150") (term "1") (ifInst ""  (formula "150") (term "0,1")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::classOf(int)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "150") (term "1,1,0,0,0"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "150") (term "1,0,0,0,0") (ifseqformula "125"))
                                                                               (builtin "One Step Simplification" (formula "150") (ifInst ""  (formula "168")) (ifInst ""  (formula "137")) (ifInst ""  (formula "135")))
                                                                              (rule "wellFormedAnonEQ" (formula "150") (term "1,0,0") (ifseqformula "125"))
                                                                              (rule "wellFormedAnon" (formula "150") (term "0,1,0,0"))
                                                                              (rule "wellFormedAnon" (formula "150") (term "0,0,1,0,0"))
                                                                              (rule "wellFormedAnonEQ" (formula "150") (term "0,0,0,1,0,0") (ifseqformula "97"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "150") (term "0,0,0,0,0,0") (ifseqformula "97"))
                                                                              (rule "wellFormedAnonEQ" (formula "150") (term "0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "150") (term "0,0,0,0,0,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "150") (ifInst ""  (formula "72")) (ifInst ""  (formula "70")) (ifInst ""  (formula "96")) (ifInst ""  (formula "107")) (ifInst ""  (formula "113")) (ifInst ""  (formula "124")))
                                                                              (rule "wellFormedAnon" (formula "150") (term "0,0"))
                                                                              (rule "wellFormedAnon" (formula "150") (term "0,0,0"))
                                                                              (rule "wellFormedAnonEQ" (formula "150") (term "0,0,0,0") (ifseqformula "53"))
                                                                              (rule "wellFormedAnonEQ" (formula "150") (term "0,0,0,0,0") (ifseqformula "42"))
                                                                              (rule "wellFormedAnon" (formula "150") (term "0,0,0,0,0,0"))
                                                                              (rule "expand_inInt" (formula "150") (term "1,0"))
                                                                              (rule "replace_int_MIN" (formula "150") (term "0,1,1,0"))
                                                                              (rule "replace_int_MAX" (formula "150") (term "1,0,1,0"))
                                                                              (rule "replace_known_left" (formula "150") (term "1,0,0,0,0,0") (ifseqformula "41"))
                                                                               (builtin "One Step Simplification" (formula "150") (ifInst ""  (formula "15")) (ifInst ""  (formula "39")) (ifInst ""  (formula "51")) (ifInst ""  (formula "62")) (ifInst ""  (formula "67")))
                                                                              (rule "inEqSimp_commuteLeq" (formula "150") (term "1,0"))
                                                                              (rule "commute_and" (formula "150") (term "0"))
                                                                               (builtin "Use Dependency Contract" (formula "151") (term "0") (ifInst ""  (formula "151") (term "0,0")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::classOf(int)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "151") (term "1,1,0,0,0"))
                                                                              (rule "wellFormedAnonEQ" (formula "151") (term "0,1,0,0,0") (ifseqformula "125"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "151") (term "1,0,0,0,0") (ifseqformula "125"))
                                                                               (builtin "One Step Simplification" (formula "151") (ifInst ""  (formula "169")) (ifInst ""  (formula "124")) (ifInst ""  (formula "137")) (ifInst ""  (formula "135")))
                                                                              (rule "wellFormedAnon" (formula "151") (term "0,1,0,0"))
                                                                              (rule "wellFormedAnonEQ" (formula "151") (term "1,1,0,0") (ifseqformula "125"))
                                                                              (rule "wellFormedAnon" (formula "151") (term "0,0,1,0,0"))
                                                                              (rule "wellFormedAnon" (formula "151") (term "0,1,1,0,0"))
                                                                              (rule "wellFormedAnon" (formula "151") (term "0,0,1,1,0,0"))
                                                                              (rule "wellFormedAnonEQ" (formula "151") (term "0,0,0,1,0,0") (ifseqformula "97"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "151") (term "0,0,0,0,0,0") (ifseqformula "97"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "151") (term "0,0,0,0,0,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "151") (ifInst ""  (formula "72")) (ifInst ""  (formula "96")) (ifInst ""  (formula "107")) (ifInst ""  (formula "113")) (ifInst ""  (formula "107")) (ifInst ""  (formula "113")) (ifInst ""  (formula "124")))
                                                                              (rule "wellFormedAnonEQ" (formula "151") (term "1,0,0") (ifseqformula "97"))
                                                                              (rule "wellFormedAnonEQ" (formula "151") (term "0,0,0") (ifseqformula "71"))
                                                                              (rule "wellFormedAnon" (formula "151") (term "0,0,0,0"))
                                                                              (rule "wellFormedAnonEQ" (formula "151") (term "0,1,0,0") (ifseqformula "71"))
                                                                              (rule "wellFormedAnon" (formula "151") (term "0,0,0,0,0"))
                                                                              (rule "wellFormedAnon" (formula "151") (term "0,0,1,0,0"))
                                                                              (rule "wellFormedAnon" (formula "151") (term "0,0,0,1,0,0"))
                                                                              (rule "wellFormedAnonEQ" (formula "151") (term "0,0,0,0,0,0") (ifseqformula "53"))
                                                                              (rule "wellFormedAnonEQ" (formula "151") (term "0,0,0,0,1,0,0") (ifseqformula "53"))
                                                                              (rule "wellFormedAnonEQ" (formula "151") (term "0,0,0,0,0,0,0") (ifseqformula "42"))
                                                                              (rule "wellFormedAnon" (formula "151") (term "0,0,0,0,0,0,0,0"))
                                                                              (rule "wellFormedAnonEQ" (formula "151") (term "0,0,0,0,0,1,0,0") (ifseqformula "42"))
                                                                              (rule "wellFormedAnon" (formula "151") (term "0,0,0,0,0,0,1,0,0"))
                                                                              (rule "expand_inInt" (formula "151") (term "1,0"))
                                                                              (rule "replace_int_MIN" (formula "151") (term "0,1,1,0"))
                                                                              (rule "replace_int_MAX" (formula "151") (term "1,0,1,0"))
                                                                              (rule "replace_known_left" (formula "151") (term "1,1,0,0") (ifseqformula "96"))
                                                                               (builtin "One Step Simplification" (formula "151") (ifInst ""  (formula "15")) (ifInst ""  (formula "39")) (ifInst ""  (formula "41")) (ifInst ""  (formula "51")) (ifInst ""  (formula "62")) (ifInst ""  (formula "67")) (ifInst ""  (formula "70")) (ifInst ""  (formula "15")) (ifInst ""  (formula "39")) (ifInst ""  (formula "41")) (ifInst ""  (formula "51")) (ifInst ""  (formula "62")) (ifInst ""  (formula "67")) (ifInst ""  (formula "70")))
                                                                              (rule "inEqSimp_commuteLeq" (formula "151") (term "1,0"))
                                                                              (rule "commute_and" (formula "151") (term "0"))
                                                                              (rule "shift_paren_or" (formula "138") (term "0,0,0,0,0,0,0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0,0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0,0,0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0,0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0,0"))
                                                                              (rule "commute_or_2" (formula "138") (term "0"))
                                                                              (rule "commute_or_2" (formula "138"))
                                                                              (rule "ifSplit" (formula "222"))
                                                                              (branch "if x_6 true"
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                              (branch "if x_6 false"
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                  (builtin "One Step Simplification" (formula "223"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "blockEmpty" (formula "222") (term "1"))
                                                                                  (builtin "Block Contract (Internal)" (formula "222") (newnames "anonOut_heap_5,result_230,exc_272,heap_Before_BLOCK_5,savedHeap_Before_BLOCK_5,o,f"))
                                                                                 (branch "Validity"
                                                                                     (builtin "One Step Simplification" (formula "152"))
                                                                                     (builtin "One Step Simplification" (formula "223"))
                                                                                    (rule "andLeft" (formula "152"))
                                                                                    (rule "translateJavaSubInt" (formula "152") (term "0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "152") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "152") (term "0,0"))
                                                                                    (rule "variableDeclarationAssign" (formula "223") (term "1"))
                                                                                    (rule "variableDeclaration" (formula "223") (term "1") (newnames "exc_272_1"))
                                                                                    (rule "assignment" (formula "223") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "223"))
                                                                                    (rule "emptyStatement" (formula "223") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "223"))
                                                                                    (rule "emptyStatement" (formula "223") (term "1"))
                                                                                    (rule "tryEmpty" (formula "223") (term "1"))
                                                                                    (rule "blockEmptyLabel" (formula "223") (term "1"))
                                                                                    (rule "blockEmpty" (formula "223") (term "1"))
                                                                                    (rule "methodCallEmpty" (formula "223") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "223"))
                                                                                    (rule "emptyModality" (formula "223") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "223"))
                                                                                    (rule "closeTrue" (formula "223"))
                                                                                 )
                                                                                 (branch "Precondition"
                                                                                    (rule "andRight" (formula "222"))
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "222"))
                                                                                       (rule "translateJavaSubInt" (formula "222") (term "0,0"))
                                                                                       (rule "polySimp_elimSub" (formula "222") (term "0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "222") (term "0,0"))
                                                                                       (rule "close" (formula "222") (ifseqformula "23"))
                                                                                    )
                                                                                    (branch
                                                                                        (builtin "One Step Simplification" (formula "222"))
                                                                                       (rule "wellFormedAnon" (formula "222"))
                                                                                       (rule "wellFormedAnonEQ" (formula "222") (term "0") (ifseqformula "125"))
                                                                                       (rule "wellFormedAnon" (formula "222") (term "0,0"))
                                                                                       (rule "wellFormedAnon" (formula "222") (term "0,0,0"))
                                                                                       (rule "wellFormedAnonEQ" (formula "222") (term "0,0,0,0") (ifseqformula "97"))
                                                                                       (rule "wellFormedAnonEQ" (formula "222") (term "0,0,0,0,0") (ifseqformula "71"))
                                                                                       (rule "wellFormedAnon" (formula "222") (term "0,0,0,0,0,0"))
                                                                                       (rule "wellFormedAnon" (formula "222") (term "0,0,0,0,0,0,0"))
                                                                                       (rule "wellFormedAnonEQ" (formula "222") (term "0,0,0,0,0,0,0,0") (ifseqformula "53"))
                                                                                       (rule "wellFormedAnonEQ" (formula "222") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "42"))
                                                                                       (rule "wellFormedAnon" (formula "222") (term "0,0,0,0,0,0,0,0,0,0"))
                                                                                       (rule "replace_known_left" (formula "222") (term "1,0,0,0,0,0,0") (ifseqformula "67"))
                                                                                        (builtin "One Step Simplification" (formula "222") (ifInst ""  (formula "15")) (ifInst ""  (formula "39")) (ifInst ""  (formula "41")) (ifInst ""  (formula "51")) (ifInst ""  (formula "62")) (ifInst ""  (formula "70")) (ifInst ""  (formula "96")) (ifInst ""  (formula "107")) (ifInst ""  (formula "113")) (ifInst ""  (formula "124")) (ifInst ""  (formula "137")))
                                                                                       (rule "closeTrue" (formula "222"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Usage"
                                                                                     (builtin "One Step Simplification" (formula "152"))
                                                                                     (builtin "One Step Simplification" (formula "223"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "152") (term "0,0,1,0,1,0") (ifseqformula "125"))
                                                                                     (builtin "One Step Simplification" (formula "152"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "152") (term "0,0,1,1,1,0") (ifseqformula "125"))
                                                                                     (builtin "One Step Simplification" (formula "152"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "152") (term "0,0,0,0,0,1,0,1,0") (ifseqformula "97"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "152") (term "0,0,0,0,0,1,1,1,0") (ifseqformula "97"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "152") (term "0,0,0,0,0,0,1,0,1,0") (ifseqformula "71"))
                                                                                     (builtin "One Step Simplification" (formula "152"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "152") (term "0,0,0,0,0,0,1,1,1,0") (ifseqformula "71"))
                                                                                     (builtin "One Step Simplification" (formula "152"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "152") (term "0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "53"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "152") (term "0,0,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "53"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "152") (term "0,0,0,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "42"))
                                                                                     (builtin "One Step Simplification" (formula "152"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "152") (term "0,0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "42"))
                                                                                     (builtin "One Step Simplification" (formula "152"))
                                                                                    (rule "expand_inInt" (formula "152") (term "1,0,0,1,0,0,1"))
                                                                                    (rule "expand_inInt" (formula "152") (term "1,0,0,0,1"))
                                                                                    (rule "replace_int_MIN" (formula "152") (term "0,1,1,0,0,1,0,0,1"))
                                                                                    (rule "replace_int_MAX" (formula "152") (term "1,0,1,0,0,1,0,0,1"))
                                                                                    (rule "replace_int_MIN" (formula "152") (term "0,1,1,0,0,0,1"))
                                                                                    (rule "replace_int_MAX" (formula "152") (term "1,0,1,0,0,0,1"))
                                                                                    (rule "andLeft" (formula "152"))
                                                                                    (rule "andLeft" (formula "152"))
                                                                                    (rule "andLeft" (formula "154"))
                                                                                    (rule "andLeft" (formula "152"))
                                                                                    (rule "andLeft" (formula "154"))
                                                                                    (rule "andLeft" (formula "157"))
                                                                                    (rule "exLeft" (formula "156") (inst "sk=i_2"))
                                                                                    (rule "andLeft" (formula "156"))
                                                                                    (rule "andLeft" (formula "156"))
                                                                                    (rule "andLeft" (formula "157"))
                                                                                    (rule "andLeft" (formula "156"))
                                                                                    (rule "exLeft" (formula "160") (inst "sk=j_2"))
                                                                                    (rule "andLeft" (formula "160"))
                                                                                    (rule "andLeft" (formula "160"))
                                                                                    (rule "notLeft" (formula "162"))
                                                                                    (rule "andLeft" (formula "161"))
                                                                                    (rule "andLeft" (formula "160"))
                                                                                    (rule "eqSymm" (formula "166"))
                                                                                    (rule "replace_known_left" (formula "155") (term "0") (ifseqformula "152"))
                                                                                     (builtin "One Step Simplification" (formula "155"))
                                                                                    (rule "true_left" (formula "155"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "158"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "155"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "162"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "159"))
                                                                                    (rule "pullOutSelect" (formula "165") (term "2,0") (inst "selectSK=arr_21"))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "236")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "126"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "98"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "72"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "54"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "43"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "236")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "126"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "98"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "72"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "54"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "43"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "126"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "236")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "98"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "72"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "54"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "43"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                                                                    (rule "eqSymm" (formula "166"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "160"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "195"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "194"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "196"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "193"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "192"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "233")))
                                                                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "191"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "pullOutSelect" (formula "166") (term "2,0") (inst "selectSK=arr_22"))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "237")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "127"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "99"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "73"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "55"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "44"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "237")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "127"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "99"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "73"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "55"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "44"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "127"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "237")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "99"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "73"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "55"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "44"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "157"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "196"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "195"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "197"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "194"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "193"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "234")))
                                                                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "192"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_23"))
                                                                                    (rule "simplifySelectOfAnon" (formula "2"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "238")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0") (ifseqformula "100"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0") (ifseqformula "74"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0,0,0,0") (ifseqformula "56"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "45"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                                                                                    (rule "simplifySelectOfAnon" (formula "2"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "238")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "100"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0") (ifseqformula "74"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0,0,0") (ifseqformula "56"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0,0,0,0") (ifseqformula "45"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "100"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "238")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "74"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0,0") (ifseqformula "56"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0,0,0") (ifseqformula "45"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "74"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "238")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "56"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "45"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                                                                                    (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                                                                    (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "191"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "192")))
                                                                                    (rule "simplifySelectOfAnon" (formula "2"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "238")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0") (ifseqformula "56"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0") (ifseqformula "45"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                                                                                    (rule "simplifySelectOfAnon" (formula "2"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "238")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "56"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0") (ifseqformula "45"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "56"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "238")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "45"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "192"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "45"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "238")) (ifInst ""  (formula "19")))
                                                                                    (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "2") (term "0,0,0") (ifseqformula "39"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                                                                                    (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "162"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_24"))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "239")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "101"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "75"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "57"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "46"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "239")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "101"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "75"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "57"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "46"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "101"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "239")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "75"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "57"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "46"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "75"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "239")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "57"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "46"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "192"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "193")))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "239")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "57"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "46"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "239")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "57"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "239")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "46"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "193"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "239")) (ifInst ""  (formula "20")))
                                                                                    (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                                    (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                                                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "159"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_25"))
                                                                                    (rule "simplifySelectOfAnon" (formula "3"))
                                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "240")) (ifInst ""  (formula "21")))
                                                                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                                    (rule "hideAuxiliaryEq" (formula "3"))
                                                                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_26"))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "240")) (ifInst ""  (formula "21")))
                                                                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                                    (rule "hideAuxiliaryEq" (formula "1"))
                                                                                    (rule "shift_paren_or" (formula "158"))
                                                                                    (rule "ifUnfold" (formula "240") (term "1") (inst "#boolv=x"))
                                                                                    (rule "variableDeclaration" (formula "240") (term "1") (newnames "x_7"))
                                                                                    (rule "commute_or_2" (formula "158") (term "1,0"))
                                                                                    (rule "shift_paren_or" (formula "158") (term "0"))
                                                                                    (rule "shift_paren_or" (formula "158") (term "0,0"))
                                                                                     (builtin "Use Dependency Contract" (formula "152") (term "1,1") (ifInst ""  (formula "152") (term "0,1,1")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::classOf(int)].JML accessible clause.0"))
                                                                                    (rule "wellFormedAnon" (formula "169") (term "1,1,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "169") (term "0,1,0,0,0") (ifseqformula "101"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "169") (term "1,0,0,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnonEQ" (formula "169") (term "0,1,1,0,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnonEQ" (formula "169") (term "0,0,1,0,0,0") (ifseqformula "75"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "169") (term "0,1,0,0,0,0") (ifseqformula "75"))
                                                                                     (builtin "One Step Simplification" (formula "169") (ifInst ""  (formula "188")) (ifInst ""  (formula "76")) (ifInst ""  (formula "74")) (ifInst ""  (formula "100")) (ifInst ""  (formula "100")) (ifInst ""  (formula "111")))
                                                                                    (rule "wellFormedAnon" (formula "169") (term "0,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "169") (term "1,0,0,0") (ifseqformula "75"))
                                                                                    (rule "wellFormedAnon" (formula "169") (term "0,0,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "169") (term "0,1,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "169") (term "0,0,1,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "169") (term "0,0,0,0,0,0") (ifseqformula "57"))
                                                                                    (rule "wellFormedAnonEQ" (formula "169") (term "0,0,0,1,0,0,0") (ifseqformula "57"))
                                                                                    (rule "wellFormedAnonEQ" (formula "169") (term "0,0,0,0,0,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnon" (formula "169") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "169") (term "0,0,0,0,1,0,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnon" (formula "169") (term "0,0,0,0,0,1,0,0,0"))
                                                                                    (rule "expand_inInt" (formula "169") (term "1,0,0"))
                                                                                    (rule "replace_int_MAX" (formula "169") (term "1,0,1,0,0"))
                                                                                    (rule "replace_int_MIN" (formula "169") (term "0,1,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "169") (term "1,0,0,0,0,0,0,0") (ifseqformula "45"))
                                                                                     (builtin "One Step Simplification" (formula "169") (ifInst ""  (formula "19")) (ifInst ""  (formula "43")) (ifInst ""  (formula "55")) (ifInst ""  (formula "66")) (ifInst ""  (formula "71")) (ifInst ""  (formula "19")) (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "66")) (ifInst ""  (formula "71")) (ifInst ""  (formula "74")))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "169") (term "1,0,0"))
                                                                                     (builtin "Use Dependency Contract" (formula "152") (term "0,1") (ifInst ""  (formula "152") (term "0,0,1")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::classOf(int)].JML accessible clause.0"))
                                                                                     (builtin "One Step Simplification" (formula "170") (ifInst ""  (formula "189")) (ifInst ""  (formula "110")))
                                                                                    (rule "wellFormedAnon" (formula "170") (term "1,1,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "170") (term "0,1,0,0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "170") (term "0,0,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnon" (formula "170") (term "0,1,1,0,0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "170") (term "0,0,0,0,0") (ifseqformula "75"))
                                                                                     (builtin "One Step Simplification" (formula "170") (ifInst ""  (formula "76")) (ifInst ""  (formula "111")) (ifInst ""  (formula "111")) (ifInst ""  (formula "117")))
                                                                                    (rule "wellFormedAnonEQ" (formula "170") (term "0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnonEQ" (formula "170") (term "0,0,0") (ifseqformula "75"))
                                                                                    (rule "wellFormedAnon" (formula "170") (term "0,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "170") (term "0,0,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "170") (term "0,0,0,0,0,0") (ifseqformula "57"))
                                                                                    (rule "wellFormedAnonEQ" (formula "170") (term "0,0,0,0,0,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnon" (formula "170") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "expand_inInt" (formula "170") (term "1,0"))
                                                                                    (rule "replace_int_MAX" (formula "170") (term "1,0,1,0"))
                                                                                    (rule "replace_int_MIN" (formula "170") (term "0,1,1,0"))
                                                                                    (rule "replace_known_left" (formula "170") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "19"))
                                                                                     (builtin "One Step Simplification" (formula "170") (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "66")) (ifInst ""  (formula "71")) (ifInst ""  (formula "74")) (ifInst ""  (formula "100")))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "170") (term "1,0"))
                                                                                     (builtin "Use Dependency Contract" (formula "153") (term "1,1") (ifInst ""  (formula "153") (term "0,1,1")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::classOf(int)].JML accessible clause.0"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "1,1,0,0,0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "171") (term "1,0,0,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,1,0,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,1,1,0,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,0,1,0,0,0") (ifseqformula "75"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "171") (term "0,1,0,0,0,0") (ifseqformula "75"))
                                                                                     (builtin "One Step Simplification" (formula "171") (ifInst ""  (formula "190")) (ifInst ""  (formula "76")) (ifInst ""  (formula "74")) (ifInst ""  (formula "100")) (ifInst ""  (formula "100")) (ifInst ""  (formula "111")))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "1,0,0,0") (ifseqformula "75"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,0,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,1,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,0,1,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,0,0,0,0,0") (ifseqformula "57"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,0,0,0,0,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,0,0,1,0,0,0") (ifseqformula "57"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,0,0,0,1,0,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,0,0,0,0,1,0,0,0"))
                                                                                    (rule "expand_inInt" (formula "171") (term "1,0,0"))
                                                                                    (rule "replace_int_MAX" (formula "171") (term "1,0,1,0,0"))
                                                                                    (rule "replace_int_MIN" (formula "171") (term "0,1,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "171") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "19"))
                                                                                     (builtin "One Step Simplification" (formula "171") (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "66")) (ifInst ""  (formula "71")) (ifInst ""  (formula "19")) (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "66")) (ifInst ""  (formula "71")) (ifInst ""  (formula "74")))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "171") (term "1,0,0"))
                                                                                     (builtin "Use Dependency Contract" (formula "153") (term "0,1") (ifInst ""  (formula "153") (term "0,0,1")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::classOf(int)].JML accessible clause.0"))
                                                                                     (builtin "One Step Simplification" (formula "172") (ifInst ""  (formula "191")) (ifInst ""  (formula "110")))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,1,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "1,1,0,0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "172") (term "0,0,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,1,1,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,1,0,0") (ifseqformula "101"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "172") (term "0,0,0,0,0") (ifseqformula "75"))
                                                                                     (builtin "One Step Simplification" (formula "172") (ifInst ""  (formula "76")) (ifInst ""  (formula "100")) (ifInst ""  (formula "111")) (ifInst ""  (formula "111")) (ifInst ""  (formula "117")))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0") (ifseqformula "75"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "1,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,1,0,0") (ifseqformula "75"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,1,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,1,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,0,0,0") (ifseqformula "57"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,0,0,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,0,1,0,0") (ifseqformula "57"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,0,0,1,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,0,0,0,1,0,0"))
                                                                                    (rule "expand_inInt" (formula "172") (term "1,0"))
                                                                                    (rule "replace_int_MAX" (formula "172") (term "1,0,1,0"))
                                                                                    (rule "replace_int_MIN" (formula "172") (term "0,1,1,0"))
                                                                                    (rule "replace_known_left" (formula "172") (term "1,1,0,0") (ifseqformula "100"))
                                                                                     (builtin "One Step Simplification" (formula "172") (ifInst ""  (formula "19")) (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "66")) (ifInst ""  (formula "71")) (ifInst ""  (formula "74")) (ifInst ""  (formula "19")) (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "66")) (ifInst ""  (formula "71")) (ifInst ""  (formula "74")))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "172") (term "1,0"))
                                                                                     (builtin "Use Dependency Contract" (formula "52") (ifInst ""  (formula "244") (term "0,0,1")) (ifInst ""  (formula "46")) (contract "de.wiesler.Storage[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "173") (term "1,1,0,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnon" (formula "173") (term "0,1,1,0,0,0"))
                                                                                    (rule "replace_known_left" (formula "173") (term "1,1") (ifseqformula "28"))
                                                                                     (builtin "One Step Simplification" (formula "173") (ifInst ""  (formula "242")) (ifInst ""  (formula "26")) (ifInst ""  (formula "19")) (ifInst ""  (formula "19")) (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "28")) (ifInst ""  (formula "52")))
                                                                                    (rule "true_left" (formula "173"))
                                                                                    (rule "shift_paren_or" (formula "158") (term "0,0,0"))
                                                                                    (rule "commute_and_2" (formula "169") (term "0"))
                                                                                    (rule "commute_and" (formula "170") (term "0"))
                                                                                     (builtin "Use Dependency Contract" (formula "154") (term "0,1") (ifInst ""  (formula "154") (term "0,0,1")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::classOf(int)].JML accessible clause.0"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "1,1,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,1,0,0,0") (ifseqformula "129"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "172") (term "1,0,0,0,0") (ifseqformula "129"))
                                                                                     (builtin "One Step Simplification" (formula "172") (ifInst ""  (formula "191")) (ifInst ""  (formula "128")) (ifInst ""  (formula "141")) (ifInst ""  (formula "139")))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,1,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "1,1,0,0") (ifseqformula "129"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,1,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,1,1,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,1,1,0,0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "172") (term "0,0,0,0,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,1,0,0") (ifseqformula "101"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "172") (term "0,0,0,0,0,0,0") (ifseqformula "75"))
                                                                                     (builtin "One Step Simplification" (formula "172") (ifInst ""  (formula "76")) (ifInst ""  (formula "100")) (ifInst ""  (formula "111")) (ifInst ""  (formula "117")) (ifInst ""  (formula "111")) (ifInst ""  (formula "117")) (ifInst ""  (formula "128")))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "1,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0") (ifseqformula "75"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,1,0,0") (ifseqformula "75"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,1,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,1,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,0,0,0") (ifseqformula "57"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,0,0,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,0,1,0,0") (ifseqformula "57"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,0,0,1,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,0,0,0,1,0,0"))
                                                                                    (rule "expand_inInt" (formula "172") (term "1,0"))
                                                                                    (rule "replace_int_MIN" (formula "172") (term "0,1,1,0"))
                                                                                    (rule "replace_int_MAX" (formula "172") (term "1,0,1,0"))
                                                                                    (rule "replace_known_left" (formula "172") (term "1,0,0,1,0,0") (ifseqformula "71"))
                                                                                     (builtin "One Step Simplification" (formula "172") (ifInst ""  (formula "19")) (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "66")) (ifInst ""  (formula "71")) (ifInst ""  (formula "74")) (ifInst ""  (formula "19")) (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "66")) (ifInst ""  (formula "74")) (ifInst ""  (formula "100")))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "172") (term "1,0"))
                                                                                    (rule "commute_and_2" (formula "170") (term "0"))
                                                                                    (rule "inequality_comparison_simple" (formula "244") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "244"))
                                                                                    (rule "replace_known_left" (formula "244") (term "0,0,1,0") (ifseqformula "156"))
                                                                                     (builtin "One Step Simplification" (formula "244"))
                                                                                     (builtin "Use Dependency Contract" (formula "155") (term "0,1") (ifInst ""  (formula "155") (term "0,0,1")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::classOf(int)].JML accessible clause.0"))
                                                                                    (rule "wellFormedAnon" (formula "173") (term "1,1,0,0,0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "1,0,0,0,0") (ifseqformula "129"))
                                                                                     (builtin "One Step Simplification" (formula "173") (ifInst ""  (formula "192")) (ifInst ""  (formula "141")) (ifInst ""  (formula "139")))
                                                                                    (rule "wellFormedAnonEQ" (formula "173") (term "1,0,0") (ifseqformula "129"))
                                                                                    (rule "wellFormedAnon" (formula "173") (term "0,1,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "173") (term "0,0,1,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "173") (term "0,0,0,1,0,0") (ifseqformula "101"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,0,0,0,0") (ifseqformula "101"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,0,0,0,0,0") (ifseqformula "75"))
                                                                                     (builtin "One Step Simplification" (formula "173") (ifInst ""  (formula "76")) (ifInst ""  (formula "100")) (ifInst ""  (formula "111")) (ifInst ""  (formula "117")) (ifInst ""  (formula "128")))
                                                                                    (rule "wellFormedAnonEQ" (formula "173") (term "0,0") (ifseqformula "75"))
                                                                                    (rule "wellFormedAnon" (formula "173") (term "0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "173") (term "0,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "173") (term "0,0,0,0,0") (ifseqformula "57"))
                                                                                    (rule "wellFormedAnonEQ" (formula "173") (term "0,0,0,0,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnon" (formula "173") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "expand_inInt" (formula "173") (term "1,0"))
                                                                                    (rule "replace_int_MIN" (formula "173") (term "0,1,1,0"))
                                                                                    (rule "replace_int_MAX" (formula "173") (term "1,0,1,0"))
                                                                                    (rule "replace_known_left" (formula "173") (term "1,0,0,0,0,0") (ifseqformula "55"))
                                                                                     (builtin "One Step Simplification" (formula "173") (ifInst ""  (formula "19")) (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "66")) (ifInst ""  (formula "71")) (ifInst ""  (formula "74")))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "173") (term "1,0"))
                                                                                    (rule "commute_and" (formula "171") (term "0"))
                                                                                    (rule "commute_and" (formula "169") (term "0,0"))
                                                                                    (rule "commute_and" (formula "171") (term "0"))
                                                                                    (rule "commute_or_2" (formula "158") (term "1,0,0,0,0"))
                                                                                    (rule "commute_and" (formula "170") (term "0,0"))
                                                                                    (rule "commute_and" (formula "171") (term "0"))
                                                                                    (rule "commute_and_2" (formula "169") (term "0"))
                                                                                    (rule "commute_and_2" (formula "170") (term "0"))
                                                                                    (rule "shift_paren_or" (formula "158") (term "0,0,0,0"))
                                                                                     (builtin "Use Dependency Contract" (formula "171") (term "1") (ifInst ""  (formula "171") (term "0,1")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::classOf(int)].JML accessible clause.0"))
                                                                                     (builtin "One Step Simplification" (formula "171") (ifInst ""  (formula "190")))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "1,1,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,1,0,0,0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "171") (term "0,0,0,0,0") (ifseqformula "129"))
                                                                                     (builtin "One Step Simplification" (formula "171") (ifInst ""  (formula "141")) (ifInst ""  (formula "157")))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "1,1,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,1,0,0,0") (ifseqformula "129"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,0,1,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,1,1,0,0,0") (ifseqformula "129"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,0,1,1,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,0,0,1,1,0,0,0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "171") (term "0,0,0,0,0,0,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,0,0,0,1,0,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "101"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "171") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "75"))
                                                                                     (builtin "One Step Simplification" (formula "171") (ifInst ""  (formula "76")) (ifInst ""  (formula "100")) (ifInst ""  (formula "111")) (ifInst ""  (formula "117")) (ifInst ""  (formula "128")) (ifInst ""  (formula "100")) (ifInst ""  (formula "111")) (ifInst ""  (formula "117")) (ifInst ""  (formula "128")) (ifInst ""  (formula "141")))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,0,0") (ifseqformula "75"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,0,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,0,0,0,0,0") (ifseqformula "57"))
                                                                                    (rule "wellFormedAnonEQ" (formula "171") (term "0,0,0,0,0,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnon" (formula "171") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "expand_inInt" (formula "171") (term "1,0,0"))
                                                                                    (rule "replace_int_MIN" (formula "171") (term "0,1,1,0,0"))
                                                                                    (rule "replace_int_MAX" (formula "171") (term "1,0,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "171") (term "1,0,0,0,0,0,0,0") (ifseqformula "45"))
                                                                                     (builtin "One Step Simplification" (formula "171") (ifInst ""  (formula "19")) (ifInst ""  (formula "43")) (ifInst ""  (formula "55")) (ifInst ""  (formula "66")) (ifInst ""  (formula "71")) (ifInst ""  (formula "74")))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "171") (term "1,0,0"))
                                                                                    (rule "commute_and_2" (formula "171") (term "0"))
                                                                                    (rule "commute_and" (formula "171") (term "0,0"))
                                                                                    (rule "commute_and_2" (formula "171") (term "0"))
                                                                                     (builtin "Use Dependency Contract" (formula "172") (term "0") (ifInst ""  (formula "172") (term "0,0")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::classOf(int)].JML accessible clause.0"))
                                                                                     (builtin "One Step Simplification" (formula "172") (ifInst ""  (formula "191")))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "1,1,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,1,0,0,0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "172") (term "0,0,0,0,0") (ifseqformula "129"))
                                                                                     (builtin "One Step Simplification" (formula "172") (ifInst ""  (formula "141")) (ifInst ""  (formula "157")))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "1,1,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,1,0,0,0") (ifseqformula "129"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,1,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,1,1,0,0,0") (ifseqformula "129"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,1,1,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,1,1,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,0,1,0,0,0") (ifseqformula "101"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "172") (term "0,0,0,0,0,0,0,0") (ifseqformula "101"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "101"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "172") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "75"))
                                                                                     (builtin "One Step Simplification" (formula "172") (ifInst ""  (formula "76")) (ifInst ""  (formula "100")) (ifInst ""  (formula "111")) (ifInst ""  (formula "117")) (ifInst ""  (formula "128")) (ifInst ""  (formula "100")) (ifInst ""  (formula "111")) (ifInst ""  (formula "117")) (ifInst ""  (formula "128")) (ifInst ""  (formula "141")))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0") (ifseqformula "75"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,0,0"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,0,0,0") (ifseqformula "57"))
                                                                                    (rule "wellFormedAnonEQ" (formula "172") (term "0,0,0,0,0,0,0") (ifseqformula "46"))
                                                                                    (rule "wellFormedAnon" (formula "172") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "expand_inInt" (formula "172") (term "1,0,0"))
                                                                                    (rule "replace_int_MIN" (formula "172") (term "0,1,1,0,0"))
                                                                                    (rule "replace_int_MAX" (formula "172") (term "1,0,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "172") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "19"))
                                                                                     (builtin "One Step Simplification" (formula "172") (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "66")) (ifInst ""  (formula "71")) (ifInst ""  (formula "74")))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "172") (term "1,0,0"))
                                                                                    (rule "commute_or_2" (formula "158") (term "1,0,0,0,0,0"))
                                                                                    (rule "commute_and_2" (formula "172") (term "0"))
                                                                                    (rule "commute_and" (formula "172") (term "0,0"))
                                                                                    (rule "commute_and_2" (formula "172") (term "0"))
                                                                                    (rule "shift_paren_or" (formula "158") (term "0,0,0,0,0"))
                                                                                    (rule "shift_paren_or" (formula "158") (term "0,0,0,0,0,0"))
                                                                                    (rule "shift_paren_or" (formula "158") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "shift_paren_or" (formula "158") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "ifSplit" (formula "244"))
                                                                                    (branch "if x_7 true"
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                    (branch "if x_7 false"
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                        (builtin "One Step Simplification" (formula "245"))
                                                                                       (rule "true_left" (formula "1"))
                                                                                       (rule "blockEmpty" (formula "244") (term "1"))
                                                                                        (builtin "Block Contract (Internal)" (formula "244") (newnames "anonOut_heap_6,result_231,exc_273,heap_Before_BLOCK_6,savedHeap_Before_BLOCK_6,o,f"))
                                                                                       (branch "Validity"
                                                                                           (builtin "One Step Simplification" (formula "173"))
                                                                                           (builtin "One Step Simplification" (formula "245"))
                                                                                          (rule "andLeft" (formula "173"))
                                                                                          (rule "translateJavaSubInt" (formula "173") (term "0,0"))
                                                                                          (rule "polySimp_elimSub" (formula "173") (term "0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "173") (term "0,0"))
                                                                                          (rule "variableDeclarationAssign" (formula "245") (term "1"))
                                                                                          (rule "variableDeclaration" (formula "245") (term "1") (newnames "exc_273_1"))
                                                                                          (rule "assignment" (formula "245") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "245"))
                                                                                          (rule "emptyStatement" (formula "245") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "245"))
                                                                                          (rule "emptyStatement" (formula "245") (term "1"))
                                                                                          (rule "tryEmpty" (formula "245") (term "1"))
                                                                                          (rule "blockEmptyLabel" (formula "245") (term "1"))
                                                                                          (rule "blockEmpty" (formula "245") (term "1"))
                                                                                          (rule "methodCallEmpty" (formula "245") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "245"))
                                                                                          (rule "emptyModality" (formula "245") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "245"))
                                                                                          (rule "closeTrue" (formula "245"))
                                                                                       )
                                                                                       (branch "Precondition"
                                                                                          (rule "andRight" (formula "244"))
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "244"))
                                                                                             (rule "translateJavaSubInt" (formula "244") (term "0,0"))
                                                                                             (rule "polySimp_elimSub" (formula "244") (term "0,0"))
                                                                                             (rule "polySimp_addComm0" (formula "244") (term "0,0"))
                                                                                             (rule "close" (formula "244") (ifseqformula "27"))
                                                                                          )
                                                                                          (branch
                                                                                              (builtin "One Step Simplification" (formula "244"))
                                                                                             (rule "wellFormedAnon" (formula "244"))
                                                                                             (rule "wellFormedAnon" (formula "244") (term "0"))
                                                                                             (rule "wellFormedAnonEQ" (formula "244") (term "0,0") (ifseqformula "129"))
                                                                                             (rule "wellFormedAnon" (formula "244") (term "0,0,0"))
                                                                                             (rule "wellFormedAnon" (formula "244") (term "0,0,0,0"))
                                                                                             (rule "wellFormedAnonEQ" (formula "244") (term "0,0,0,0,0") (ifseqformula "101"))
                                                                                             (rule "wellFormedAnonEQ" (formula "244") (term "0,0,0,0,0,0") (ifseqformula "75"))
                                                                                             (rule "wellFormedAnon" (formula "244") (term "0,0,0,0,0,0,0"))
                                                                                             (rule "wellFormedAnon" (formula "244") (term "0,0,0,0,0,0,0,0"))
                                                                                             (rule "wellFormedAnonEQ" (formula "244") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "57"))
                                                                                             (rule "wellFormedAnonEQ" (formula "244") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "46"))
                                                                                             (rule "wellFormedAnon" (formula "244") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                                                             (rule "replace_known_left" (formula "244") (term "1,0") (ifseqformula "141"))
                                                                                              (builtin "One Step Simplification" (formula "244") (ifInst ""  (formula "19")) (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "66")) (ifInst ""  (formula "71")) (ifInst ""  (formula "74")) (ifInst ""  (formula "100")) (ifInst ""  (formula "111")) (ifInst ""  (formula "117")) (ifInst ""  (formula "128")) (ifInst ""  (formula "157")))
                                                                                             (rule "closeTrue" (formula "244"))
                                                                                          )
                                                                                       )
                                                                                       (branch "Usage"
                                                                                           (builtin "One Step Simplification" (formula "173"))
                                                                                           (builtin "One Step Simplification" (formula "245"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,0,1,1,1,0") (ifseqformula "129"))
                                                                                           (builtin "One Step Simplification" (formula "173"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,0,1,0,1,0") (ifseqformula "129"))
                                                                                           (builtin "One Step Simplification" (formula "173"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,0,0,0,0,1,1,1,0") (ifseqformula "101"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,0,0,0,0,1,0,1,0") (ifseqformula "101"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "75"))
                                                                                           (builtin "One Step Simplification" (formula "173"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "75"))
                                                                                           (builtin "One Step Simplification" (formula "173"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,0,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "57"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "57"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "46"))
                                                                                           (builtin "One Step Simplification" (formula "173"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "46"))
                                                                                           (builtin "One Step Simplification" (formula "173"))
                                                                                          (rule "andLeft" (formula "173"))
                                                                                          (rule "andLeft" (formula "174"))
                                                                                          (rule "andLeft" (formula "173"))
                                                                                          (rule "andLeft" (formula "174"))
                                                                                          (rule "andLeft" (formula "173"))
                                                                                          (rule "translateJavaSubInt" (formula "177") (term "3,0"))
                                                                                          (rule "replace_known_left" (formula "176") (term "0") (ifseqformula "173"))
                                                                                           (builtin "One Step Simplification" (formula "176"))
                                                                                          (rule "true_left" (formula "176"))
                                                                                          (rule "polySimp_elimSub" (formula "176") (term "3,0"))
                                                                                          (rule "polySimp_addComm0" (formula "176") (term "3,0"))
                                                                                          (rule "applyEq" (formula "176") (term "2,0") (ifseqformula "96"))
                                                                                          (rule "shift_paren_or" (formula "175"))
                                                                                          (rule "shift_paren_or" (formula "175") (term "0"))
                                                                                          (rule "shift_paren_or" (formula "175") (term "0,0"))
                                                                                          (rule "shift_paren_or" (formula "175") (term "0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "175") (term "0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "175") (term "0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "175") (term "0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "1,0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "175") (term "0,0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "175") (term "0,0,0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "158") (term "0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "1,0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "175") (term "0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "ifUnfold" (formula "249") (term "1") (inst "#boolv=x"))
                                                                                          (rule "variableDeclaration" (formula "249") (term "1") (newnames "x_8"))
                                                                                          (rule "inequality_comparison_simple" (formula "249") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "249"))
                                                                                          (rule "replace_known_left" (formula "249") (term "0,0,1,0") (ifseqformula "173"))
                                                                                           (builtin "One Step Simplification" (formula "249"))
                                                                                          (rule "shift_paren_or" (formula "158") (term "0,0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "175") (term "0,0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "158") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0"))
                                                                                          (rule "commute_or_2" (formula "158"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "158") (term "0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "175") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "175") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0"))
                                                                                          (rule "commute_or_2" (formula "175"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "175") (term "0"))
                                                                                          (rule "commute_or_2" (formula "175"))
                                                                                           (builtin "Use Dependency Contract" (formula "52") (ifInst ""  (formula "249") (term "0,0,1")) (ifInst ""  (formula "46")) (contract "de.wiesler.Storage[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                                          (rule "wellFormedAnonEQ" (formula "178") (term "1,1,0,0,0") (ifseqformula "46"))
                                                                                          (rule "wellFormedAnon" (formula "178") (term "0,1,1,0,0,0"))
                                                                                          (rule "replace_known_left" (formula "178") (term "1,0,0,0,0") (ifseqformula "26"))
                                                                                           (builtin "One Step Simplification" (formula "178") (ifInst ""  (formula "247")) (ifInst ""  (formula "19")) (ifInst ""  (formula "19")) (ifInst ""  (formula "43")) (ifInst ""  (formula "45")) (ifInst ""  (formula "28")) (ifInst ""  (formula "52")) (ifInst ""  (formula "28")))
                                                                                          (rule "true_left" (formula "178"))
                                                                                          (rule "ifSplit" (formula "249"))
                                                                                          (branch "if x_8 true"
                                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "closeFalse" (formula "1"))
                                                                                          )
                                                                                          (branch "if x_8 false"
                                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                                              (builtin "One Step Simplification" (formula "250"))
                                                                                             (rule "true_left" (formula "1"))
                                                                                             (rule "blockEmpty" (formula "249") (term "1"))
                                                                                             (rule "methodCallReturn" (formula "249") (term "1"))
                                                                                             (rule "assignment" (formula "249") (term "1"))
                                                                                              (builtin "One Step Simplification" (formula "249"))
                                                                                             (rule "methodCallEmpty" (formula "249") (term "1"))
                                                                                             (rule "tryEmpty" (formula "249") (term "1"))
                                                                                             (rule "emptyModality" (formula "249") (term "1"))
                                                                                             (rule "andRight" (formula "249"))
                                                                                             (branch "Case 1"
                                                                                                 (builtin "One Step Simplification" (formula "249"))
                                                                                                (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "249") (userinteraction))
                                                                                                (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "52") (userinteraction))
                                                                                                (rule "close" (formula "249") (ifseqformula "52"))
                                                                                             )
                                                                                             (branch
                                                                                                 (builtin "One Step Simplification" (formula "249"))
                                                                                                (rule "closeTrue" (formula "249"))
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch "Exceptional Post (partition)"
                                                                            (builtin "One Step Simplification" (formula "121"))
                                                                            (builtin "One Step Simplification" (formula "191"))
                                                                           (rule "andLeft" (formula "121"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "1,0") (ifseqformula "121"))
                                                                            (builtin "One Step Simplification" (formula "122"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "0,0,0,1,0") (ifseqformula "93"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "0,0,0,0,1,0") (ifseqformula "67"))
                                                                            (builtin "One Step Simplification" (formula "122"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "49"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "0,0,0,0,0,0,0,0,1,0") (ifseqformula "38"))
                                                                            (builtin "One Step Simplification" (formula "122"))
                                                                           (rule "andLeft" (formula "122"))
                                                                           (rule "andLeft" (formula "122"))
                                                                           (rule "andLeft" (formula "124"))
                                                                           (rule "notLeft" (formula "122"))
                                                                           (rule "close" (formula "125") (ifseqformula "124"))
                                                                        )
                                                                        (branch "Pre (partition)"
                                                                            (builtin "One Step Simplification" (formula "189") (ifInst ""  (formula "188")) (ifInst ""  (formula "187")) (ifInst ""  (formula "136")) (ifInst ""  (formula "186")) (ifInst ""  (formula "188")) (ifInst ""  (formula "187")) (ifInst ""  (formula "136")) (ifInst ""  (formula "186")))
                                                                           (rule "andRight" (formula "189"))
                                                                           (branch "Case 1"
                                                                              (rule "andRight" (formula "189"))
                                                                              (branch "Case 1"
                                                                                 (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "189") (userinteraction))
                                                                                 (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "44") (userinteraction))
                                                                                 (rule "close" (formula "189") (ifseqformula "44"))
                                                                              )
                                                                              (branch "Case 2"
                                                                                 (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "189") (userinteraction))
                                                                                 (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "84") (userinteraction))
                                                                                 (rule "close" (formula "189") (ifseqformula "84"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "andRight" (formula "189"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "189"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "189"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "189"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "189"))
                                                                                          (branch
                                                                                             (rule "andRight" (formula "189"))
                                                                                             (branch
                                                                                                (rule "wellFormedAnon" (formula "189"))
                                                                                                (rule "wellFormedAnon" (formula "189") (term "0"))
                                                                                                (rule "wellFormedAnonEQ" (formula "189") (term "0,0") (ifseqformula "93"))
                                                                                                (rule "wellFormedAnonEQ" (formula "189") (term "0,0,0") (ifseqformula "67"))
                                                                                                (rule "wellFormedAnon" (formula "189") (term "0,0,0,0"))
                                                                                                (rule "wellFormedAnon" (formula "189") (term "0,0,0,0,0"))
                                                                                                (rule "wellFormedAnonEQ" (formula "189") (term "0,0,0,0,0,0") (ifseqformula "49"))
                                                                                                (rule "wellFormedAnonEQ" (formula "189") (term "0,0,0,0,0,0,0") (ifseqformula "38"))
                                                                                                (rule "wellFormedAnon" (formula "189") (term "0,0,0,0,0,0,0,0"))
                                                                                                (rule "replace_known_left" (formula "189") (term "1,0,0") (ifseqformula "92"))
                                                                                                 (builtin "One Step Simplification" (formula "189") (ifInst ""  (formula "11")) (ifInst ""  (formula "35")) (ifInst ""  (formula "37")) (ifInst ""  (formula "47")) (ifInst ""  (formula "58")) (ifInst ""  (formula "63")) (ifInst ""  (formula "66")) (ifInst ""  (formula "103")) (ifInst ""  (formula "109")))
                                                                                                (rule "closeTrue" (formula "189"))
                                                                                             )
                                                                                             (branch
                                                                                                (rule "orRight" (formula "189"))
                                                                                                (rule "orRight" (formula "189"))
                                                                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (ifseqformula "93"))
                                                                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (term "0") (ifseqformula "67"))
                                                                                                 (builtin "One Step Simplification" (formula "189"))
                                                                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (term "0,0,0,0") (ifseqformula "49"))
                                                                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (term "0,0,0,0,0") (ifseqformula "38"))
                                                                                                 (builtin "One Step Simplification" (formula "189") (ifInst ""  (formula "12")))
                                                                                                (rule "closeTrue" (formula "189"))
                                                                                             )
                                                                                          )
                                                                                          (branch
                                                                                             (rule "expand_inInt" (formula "189"))
                                                                                             (rule "replace_int_MAX" (formula "189") (term "1,0"))
                                                                                             (rule "replace_int_MIN" (formula "189") (term "0,1"))
                                                                                             (rule "replace_known_left" (formula "189") (term "0") (ifseqformula "13"))
                                                                                              (builtin "One Step Simplification" (formula "189"))
                                                                                             (rule "inEqSimp_leqRight" (formula "137"))
                                                                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                             (rule "add_literals" (formula "1") (term "0,0"))
                                                                                             (rule "inEqSimp_leqRight" (formula "189"))
                                                                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                                             (rule "add_literals" (formula "1") (term "0,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "107") (term "0,0,0,1,0"))
                                                                                             (rule "eqSymm" (formula "107") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,1,1,0"))
                                                                                             (rule "polySimp_mulAssoc" (formula "107") (term "0,1,0,0,0,0,1,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "107") (term "0,0,1,0,0,0,0,1,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "107") (term "0,1,0,0,0,0,1,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "107") (term "0,1,0,0,0,0,1,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "107") (term "0,0,0,0,1,1,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "1,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,0"))
                                                                                             (rule "polySimp_addComm1" (formula "55") (term "0,1,1,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                                                                             (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                                                             (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "115"))
                                                                                             (rule "polySimp_mulComm0" (formula "115") (term "1,0,0"))
                                                                                             (rule "inEqSimp_gtToGeq" (formula "31"))
                                                                                             (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                                                             (rule "add_literals" (formula "31") (term "0,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1,0,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "62") (term "0,0,1,0,0,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "107") (term "0,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,0"))
                                                                                             (rule "polySimp_mulAssoc" (formula "107") (term "0,1,0,0,0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "107") (term "0,0,1,0,0,0,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "107") (term "0,1,0,0,0,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "107") (term "0,1,0,0,0,0,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,1,0"))
                                                                                             (rule "eqSymm" (formula "62") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,1,1,0"))
                                                                                             (rule "polySimp_mulAssoc" (formula "62") (term "0,1,0,0,0,0,1,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "62") (term "0,0,1,0,0,0,0,1,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0,0,0,0,1,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "62") (term "0,1,0,0,0,0,1,1,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                                                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "119"))
                                                                                             (rule "polySimp_mulComm0" (formula "119") (term "1,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                                             (rule "polySimp_addAssoc" (formula "107") (term "0,0,0,0,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "107") (term "0,0,0,1,0"))
                                                                                             (rule "eqSymm" (formula "107") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,1,1,0"))
                                                                                             (rule "eqSymm" (formula "107") (term "1,0"))
                                                                                             (rule "polySimp_mulAssoc" (formula "107") (term "0,1,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "107") (term "0,0,1,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "107") (term "0,1,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "107") (term "0,1,0,0,0,0,0,1,0"))
                                                                                             (rule "eqSymm" (formula "107") (term "1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,1,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1,0"))
                                                                                             (rule "add_literals" (formula "55") (term "0,0,0,0,1,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "107") (term "0,0,0,0,1,1,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,1,0"))
                                                                                             (rule "eqSymm" (formula "62") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,1,1,0"))
                                                                                             (rule "eqSymm" (formula "62") (term "1,0"))
                                                                                             (rule "polySimp_mulAssoc" (formula "62") (term "0,1,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "62") (term "0,0,1,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "62") (term "0,1,0,0,0,0,0,1,0"))
                                                                                             (rule "eqSymm" (formula "62") (term "1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,1,1,0"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0,0"))
                                                                                             (rule "mul_literals" (formula "78") (term "1,0,0,0,0"))
                                                                                             (rule "add_zero_right" (formula "78") (term "0,0,0,0"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "57"))
                                                                                             (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "32"))
                                                                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                                             (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "83") (term "0,0,0"))
                                                                                             (rule "mul_literals" (formula "83") (term "1,0,0,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "83") (term "0,0,0,0"))
                                                                                             (rule "add_literals" (formula "83") (term "0,0,0,0,0"))
                                                                                             (rule "jmod_axiom" (formula "75") (term "0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,0"))
                                                                                             (rule "polySimp_sepNegMonomial" (formula "75"))
                                                                                             (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                             (rule "mul_literals" (formula "2") (term "1"))
                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                                                                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                                                                                             (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "1,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "55") (term "0,1,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "55") (term "0,1,1,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                                                                             (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "115"))
                                                                                             (rule "polySimp_mulComm0" (formula "115") (term "1"))
                                                                                             (rule "polySimp_rightDist" (formula "115") (term "1"))
                                                                                             (rule "mul_literals" (formula "115") (term "0,1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "115") (term "1,1"))
                                                                                             (rule "polySimp_elimOne" (formula "115") (term "1,1"))
                                                                                             (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "115"))
                                                                                              (builtin "One Step Simplification" (formula "4"))
                                                                                             (rule "applyEqReverse" (formula "122") (term "2,1") (ifseqformula "4"))
                                                                                             (rule "hideAuxiliaryEq" (formula "4"))
                                                                                             (rule "eqSymm" (formula "121"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                                                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "118"))
                                                                                             (rule "polySimp_mulComm0" (formula "118") (term "1"))
                                                                                             (rule "polySimp_rightDist" (formula "118") (term "1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "118") (term "1,1"))
                                                                                             (rule "mul_literals" (formula "118") (term "0,1"))
                                                                                             (rule "polySimp_elimOne" (formula "118") (term "1,1"))
                                                                                             (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "118"))
                                                                                              (builtin "One Step Simplification" (formula "3"))
                                                                                             (rule "applyEqReverse" (formula "121") (term "2,1") (ifseqformula "3"))
                                                                                             (rule "hideAuxiliaryEq" (formula "3"))
                                                                                             (rule "eqSymm" (formula "120"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                                             (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                                             (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                                                             (rule "mul_literals" (formula "29") (term "0,1"))
                                                                                             (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "105") (term "0,1,0,0,0"))
                                                                                             (rule "mul_literals" (formula "105") (term "0,0,1,0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0,1,0"))
                                                                                             (rule "eqSymm" (formula "105") (term "1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,1,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "105") (term "1,0,0,1,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,1,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,1,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "105") (term "0,1,0,0,1,1,0"))
                                                                                             (rule "mul_literals" (formula "105") (term "0,0,1,0,0,1,1,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "52") (term "0,1,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,0,0,0,0,1,0"))
                                                                                             (rule "mul_literals" (formula "52") (term "0,0,1,0,0,0,0,0,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "52") (term "1,0,1,0,0,0,0,0,1,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1,0"))
                                                                                             (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,1,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                                                                             (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,1,0"))
                                                                                             (rule "eqSymm" (formula "60") (term "1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,1,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,1,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,1,0"))
                                                                                             (rule "mul_literals" (formula "60") (term "0,0,1,0,0,1,1,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0,0"))
                                                                                             (rule "mul_literals" (formula "76") (term "1,0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                                                             (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                                                             (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                                                             (rule "mul_literals" (formula "55") (term "0,1"))
                                                                                             (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,0,0"))
                                                                                             (rule "mul_literals" (formula "81") (term "1,0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0,1,0"))
                                                                                             (rule "eqSymm" (formula "105") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "105") (term "0,1,0,0,1,1,0"))
                                                                                             (rule "mul_literals" (formula "105") (term "0,0,1,0,0,1,1,0"))
                                                                                             (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "0,1,1,0,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "60") (term "0,0,1,1,0,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "60") (term "0,0,1,1,0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,1,0"))
                                                                                             (rule "eqSymm" (formula "60") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,1,0"))
                                                                                             (rule "mul_literals" (formula "60") (term "0,0,1,0,0,1,1,0"))
                                                                                             (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "23"))
                                                                                             (rule "leq_literals" (formula "25") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "25"))
                                                                                             (rule "true_left" (formula "25"))
                                                                                             (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "28"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                                                             (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                                             (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                                             (rule "add_literals" (formula "22") (term "0,0"))
                                                                                             (rule "qeq_literals" (formula "22") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "22"))
                                                                                             (rule "true_left" (formula "22"))
                                                                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "21"))
                                                                                             (rule "leq_literals" (formula "14") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                                             (rule "true_left" (formula "14"))
                                                                                             (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                                                                             (rule "qeq_literals" (formula "20") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "20"))
                                                                                             (rule "closeFalse" (formula "20"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (rule "expand_inInt" (formula "189"))
                                                                                          (rule "replace_int_MAX" (formula "189") (term "1,0"))
                                                                                          (rule "replace_int_MIN" (formula "189") (term "0,1"))
                                                                                          (rule "replace_known_left" (formula "189") (term "0") (ifseqformula "15"))
                                                                                           (builtin "One Step Simplification" (formula "189"))
                                                                                          (rule "inEqSimp_leqRight" (formula "137"))
                                                                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                          (rule "add_literals" (formula "1") (term "0,0"))
                                                                                          (rule "inEqSimp_leqRight" (formula "189"))
                                                                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                                          (rule "add_literals" (formula "1") (term "0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "107") (term "0,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "107") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulAssoc" (formula "107") (term "0,1,0,0,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "107") (term "0,0,1,0,0,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "107") (term "0,1,0,0,0,0,1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "107") (term "0,1,0,0,0,0,1,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "107") (term "0,0,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_gtToGeq" (formula "31"))
                                                                                          (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                                                          (rule "add_literals" (formula "31") (term "0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "107") (term "0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,0"))
                                                                                          (rule "polySimp_mulAssoc" (formula "107") (term "0,1,0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "107") (term "0,0,1,0,0,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "107") (term "0,1,0,0,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "107") (term "0,1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1,0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "62") (term "0,0,1,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "119"))
                                                                                          (rule "polySimp_mulComm0" (formula "119") (term "1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulAssoc" (formula "62") (term "0,1,0,0,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "62") (term "0,0,1,0,0,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0,0,0,0,1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "62") (term "0,1,0,0,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "115"))
                                                                                          (rule "polySimp_mulComm0" (formula "115") (term "1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "55") (term "0,1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "62") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,1,1,0"))
                                                                                          (rule "eqSymm" (formula "62") (term "1,0"))
                                                                                          (rule "polySimp_mulAssoc" (formula "62") (term "0,1,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "62") (term "0,0,1,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "62") (term "0,1,0,0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "107") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1,0"))
                                                                                          (rule "add_literals" (formula "55") (term "0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "107") (term "0,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "107") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,1,1,0"))
                                                                                          (rule "eqSymm" (formula "107") (term "1,0"))
                                                                                          (rule "polySimp_mulAssoc" (formula "107") (term "0,1,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "107") (term "0,0,1,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "107") (term "0,1,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "107") (term "0,1,0,0,0,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "107") (term "1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,1,1,0"))
                                                                                          (rule "eqSymm" (formula "62") (term "1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "107") (term "0,0,0,0,1,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,1,1,0"))
                                                                                          (rule "eqSymm" (formula "62") (term "1,0"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "57"))
                                                                                          (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "78") (term "1,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "78") (term "0,0,0,0"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "32"))
                                                                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                                          (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "83") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "83") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "83") (term "0,0,0,0"))
                                                                                          (rule "add_literals" (formula "83") (term "0,0,0,0,0"))
                                                                                          (rule "jmod_axiom" (formula "75") (term "0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "75") (term "1,0"))
                                                                                          (rule "polySimp_sepNegMonomial" (formula "75"))
                                                                                          (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                          (rule "mul_literals" (formula "2") (term "1"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                                          (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                                          (rule "mul_literals" (formula "31") (term "0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "119"))
                                                                                          (rule "polySimp_mulComm0" (formula "119") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "119") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "119") (term "1,1"))
                                                                                          (rule "mul_literals" (formula "119") (term "0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "119") (term "1,1"))
                                                                                          (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "119"))
                                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                                          (rule "applyEqReverse" (formula "122") (term "2,0") (ifseqformula "3"))
                                                                                          (rule "hideAuxiliaryEq" (formula "3"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "114"))
                                                                                          (rule "polySimp_mulComm0" (formula "114") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "114") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "114") (term "1,1"))
                                                                                          (rule "mul_literals" (formula "114") (term "0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "114") (term "1,1"))
                                                                                          (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "114"))
                                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                                          (rule "applyEqReverse" (formula "121") (term "2,1") (ifseqformula "3"))
                                                                                          (rule "hideAuxiliaryEq" (formula "3"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "1,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "0,1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "53") (term "0,1,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "105") (term "0,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "105") (term "0,0,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "53") (term "1,1,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "105") (term "1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "105") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "105") (term "0,1,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "105") (term "0,0,1,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "52") (term "0,1,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,0,0,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "52") (term "0,0,1,0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "52") (term "1,0,1,0,0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "60") (term "1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "60") (term "0,0,1,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                                                          (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                                                          (rule "mul_literals" (formula "55") (term "0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "76") (term "1,0,0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                                                          (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "81") (term "1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "105") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "105") (term "0,1,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "105") (term "0,0,1,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "0,1,1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "60") (term "0,0,1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "60") (term "0,0,1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "60") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "60") (term "0,0,1,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "1"))
                                                                                          (rule "leq_literals" (formula "15") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "15"))
                                                                                          (rule "true_left" (formula "15"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "53"))
                                                                                          (rule "leq_literals" (formula "50") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                                          (rule "true_left" (formula "50"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                                                                                          (rule "qeq_literals" (formula "1") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "closeFalse" (formula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "189"))
                                                                                       (rule "orRight" (formula "189"))
                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (ifseqformula "93"))
                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (term "0") (ifseqformula "67"))
                                                                                        (builtin "One Step Simplification" (formula "189"))
                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (term "0,0,0,0") (ifseqformula "49"))
                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (term "0,0,0,0,0") (ifseqformula "38"))
                                                                                        (builtin "One Step Simplification" (formula "189") (ifInst ""  (formula "17")))
                                                                                       (rule "closeTrue" (formula "189"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "189"))
                                                                                    (rule "orRight" (formula "189"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (ifseqformula "93"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (term "0") (ifseqformula "67"))
                                                                                     (builtin "One Step Simplification" (formula "189") (ifInst ""  (formula "68")))
                                                                                    (rule "closeTrue" (formula "189"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "orRight" (formula "189"))
                                                                                 (rule "orRight" (formula "189"))
                                                                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (ifseqformula "93"))
                                                                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (term "0") (ifseqformula "67"))
                                                                                  (builtin "One Step Simplification" (formula "189"))
                                                                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (term "0,0,0,0") (ifseqformula "49"))
                                                                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "189") (term "0,0,0,0,0") (ifseqformula "38"))
                                                                                  (builtin "One Step Simplification" (formula "189") (ifInst ""  (formula "18")))
                                                                                 (rule "closeTrue" (formula "189"))
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "Exceptional Post (PartitionResult)"
                                                             (builtin "One Step Simplification" (formula "89"))
                                                             (builtin "One Step Simplification" (formula "150"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,1,0,0,1,0,1") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "89"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0,0,0,1,0,0,1,0,1") (ifseqformula "46"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0,0,0,0,1,0,0,1,0,1") (ifseqformula "36"))
                                                             (builtin "One Step Simplification" (formula "89"))
                                                            (rule "andLeft" (formula "89"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "1,0,0") (ifseqformula "89"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,1,0,0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "90"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "1,1,0,0,1,0") (ifseqformula "89"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,0,0,0,1,0,0") (ifseqformula "46"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,1,1,0,0,1,0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "90"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,0,0,0,0,1,0,0") (ifseqformula "36"))
                                                             (builtin "One Step Simplification" (formula "90"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,0,0,0,1,1,0,0,1,0") (ifseqformula "46"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "36"))
                                                             (builtin "One Step Simplification" (formula "90"))
                                                            (rule "andLeft" (formula "90"))
                                                            (rule "andLeft" (formula "90"))
                                                            (rule "andLeft" (formula "92"))
                                                            (rule "andLeft" (formula "90"))
                                                            (rule "andLeft" (formula "92"))
                                                            (rule "notLeft" (formula "90"))
                                                            (rule "close" (formula "95") (ifseqformula "94"))
                                                         )
                                                         (branch "Pre (PartitionResult)"
                                                             (builtin "One Step Simplification" (formula "148"))
                                                            (rule "wellFormedAnonEQ" (formula "148") (term "0") (ifseqformula "64"))
                                                            (rule "wellFormedAnon" (formula "148") (term "0,0"))
                                                            (rule "wellFormedAnon" (formula "148") (term "0,0,0"))
                                                            (rule "wellFormedAnonEQ" (formula "148") (term "0,0,0,0") (ifseqformula "46"))
                                                            (rule "wellFormedAnonEQ" (formula "148") (term "0,0,0,0,0") (ifseqformula "36"))
                                                            (rule "wellFormedAnon" (formula "148") (term "0,0,0,0,0,0"))
                                                            (rule "expand_inInt" (formula "148") (term "1"))
                                                            (rule "replace_int_MAX" (formula "148") (term "1,0,1"))
                                                            (rule "replace_int_MIN" (formula "148") (term "0,1,1"))
                                                            (rule "replace_known_left" (formula "148") (term "0,0,0,0,0,0,0") (ifseqformula "9"))
                                                             (builtin "One Step Simplification" (formula "148") (ifInst ""  (formula "33")) (ifInst ""  (formula "35")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "60")) (ifInst ""  (formula "63")) (ifInst ""  (formula "82")))
                                                            (rule "inEqSimp_leqRight" (formula "96"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "28"))
                                                            (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                            (rule "eqSymm" (formula "58") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "58") (term "0,0,1,0,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "51") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "58") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "148"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                            (rule "eqSymm" (formula "59") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,1,1,0"))
                                                            (rule "eqSymm" (formula "59") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "59") (term "0,1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "59") (term "0,1,0,0,0,0,0,1,0"))
                                                            (rule "eqSymm" (formula "59") (term "1,0"))
                                                            (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "30"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "79") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "79") (term "1,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "79") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "79") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "54"))
                                                            (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "74") (term "0,0,0"))
                                                            (rule "times_zero_2" (formula "74") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "74") (term "0,0,0,0"))
                                                            (rule "jmod_axiom" (formula "71") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "71") (term "1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "71"))
                                                            (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                            (rule "mul_literals" (formula "29") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,0,1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "1,0,1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "52") (term "1,1,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "52") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "52") (term "0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,1,0"))
                                                            (rule "eqSymm" (formula "59") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "0,1,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "59") (term "0,0,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "79") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                                            (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                            (rule "mul_literals" (formula "54") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "74") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0"))
                                                            (rule "eqSymm" (formula "59") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "0,1,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "59") (term "0,0,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "59") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "0,0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "59") (term "0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "53"))
                                                            (rule "leq_literals" (formula "50") (term "0"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "true_left" (formula "50"))
                                                            (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "23"))
                                                            (rule "leq_literals" (formula "25") (term "0"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "true_left" (formula "25"))
                                                            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "21"))
                                                            (rule "leq_literals" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "27"))
                                                            (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0"))
                                                            (rule "qeq_literals" (formula "21") (term "0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "true_left" (formula "21"))
                                                            (rule "inEqSimp_subsumption1" (formula "55") (term "0,1,1,0,0,0") (ifseqformula "26"))
                                                            (rule "inEqSimp_homoInEq0" (formula "55") (term "0,0,1,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "55") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "55") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "55") (term "1,1,0,0,0,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "55") (term "1,0,0,0,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "55") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "55") (term "0,0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "1,0,0,0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "81") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "81") (term "0"))
                                                             (builtin "One Step Simplification" (formula "81"))
                                                            (rule "closeFalse" (formula "81"))
                                                         )
                                                      )
                                                      (branch "Exceptional Post (equal_buckets)"
                                                          (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "80")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "1,0") (ifseqformula "64"))
                                                          (builtin "One Step Simplification" (formula "86"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0,1,0") (ifseqformula "46"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0,0,1,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "86"))
                                                         (rule "andLeft" (formula "86"))
                                                         (rule "andLeft" (formula "86"))
                                                         (rule "notLeft" (formula "86"))
                                                         (rule "close" (formula "88") (ifseqformula "87"))
                                                      )
                                                      (branch "Pre (equal_buckets)"
                                                          (builtin "One Step Simplification" (formula "146") (ifInst ""  (formula "80")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "146") (term "1") (ifseqformula "64"))
                                                          (builtin "One Step Simplification" (formula "146") (ifInst ""  (formula "65")))
                                                         (rule "wellFormedAnonEQ" (formula "146") (ifseqformula "64"))
                                                         (rule "wellFormedAnon" (formula "146") (term "0"))
                                                         (rule "wellFormedAnon" (formula "146") (term "0,0"))
                                                         (rule "wellFormedAnonEQ" (formula "146") (term "0,0,0") (ifseqformula "46"))
                                                         (rule "wellFormedAnonEQ" (formula "146") (term "0,0,0,0") (ifseqformula "36"))
                                                         (rule "wellFormedAnon" (formula "146") (term "0,0,0,0,0"))
                                                         (rule "replace_known_left" (formula "146") (term "1") (ifseqformula "63"))
                                                          (builtin "One Step Simplification" (formula "146") (ifInst ""  (formula "9")) (ifInst ""  (formula "33")) (ifInst ""  (formula "35")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "60")))
                                                         (rule "closeTrue" (formula "146"))
                                                      )
                                                      (branch "Null reference (classifier = null)"
                                                          (builtin "One Step Simplification" (formula "146") (ifInst ""  (formula "93")))
                                                         (rule "closeTrue" (formula "146"))
                                                      )
                                                   )
                                                   (branch "Exceptional Post (num_buckets)"
                                                       (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "80")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "82") (term "1,0") (ifseqformula "64"))
                                                       (builtin "One Step Simplification" (formula "82"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "82") (term "0,0,0,1,0") (ifseqformula "46"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "82") (term "0,0,0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "82"))
                                                      (rule "andLeft" (formula "82"))
                                                      (rule "andLeft" (formula "82"))
                                                      (rule "notLeft" (formula "82"))
                                                      (rule "close" (formula "84") (ifseqformula "83"))
                                                   )
                                                   (branch "Pre (num_buckets)"
                                                       (builtin "One Step Simplification" (formula "142") (ifInst ""  (formula "80")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "142") (term "1") (ifseqformula "64"))
                                                       (builtin "One Step Simplification" (formula "142") (ifInst ""  (formula "65")))
                                                      (rule "wellFormedAnonEQ" (formula "142") (ifseqformula "64"))
                                                      (rule "wellFormedAnon" (formula "142") (term "0"))
                                                      (rule "wellFormedAnon" (formula "142") (term "0,0"))
                                                      (rule "wellFormedAnonEQ" (formula "142") (term "0,0,0") (ifseqformula "46"))
                                                      (rule "wellFormedAnonEQ" (formula "142") (term "0,0,0,0") (ifseqformula "36"))
                                                      (rule "wellFormedAnon" (formula "142") (term "0,0,0,0,0"))
                                                      (rule "replace_known_left" (formula "142") (term "1,0,0,0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "142") (ifInst ""  (formula "9")) (ifInst ""  (formula "33")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "60")) (ifInst ""  (formula "63")))
                                                      (rule "closeTrue" (formula "142"))
                                                   )
                                                   (branch "Null reference (classifier = null)"
                                                       (builtin "One Step Simplification" (formula "142") (ifInst ""  (formula "89")))
                                                      (rule "closeTrue" (formula "142"))
                                                   )
                                                )
                                                (branch "Exceptional Post (from_sorted_samples)"
                                                    (builtin "One Step Simplification" (formula "117"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "andLeft" (formula "64"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "1,0") (ifseqformula "64"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0,1,0") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0,0,1,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "andLeft" (formula "65"))
                                                   (rule "andLeft" (formula "66"))
                                                   (rule "andLeft" (formula "65"))
                                                   (rule "andLeft" (formula "67"))
                                                   (rule "notLeft" (formula "65"))
                                                   (rule "close" (formula "69") (ifseqformula "68"))
                                                )
                                                (branch "Pre (from_sorted_samples)"
                                                    (builtin "One Step Simplification" (formula "115"))
                                                   (rule "wellFormedAnon" (formula "115") (term "0,0,0,0,1"))
                                                   (rule "wellFormedAnon" (formula "115") (term "0,0,0,0,0,1"))
                                                   (rule "wellFormedAnonEQ" (formula "115") (term "0,0,0,0,0,0,1") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0,0,1,1,0,0,1") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0,0,1,1,0,0,0,1") (ifseqformula "46"))
                                                   (rule "wellFormedAnonEQ" (formula "115") (term "0,0,0,0,0,0,0,1") (ifseqformula "36"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0,0,0,1,1,0,0,1") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "35")) (ifInst ""  (formula "45")) (ifInst ""  (formula "55")) (ifInst ""  (formula "60")))
                                                   (rule "wellFormedAnon" (formula "115") (term "0,0,0,0,1"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0,0,0,1,1,0,0,0,1") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "9")) (ifInst ""  (formula "33")))
                                                   (rule "expand_inInt" (formula "115") (term "1,0,1"))
                                                   (rule "expand_inInt" (formula "115") (term "1,1"))
                                                   (rule "replace_int_MAX" (formula "115") (term "1,0,1,0,1"))
                                                   (rule "replace_int_MIN" (formula "115") (term "0,1,1,0,1"))
                                                   (rule "replace_int_MIN" (formula "115") (term "0,1,1,1"))
                                                   (rule "replace_int_MAX" (formula "115") (term "1,0,1,1"))
                                                   (rule "replace_known_left" (formula "115") (term "0,1,0,1") (ifseqformula "47"))
                                                    (builtin "One Step Simplification" (formula "115"))
                                                   (rule "inEqSimp_leqRight" (formula "63"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "28"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                   (rule "eqSymm" (formula "58") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "51") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "51") (term "0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "51") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                   (rule "eqSymm" (formula "58") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "eqSymm" (formula "58") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "58") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "0,0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "eqSymm" (formula "58") (term "1,0"))
                                                   (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "58") (term "0,0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "115") (term "1,0,1"))
                                                   (rule "replace_known_left" (formula "115") (term "1,0,1") (ifseqformula "49"))
                                                    (builtin "One Step Simplification" (formula "115"))
                                                   (rule "inEqSimp_homoInEq0" (formula "53"))
                                                   (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "29"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "115") (term "1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,0,1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                   (rule "mul_literals" (formula "28") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "1,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                                   (rule "eqSymm" (formula "58") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "58") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "0,0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "1"))
                                                   (rule "mul_literals" (formula "53") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                                   (rule "eqSymm" (formula "58") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "58") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "28"))
                                                   (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0"))
                                                   (rule "qeq_literals" (formula "21") (term "0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "21"))
                                                   (rule "leq_literals" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "47") (term "0"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "true_left" (formula "47"))
                                                   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "20"))
                                                   (rule "leq_literals" (formula "13") (term "0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "inEqSimp_subsumption1" (formula "54") (term "0,1,1,0,0,0") (ifseqformula "25"))
                                                   (rule "inEqSimp_homoInEq0" (formula "54") (term "0,0,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "54") (term "0,1,0,0,0,1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,1,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0,1,1,0,0,0"))
                                                   (rule "add_literals" (formula "54") (term "0,0,0,0,0,1,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0,1,1,0,0,0"))
                                                   (rule "add_literals" (formula "54") (term "1,1,0,0,0,1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "54") (term "1,0,0,0,1,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "54") (term "0,0,0,1,1,0,0,0"))
                                                   (rule "qeq_literals" (formula "54") (term "0,0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "polySimp_addAssoc" (formula "54") (term "1,0,0,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "48") (term "0"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "true_left" (formula "48"))
                                                   (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "13"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "add_literals" (formula "25") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "25"))
                                                   (rule "leq_literals" (formula "12") (term "0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "20"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "21") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "21"))
                                                   (rule "leq_literals" (formula "12") (term "0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "26"))
                                                   (rule "mul_literals" (formula "12") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "add_literals" (formula "12") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                   (rule "mul_literals" (formula "12") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "12") (term "0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "20"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "add_literals" (formula "25") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "25"))
                                                   (rule "leq_literals" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "inEqSimp_and_subsumption3" (formula "46") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "46") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "inEqSimp_and_subsumption3" (formula "47") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "47") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "inEqSimp_and_subsumption3" (formula "23") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "nnf_imp2or" (formula "53") (term "0"))
                                                   (rule "Definition_axiom_for_isValidForLen_in_de_wiesler_SampleParameters" (formula "37") (term "0"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "translateJavaMulInt" (formula "44") (term "0,0"))
                                                   (rule "translateJavaMod" (formula "43") (term "0"))
                                                   (rule "translateJavaDivInt" (formula "38") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "44") (term "0"))
                                                   (rule "polySimp_elimSub" (formula "44") (term "0"))
                                                   (rule "mul_literals" (formula "44") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "41"))
                                                   (rule "inEqSimp_commuteLeq" (formula "40"))
                                                   (rule "inEqSimp_commuteLeq" (formula "37"))
                                                   (rule "inEqSimp_homoInEq0" (formula "44"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                   (rule "jmod_axiom" (formula "43") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "43"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "0,1"))
                                                   (rule "mul_literals" (formula "39") (term "0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "117") (term "1,1,1") (ifseqformula "41"))
                                                   (rule "leq_literals" (formula "117") (term "0,1,1,1"))
                                                    (builtin "One Step Simplification" (formula "117"))
                                                   (rule "newSym_eq" (formula "43") (inst "newSymDef=mul(int::final(result_220,
               de.wiesler.SampleParameters::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                                                   (rule "times_zero_1" (formula "43") (term "1,1"))
                                                   (rule "add_zero_right" (formula "43") (term "1"))
                                                   (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "43"))
                                                   (rule "eqSymm" (formula "44"))
                                                   (rule "applyEq" (formula "42") (term "0") (ifseqformula "44"))
                                                   (rule "inEqSimp_commuteLeq" (formula "42"))
                                                   (rule "applyEq" (formula "52") (term "1,2,1,0") (ifseqformula "44"))
                                                   (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "44"))
                                                   (rule "applyEq" (formula "118") (term "0,1,1") (ifseqformula "44"))
                                                   (rule "applyEq" (formula "41") (term "0") (ifseqformula "44"))
                                                   (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "44"))
                                                   (rule "polySimp_mulAssoc" (formula "45") (term "0"))
                                                   (rule "applyEq" (formula "56") (term "0") (ifseqformula "44"))
                                                   (rule "inEqSimp_homoInEq1" (formula "56"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "56"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                   (rule "mul_literals" (formula "56") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                                   (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "41") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0"))
                                                   (rule "leq_literals" (formula "41") (term "0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "elimGcdLeq" (formula "118") (term "1,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))"))
                                                   (rule "polySimp_mulLiterals" (formula "118") (term "1,0,1,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "118") (term "1,0,0,0,0,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "118") (term "0,0,0,0,1,0,1,1"))
                                                   (rule "sub_literals" (formula "118") (term "0,0,0,0,0,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "118") (term "1,0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "118") (term "1,0,0,0,0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "118") (term "0,0,0,0,1,0,1,1"))
                                                   (rule "add_literals" (formula "118") (term "0,0,0,0,0,0,1,1"))
                                                   (rule "add_literals" (formula "118") (term "0,0,0,1,0,1,1"))
                                                   (rule "add_literals" (formula "118") (term "0,0,0,0,0,1,1"))
                                                   (rule "add_zero_left" (formula "118") (term "0,0,0,0,1,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "118") (term "0,1,0,1,1"))
                                                   (rule "add_literals" (formula "118") (term "1,1,0,1,0,1,1"))
                                                   (rule "times_zero_1" (formula "118") (term "1,0,1,0,1,1"))
                                                   (rule "add_zero_right" (formula "118") (term "0,1,0,1,1"))
                                                   (rule "qeq_literals" (formula "118") (term "1,0,1,1"))
                                                    (builtin "One Step Simplification" (formula "118"))
                                                   (rule "polySimp_pullOutFactor0" (formula "118") (term "0,0,1,1"))
                                                   (rule "add_literals" (formula "118") (term "1,0,0,1,1"))
                                                   (rule "times_zero_1" (formula "118") (term "0,0,1,1"))
                                                   (rule "leq_literals" (formula "118") (term "0,1,1"))
                                                    (builtin "One Step Simplification" (formula "118"))
                                                   (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                                                   (rule "mul_literals" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                   (rule "mul_literals" (formula "37") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "40"))
                                                   (rule "mul_literals" (formula "38") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                   (rule "mul_literals" (formula "38") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "25"))
                                                   (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0"))
                                                   (rule "qeq_literals" (formula "38") (term "0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "57"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "1") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "43") (term "0"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "true_left" (formula "43"))
                                                   (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "47") (term "0"))
                                                   (rule "wellFormedAnonEQ" (formula "47") (term "1,0") (ifseqformula "35"))
                                                   (rule "wellFormedAnon" (formula "47") (term "0,1,0"))
                                                   (rule "replace_known_right" (formula "47") (term "0,0,0") (ifseqformula "119"))
                                                    (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "11")) (ifInst ""  (formula "32")) (ifInst ""  (formula "34")) (ifInst ""  (formula "48")))
                                                   (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "49"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "andLeft" (formula "51"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "andLeft" (formula "52"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "andLeft" (formula "53"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "andLeft" (formula "54"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "andLeft" (formula "56"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "andLeft" (formula "57"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "translateJavaMulInt" (formula "52") (term "1"))
                                                   (rule "mul_literals" (formula "52") (term "1"))
                                                   (rule "translateJavaMulInt" (formula "51") (term "1"))
                                                   (rule "mul_literals" (formula "51") (term "1"))
                                                   (rule "disjointDefinition" (formula "85"))
                                                    (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "151")))
                                                   (rule "true_left" (formula "85"))
                                                   (rule "disjointDefinition" (formula "84"))
                                                    (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "149")))
                                                   (rule "true_left" (formula "84"))
                                                   (rule "disjointDefinition" (formula "83"))
                                                    (builtin "One Step Simplification" (formula "83"))
                                                   (rule "notLeft" (formula "83"))
                                                   (rule "eqSymm" (formula "102"))
                                                   (rule "disjointDefinition" (formula "82"))
                                                    (builtin "One Step Simplification" (formula "82"))
                                                   (rule "notLeft" (formula "82"))
                                                   (rule "eqSymm" (formula "101"))
                                                   (rule "disjointDefinition" (formula "81"))
                                                    (builtin "One Step Simplification" (formula "81"))
                                                   (rule "notLeft" (formula "81"))
                                                   (rule "eqSymm" (formula "100"))
                                                   (rule "disjointDefinition" (formula "80"))
                                                    (builtin "One Step Simplification" (formula "80"))
                                                   (rule "notLeft" (formula "80"))
                                                   (rule "eqSymm" (formula "99"))
                                                   (rule "disjointDefinition" (formula "79"))
                                                    (builtin "One Step Simplification" (formula "79"))
                                                   (rule "notLeft" (formula "79"))
                                                   (rule "eqSymm" (formula "98"))
                                                   (rule "disjointDefinition" (formula "78"))
                                                    (builtin "One Step Simplification" (formula "78"))
                                                   (rule "notLeft" (formula "78"))
                                                   (rule "eqSymm" (formula "97"))
                                                   (rule "disjointDefinition" (formula "77"))
                                                    (builtin "One Step Simplification" (formula "77"))
                                                   (rule "notLeft" (formula "77"))
                                                   (rule "eqSymm" (formula "96"))
                                                   (rule "disjointDefinition" (formula "76"))
                                                    (builtin "One Step Simplification" (formula "76"))
                                                   (rule "notLeft" (formula "76"))
                                                   (rule "eqSymm" (formula "95"))
                                                   (rule "disjointDefinition" (formula "75"))
                                                    (builtin "One Step Simplification" (formula "75"))
                                                   (rule "notLeft" (formula "75"))
                                                   (rule "eqSymm" (formula "94"))
                                                   (rule "disjointDefinition" (formula "74"))
                                                    (builtin "One Step Simplification" (formula "74"))
                                                   (rule "notLeft" (formula "74"))
                                                   (rule "eqSymm" (formula "93"))
                                                   (rule "disjointDefinition" (formula "73"))
                                                    (builtin "One Step Simplification" (formula "73"))
                                                   (rule "notLeft" (formula "73"))
                                                   (rule "eqSymm" (formula "92"))
                                                   (rule "disjointDefinition" (formula "72"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "notLeft" (formula "72"))
                                                   (rule "eqSymm" (formula "91"))
                                                   (rule "disjointDefinition" (formula "71"))
                                                    (builtin "One Step Simplification" (formula "71"))
                                                   (rule "notLeft" (formula "71"))
                                                   (rule "eqSymm" (formula "90"))
                                                   (rule "disjointDefinition" (formula "70"))
                                                    (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "121")))
                                                   (rule "true_left" (formula "70"))
                                                   (rule "disjointDefinition" (formula "69"))
                                                    (builtin "One Step Simplification" (formula "69"))
                                                   (rule "notLeft" (formula "69"))
                                                   (rule "eqSymm" (formula "88"))
                                                   (rule "disjointDefinition" (formula "68"))
                                                    (builtin "One Step Simplification" (formula "68"))
                                                   (rule "notLeft" (formula "68"))
                                                   (rule "eqSymm" (formula "87"))
                                                   (rule "disjointDefinition" (formula "67"))
                                                    (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "115")))
                                                   (rule "true_left" (formula "67"))
                                                   (rule "disjointDefinition" (formula "66"))
                                                    (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "113")))
                                                   (rule "true_left" (formula "66"))
                                                   (rule "disjointDefinition" (formula "65"))
                                                    (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "111")))
                                                   (rule "true_left" (formula "65"))
                                                   (rule "disjointDefinition" (formula "64"))
                                                    (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "109")))
                                                   (rule "true_left" (formula "64"))
                                                   (rule "disjointDefinition" (formula "63"))
                                                    (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "107")))
                                                   (rule "true_left" (formula "63"))
                                                   (rule "disjointDefinition" (formula "62"))
                                                    (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "105")))
                                                   (rule "true_left" (formula "62"))
                                                   (rule "disjointDefinition" (formula "61"))
                                                    (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "103")))
                                                   (rule "true_left" (formula "61"))
                                                   (rule "disjointDefinition" (formula "60"))
                                                    (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "101")))
                                                   (rule "true_left" (formula "60"))
                                                   (rule "disjointDefinition" (formula "58"))
                                                    (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "98")))
                                                   (rule "true_left" (formula "58"))
                                                   (rule "disjointDefinition" (formula "58"))
                                                    (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "98")))
                                                   (rule "true_left" (formula "58"))
                                                   (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "57"))
                                                   (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "57"))
                                                   (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "57"))
                                                   (rule "distributeIntersection" (formula "30") (term "0"))
                                                   (rule "distributeIntersection" (formula "29") (term "0"))
                                                   (rule "distributeIntersection" (formula "30") (term "0,0"))
                                                   (rule "distributeIntersection" (formula "30") (term "1,0"))
                                                   (rule "distributeIntersection" (formula "29") (term "1,0"))
                                                   (rule "distributeIntersection" (formula "29") (term "0,0"))
                                                   (rule "distributeIntersection" (formula "30") (term "1,0,0"))
                                                   (rule "distributeIntersection" (formula "30") (term "0,0,0"))
                                                   (rule "distributeIntersection" (formula "30") (term "1,1,0"))
                                                   (rule "distributeIntersection" (formula "30") (term "0,1,0"))
                                                   (rule "distributeIntersection" (formula "29") (term "1,1,0"))
                                                   (rule "distributeIntersection" (formula "29") (term "0,1,0"))
                                                   (rule "distributeIntersection" (formula "29") (term "1,0,0"))
                                                   (rule "distributeIntersection" (formula "29") (term "0,0,0"))
                                                   (rule "unionEqualsEmpty" (formula "30"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "unionEqualsEmpty" (formula "29"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "unionEqualsEmpty" (formula "32"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "unionEqualsEmpty" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "unionEqualsEmpty" (formula "29"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "unionEqualsEmpty" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "unionEqualsEmpty" (formula "35"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "eqSymm" (formula "83"))
                                                   (rule "eqSymm" (formula "82"))
                                                   (rule "unionEqualsEmpty" (formula "35"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "eqSymm" (formula "82"))
                                                   (rule "eqSymm" (formula "81"))
                                                   (rule "unionEqualsEmpty" (formula "34"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "andLeft" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "eqSymm" (formula "81"))
                                                   (rule "eqSymm" (formula "80"))
                                                   (rule "unionEqualsEmpty" (formula "33"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "andLeft" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "eqSymm" (formula "80"))
                                                   (rule "eqSymm" (formula "79"))
                                                   (rule "unionEqualsEmpty" (formula "30"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "eqSymm" (formula "79"))
                                                   (rule "eqSymm" (formula "78"))
                                                   (rule "unionEqualsEmpty" (formula "29"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "notLeft" (formula "29"))
                                                   (rule "notLeft" (formula "29"))
                                                   (rule "eqSymm" (formula "78"))
                                                   (rule "eqSymm" (formula "77"))
                                                   (rule "unionEqualsEmpty" (formula "30"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "eqSymm" (formula "77"))
                                                   (rule "eqSymm" (formula "76"))
                                                   (rule "unionEqualsEmpty" (formula "29"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "notLeft" (formula "29"))
                                                   (rule "notLeft" (formula "29"))
                                                   (rule "eqSymm" (formula "76"))
                                                   (rule "eqSymm" (formula "75"))
                                                   (rule "commuteUnion" (formula "55") (term "1,1,1"))
                                                   (rule "commuteUnion" (formula "55") (term "0,0,1"))
                                                   (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "28"))
                                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                                   (rule "andLeft" (formula "28"))
                                                   (rule "andLeft" (formula "28"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "andLeft" (formula "28"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "translateJavaMulInt" (formula "28") (term "1"))
                                                   (rule "mul_literals" (formula "28") (term "1"))
                                                   (rule "translateJavaMulInt" (formula "28") (term "1"))
                                                   (rule "mul_literals" (formula "28") (term "1"))
                                                   (rule "disjointDefinition" (formula "56"))
                                                    (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "149")))
                                                   (rule "true_left" (formula "56"))
                                                   (rule "disjointDefinition" (formula "55"))
                                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "147")))
                                                   (rule "true_left" (formula "55"))
                                                   (rule "disjointDefinition" (formula "54"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "notLeft" (formula "54"))
                                                   (rule "eqSymm" (formula "100"))
                                                   (rule "disjointDefinition" (formula "53"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "notLeft" (formula "53"))
                                                   (rule "eqSymm" (formula "99"))
                                                   (rule "disjointDefinition" (formula "52"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "notLeft" (formula "52"))
                                                   (rule "eqSymm" (formula "98"))
                                                   (rule "disjointDefinition" (formula "51"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "notLeft" (formula "51"))
                                                   (rule "eqSymm" (formula "97"))
                                                   (rule "disjointDefinition" (formula "50"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "notLeft" (formula "50"))
                                                   (rule "eqSymm" (formula "96"))
                                                   (rule "disjointDefinition" (formula "49"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "notLeft" (formula "49"))
                                                   (rule "eqSymm" (formula "95"))
                                                   (rule "disjointDefinition" (formula "48"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "notLeft" (formula "48"))
                                                   (rule "eqSymm" (formula "94"))
                                                   (rule "disjointDefinition" (formula "47"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "notLeft" (formula "47"))
                                                   (rule "eqSymm" (formula "93"))
                                                   (rule "disjointDefinition" (formula "46"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "notLeft" (formula "46"))
                                                   (rule "eqSymm" (formula "92"))
                                                   (rule "disjointDefinition" (formula "45"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "notLeft" (formula "45"))
                                                   (rule "eqSymm" (formula "91"))
                                                   (rule "disjointDefinition" (formula "44"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "notLeft" (formula "44"))
                                                   (rule "eqSymm" (formula "90"))
                                                   (rule "disjointDefinition" (formula "43"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "notLeft" (formula "43"))
                                                   (rule "eqSymm" (formula "89"))
                                                   (rule "disjointDefinition" (formula "42"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "notLeft" (formula "42"))
                                                   (rule "eqSymm" (formula "88"))
                                                   (rule "disjointDefinition" (formula "41"))
                                                    (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "119")))
                                                   (rule "true_left" (formula "41"))
                                                   (rule "disjointDefinition" (formula "40"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "notLeft" (formula "40"))
                                                   (rule "eqSymm" (formula "86"))
                                                   (rule "disjointDefinition" (formula "39"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "notLeft" (formula "39"))
                                                   (rule "eqSymm" (formula "85"))
                                                   (rule "disjointDefinition" (formula "38"))
                                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "113")))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "disjointDefinition" (formula "37"))
                                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "111")))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "disjointDefinition" (formula "36"))
                                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "109")))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "disjointDefinition" (formula "35"))
                                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "107")))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "disjointDefinition" (formula "34"))
                                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "105")))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "disjointDefinition" (formula "33"))
                                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "103")))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "disjointDefinition" (formula "32"))
                                                    (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "101")))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "disjointDefinition" (formula "31"))
                                                    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "99")))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "disjointDefinition" (formula "30"))
                                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "97")))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "disjointDefinition" (formula "29"))
                                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "95")))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "applyEq" (formula "28") (term "0") (ifseqformula "55"))
                                                   (rule "eqSymm" (formula "28"))
                                                   (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "28"))
                                                   (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "notLeft" (formula "19"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "notLeft" (formula "19"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "notLeft" (formula "19"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "notLeft" (formula "17"))
                                                   (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "80"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "76"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "74"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "81"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "78"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "77"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "75"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "79"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "133") (term "0,0,0,0,0,1,1,0,1") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "75")) (ifInst ""  (formula "74")) (ifInst ""  (formula "75")) (ifInst ""  (formula "6")) (ifInst ""  (formula "74")))
                                                   (rule "inEqSimp_leqRight" (formula "133"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "45") (term "0") (inst "i=i"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "expand_inInt" (formula "45") (term "1,0,0"))
                                                   (rule "replace_int_MAX" (formula "45") (term "1,0,1,0,0"))
                                                   (rule "replace_int_MIN" (formula "45") (term "0,1,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "45") (term "1,1,0,0,0"))
                                                   (rule "translateJavaAddInt" (formula "45") (term "0,2,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "45") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "45") (term "0,2,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "1,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "45") (term "0,1,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "45") (term "0,0,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "45") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,0,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,0,1,1,0,0,0"))
                                                   (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "55"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "notLeft" (formula "57"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "notLeft" (formula "57"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "notLeft" (formula "57"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "notLeft" (formula "57"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "notLeft" (formula "57"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "notLeft" (formula "57"))
                                                   (rule "notLeft" (formula "56"))
                                                   (rule "notLeft" (formula "55"))
                                                   (rule "Definition_axiom_for_isInInt_in_de_wiesler_SampleParameters" (formula "55") (term "0"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "expand_inInt" (formula "55") (term "1"))
                                                   (rule "expand_inInt" (formula "55") (term "1,0"))
                                                   (rule "expand_inInt" (formula "55") (term "0,0"))
                                                   (rule "replace_int_MIN" (formula "55") (term "0,1,1"))
                                                   (rule "replace_int_MAX" (formula "55") (term "1,0,1"))
                                                   (rule "replace_int_MAX" (formula "55") (term "1,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "55") (term "0,1,1,0"))
                                                   (rule "replace_int_MAX" (formula "55") (term "1,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "55") (term "0,1,0,0"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "andLeft" (formula "56"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "andLeft" (formula "57"))
                                                   (rule "inEqSimp_commuteLeq" (formula "60"))
                                                   (rule "inEqSimp_commuteLeq" (formula "56"))
                                                   (rule "inEqSimp_commuteLeq" (formula "58"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "42"))
                                                   (rule "applyEq" (formula "60") (term "0") (ifseqformula "42"))
                                                   (rule "inEqSimp_subsumption1" (formula "58") (ifseqformula "39"))
                                                   (rule "leq_literals" (formula "58") (term "0"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "true_left" (formula "58"))
                                                   (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "36"))
                                                   (rule "leq_literals" (formula "56") (term "0"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "true_left" (formula "56"))
                                                   (rule "inEqSimp_subsumption6" (formula "58") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "58") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "58") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "leq_literals" (formula "58") (term "0"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "true_left" (formula "58"))
                                                   (rule "inEqSimp_contradInEq5" (formula "57") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "57") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "57") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "qeq_literals" (formula "57") (term "0"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "closeFalse" (formula "57"))
                                                )
                                             )
                                             (branch "Null Reference (_storage = null)"
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "Exceptional Post (copy_unique)"
                               (builtin "One Step Simplification" (formula "38"))
                               (builtin "One Step Simplification" (formula "90"))
                              (rule "andLeft" (formula "38"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,0") (ifseqformula "38"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "notLeft" (formula "39"))
                              (rule "close" (formula "41") (ifseqformula "40"))
                           )
                           (branch "Pre (copy_unique)"
                               (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "87")) (ifInst ""  (formula "87")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "1,1,1") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "88"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "1,0,0,0,0,0,1") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "2")))
                              (rule "wellFormedAnonEQ" (formula "88") (term "0,0,0,0,0,1") (ifseqformula "28"))
                              (rule "wellFormedAnon" (formula "88") (term "0,0,0,0,0,0,1"))
                              (rule "expand_inInt" (formula "88") (term "1,0,1"))
                              (rule "expand_inInt" (formula "88") (term "1,0,0,0,0,1"))
                              (rule "expand_inInt" (formula "88") (term "1,0,0,1"))
                              (rule "expand_inInt" (formula "88") (term "1,0,0,0,1"))
                              (rule "replace_int_MIN" (formula "88") (term "0,1,1,0,1"))
                              (rule "replace_int_MAX" (formula "88") (term "1,0,1,0,1"))
                              (rule "replace_int_MIN" (formula "88") (term "0,1,1,0,0,0,0,1"))
                              (rule "replace_int_MAX" (formula "88") (term "1,0,1,0,0,0,0,1"))
                              (rule "replace_int_MAX" (formula "88") (term "1,0,1,0,0,1"))
                              (rule "replace_int_MIN" (formula "88") (term "0,1,1,0,0,1"))
                              (rule "replace_int_MIN" (formula "88") (term "0,1,1,0,0,0,1"))
                              (rule "replace_int_MAX" (formula "88") (term "1,0,1,0,0,0,1"))
                              (rule "replace_known_left" (formula "88") (term "0,0,0,0,0,0,0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "25")) (ifInst ""  (formula "27")) (ifInst ""  (formula "3")))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "19"))
                              (rule "mul_literals" (formula "19") (term "1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "88") (term "1,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "88") (term "0,0,0,0,1"))
                              (rule "replace_known_left" (formula "88") (term "0,0,0,0,1") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "88"))
                              (rule "inEqSimp_homoInEq0" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "88") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "88") (term "1,0,1,0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "88") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "88") (term "0,0,1,0,0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "88") (term "0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "88") (term "0,1,0,0,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "88") (term "0,0,0,0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "88") (term "0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "88") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "88") (term "1,0,1,1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "88") (term "0,1,1,0,0,1"))
                              (rule "add_literals" (formula "88") (term "0,0,1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                              (rule "mul_literals" (formula "19") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "88") (term "1,1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "88") (term "1,1,0,0,0,1"))
                              (rule "mul_literals" (formula "88") (term "0,1,1,0,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "88") (term "0,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "88") (term "0,0,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "88") (term "0,0,0,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "88") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "88") (term "0,0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "88") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "88") (term "1,1,1,0,0,1"))
                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "19"))
                              (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0"))
                              (rule "qeq_literals" (formula "12") (term "0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "11"))
                              (rule "leq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                              (rule "leq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "13"))
                              (rule "leq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "17"))
                              (rule "mul_literals" (formula "4") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "10"))
                              (rule "leq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "12"))
                              (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                              (rule "mul_literals" (formula "16") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "add_literals" (formula "16") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "polySimp_elimOne" (formula "16") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "16"))
                              (rule "leq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
                              (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                              (rule "Definition_axiom_for_isInInt_in_de_wiesler_SampleParameters" (formula "32") (term "0"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "expand_inInt" (formula "32") (term "0,0"))
                              (rule "expand_inInt" (formula "32") (term "1,0"))
                              (rule "expand_inInt" (formula "32") (term "1"))
                              (rule "replace_int_MIN" (formula "32") (term "0,1,0,0"))
                              (rule "replace_int_MAX" (formula "32") (term "1,0,0,0"))
                              (rule "replace_int_MAX" (formula "32") (term "1,0,1,0"))
                              (rule "replace_int_MIN" (formula "32") (term "0,1,1,0"))
                              (rule "replace_int_MAX" (formula "32") (term "1,0,1"))
                              (rule "replace_int_MIN" (formula "32") (term "0,1,1"))
                              (rule "andLeft" (formula "32"))
                              (rule "andLeft" (formula "33"))
                              (rule "andLeft" (formula "32"))
                              (rule "andLeft" (formula "32"))
                              (rule "andLeft" (formula "34"))
                              (rule "replace_known_left" (formula "90") (term "0,1,0,1") (ifseqformula "34"))
                               (builtin "One Step Simplification" (formula "90"))
                              (rule "inEqSimp_commuteLeq" (formula "37"))
                              (rule "inEqSimp_commuteLeq" (formula "33"))
                              (rule "inEqSimp_commuteLeq" (formula "35"))
                              (rule "replace_known_left" (formula "90") (term "1,0,1") (ifseqformula "35"))
                               (builtin "One Step Simplification" (formula "90"))
                              (rule "inEqSimp_subsumption0" (formula "90") (term "0,1,0,1") (ifseqformula "36"))
                              (rule "leq_literals" (formula "90") (term "0,0,1,0,1"))
                               (builtin "One Step Simplification" (formula "90"))
                              (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "18"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "19"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "21"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "26"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "translateJavaMulInt" (formula "21") (term "1"))
                              (rule "mul_literals" (formula "21") (term "1"))
                              (rule "translateJavaMulInt" (formula "20") (term "1"))
                              (rule "mul_literals" (formula "20") (term "1"))
                              (rule "disjointDefinition" (formula "54"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "121")))
                              (rule "true_left" (formula "54"))
                              (rule "disjointDefinition" (formula "53"))
                               (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "119")))
                              (rule "true_left" (formula "53"))
                              (rule "disjointDefinition" (formula "52"))
                               (builtin "One Step Simplification" (formula "52"))
                              (rule "notLeft" (formula "52"))
                              (rule "eqSymm" (formula "72"))
                              (rule "disjointDefinition" (formula "51"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "notLeft" (formula "51"))
                              (rule "eqSymm" (formula "71"))
                              (rule "disjointDefinition" (formula "50"))
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "notLeft" (formula "50"))
                              (rule "eqSymm" (formula "70"))
                              (rule "disjointDefinition" (formula "49"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "notLeft" (formula "49"))
                              (rule "eqSymm" (formula "69"))
                              (rule "disjointDefinition" (formula "48"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "notLeft" (formula "48"))
                              (rule "eqSymm" (formula "68"))
                              (rule "disjointDefinition" (formula "47"))
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "notLeft" (formula "47"))
                              (rule "eqSymm" (formula "67"))
                              (rule "disjointDefinition" (formula "46"))
                               (builtin "One Step Simplification" (formula "46"))
                              (rule "notLeft" (formula "46"))
                              (rule "eqSymm" (formula "66"))
                              (rule "disjointDefinition" (formula "45"))
                               (builtin "One Step Simplification" (formula "45"))
                              (rule "notLeft" (formula "45"))
                              (rule "eqSymm" (formula "65"))
                              (rule "disjointDefinition" (formula "44"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "notLeft" (formula "44"))
                              (rule "eqSymm" (formula "64"))
                              (rule "disjointDefinition" (formula "43"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "notLeft" (formula "43"))
                              (rule "eqSymm" (formula "63"))
                              (rule "disjointDefinition" (formula "42"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "notLeft" (formula "42"))
                              (rule "eqSymm" (formula "62"))
                              (rule "disjointDefinition" (formula "41"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "notLeft" (formula "41"))
                              (rule "eqSymm" (formula "61"))
                              (rule "disjointDefinition" (formula "40"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "notLeft" (formula "40"))
                              (rule "eqSymm" (formula "60"))
                              (rule "disjointDefinition" (formula "39"))
                               (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "91")))
                              (rule "true_left" (formula "39"))
                              (rule "disjointDefinition" (formula "38"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "notLeft" (formula "38"))
                              (rule "eqSymm" (formula "58"))
                              (rule "disjointDefinition" (formula "37"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "notLeft" (formula "37"))
                              (rule "eqSymm" (formula "57"))
                              (rule "disjointDefinition" (formula "36"))
                               (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "85")))
                              (rule "true_left" (formula "36"))
                              (rule "disjointDefinition" (formula "35"))
                               (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "83")))
                              (rule "true_left" (formula "35"))
                              (rule "disjointDefinition" (formula "34"))
                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "81")))
                              (rule "true_left" (formula "34"))
                              (rule "disjointDefinition" (formula "33"))
                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "79")))
                              (rule "true_left" (formula "33"))
                              (rule "disjointDefinition" (formula "32"))
                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "77")))
                              (rule "true_left" (formula "32"))
                              (rule "disjointDefinition" (formula "31"))
                               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "75")))
                              (rule "true_left" (formula "31"))
                              (rule "disjointDefinition" (formula "30"))
                               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "73")))
                              (rule "true_left" (formula "30"))
                              (rule "disjointDefinition" (formula "29"))
                               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "71")))
                              (rule "true_left" (formula "29"))
                              (rule "disjointDefinition" (formula "28"))
                               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "69")))
                              (rule "true_left" (formula "28"))
                              (rule "disjointDefinition" (formula "27"))
                               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "67")))
                              (rule "true_left" (formula "27"))
                              (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "26"))
                              (rule "distributeIntersection" (formula "28") (term "0"))
                              (rule "distributeIntersection" (formula "27") (term "0"))
                              (rule "distributeIntersection" (formula "28") (term "0,0"))
                              (rule "distributeIntersection" (formula "28") (term "1,0"))
                              (rule "distributeIntersection" (formula "27") (term "1,0"))
                              (rule "distributeIntersection" (formula "27") (term "0,0"))
                              (rule "distributeIntersection" (formula "28") (term "0,0,0"))
                              (rule "distributeIntersection" (formula "28") (term "1,0,0"))
                              (rule "distributeIntersection" (formula "28") (term "1,1,0"))
                              (rule "distributeIntersection" (formula "28") (term "0,1,0"))
                              (rule "distributeIntersection" (formula "27") (term "0,1,0"))
                              (rule "distributeIntersection" (formula "27") (term "1,1,0"))
                              (rule "distributeIntersection" (formula "27") (term "0,0,0"))
                              (rule "distributeIntersection" (formula "27") (term "1,0,0"))
                              (rule "unionEqualsEmpty" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "unionEqualsEmpty" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "unionEqualsEmpty" (formula "29"))
                              (rule "andLeft" (formula "29"))
                              (rule "unionEqualsEmpty" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "unionEqualsEmpty" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "unionEqualsEmpty" (formula "29"))
                              (rule "andLeft" (formula "29"))
                              (rule "unionEqualsEmpty" (formula "32"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "andLeft" (formula "32"))
                              (rule "notLeft" (formula "32"))
                              (rule "notLeft" (formula "32"))
                              (rule "eqSymm" (formula "53"))
                              (rule "eqSymm" (formula "52"))
                              (rule "unionEqualsEmpty" (formula "31"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "notLeft" (formula "31"))
                              (rule "notLeft" (formula "31"))
                              (rule "eqSymm" (formula "52"))
                              (rule "eqSymm" (formula "51"))
                              (rule "unionEqualsEmpty" (formula "31"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "notLeft" (formula "32"))
                              (rule "notLeft" (formula "31"))
                              (rule "eqSymm" (formula "51"))
                              (rule "eqSymm" (formula "50"))
                              (rule "unionEqualsEmpty" (formula "31"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "notLeft" (formula "31"))
                              (rule "notLeft" (formula "31"))
                              (rule "eqSymm" (formula "50"))
                              (rule "eqSymm" (formula "49"))
                              (rule "unionEqualsEmpty" (formula "28"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "eqSymm" (formula "49"))
                              (rule "eqSymm" (formula "48"))
                              (rule "unionEqualsEmpty" (formula "27"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "27"))
                              (rule "notLeft" (formula "27"))
                              (rule "eqSymm" (formula "48"))
                              (rule "eqSymm" (formula "47"))
                              (rule "unionEqualsEmpty" (formula "28"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "eqSymm" (formula "47"))
                              (rule "eqSymm" (formula "46"))
                              (rule "unionEqualsEmpty" (formula "27"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "27"))
                              (rule "notLeft" (formula "27"))
                              (rule "eqSymm" (formula "46"))
                              (rule "eqSymm" (formula "45"))
                              (rule "commuteUnion_2" (formula "26") (term "0,1"))
                              (rule "commuteUnion" (formula "26") (term "1,1,1"))
                              (rule "commuteUnion" (formula "31") (term "0,0,0,1,0"))
                              (rule "commuteUnion" (formula "31") (term "1,1,0,1,0"))
                              (rule "commuteUnion" (formula "26") (term "0,0,1"))
                              (rule "commuteUnion_2" (formula "31") (term "0,0,1,0"))
                              (rule "commuteUnion_2" (formula "26") (term "0,1"))
                              (rule "commuteUnion" (formula "31") (term "0,0,0,1,0"))
                              (rule "commuteUnion_2" (formula "26") (term "1"))
                              (rule "commuteUnion_2" (formula "31") (term "0,1,0"))
                              (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "36"))
                               (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "22")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "38"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "translateJavaMulInt" (formula "37") (term "1"))
                              (rule "mul_literals" (formula "37") (term "1"))
                              (rule "translateJavaMulInt" (formula "36") (term "1"))
                              (rule "mul_literals" (formula "36") (term "1"))
                              (rule "disjointDefinition" (formula "64"))
                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "119")))
                              (rule "true_left" (formula "64"))
                              (rule "disjointDefinition" (formula "63"))
                               (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "117")))
                              (rule "true_left" (formula "63"))
                              (rule "disjointDefinition" (formula "62"))
                               (builtin "One Step Simplification" (formula "62"))
                              (rule "notLeft" (formula "62"))
                              (rule "eqSymm" (formula "70"))
                              (rule "disjointDefinition" (formula "61"))
                               (builtin "One Step Simplification" (formula "61"))
                              (rule "notLeft" (formula "61"))
                              (rule "eqSymm" (formula "69"))
                              (rule "disjointDefinition" (formula "60"))
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "notLeft" (formula "60"))
                              (rule "eqSymm" (formula "68"))
                              (rule "disjointDefinition" (formula "59"))
                               (builtin "One Step Simplification" (formula "59"))
                              (rule "notLeft" (formula "59"))
                              (rule "eqSymm" (formula "67"))
                              (rule "disjointDefinition" (formula "58"))
                               (builtin "One Step Simplification" (formula "58"))
                              (rule "notLeft" (formula "58"))
                              (rule "eqSymm" (formula "66"))
                              (rule "disjointDefinition" (formula "57"))
                               (builtin "One Step Simplification" (formula "57"))
                              (rule "notLeft" (formula "57"))
                              (rule "eqSymm" (formula "65"))
                              (rule "disjointDefinition" (formula "56"))
                               (builtin "One Step Simplification" (formula "56"))
                              (rule "notLeft" (formula "56"))
                              (rule "eqSymm" (formula "64"))
                              (rule "disjointDefinition" (formula "55"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "notLeft" (formula "55"))
                              (rule "eqSymm" (formula "63"))
                              (rule "disjointDefinition" (formula "54"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "notLeft" (formula "54"))
                              (rule "eqSymm" (formula "62"))
                              (rule "disjointDefinition" (formula "53"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "notLeft" (formula "53"))
                              (rule "eqSymm" (formula "61"))
                              (rule "disjointDefinition" (formula "52"))
                               (builtin "One Step Simplification" (formula "52"))
                              (rule "notLeft" (formula "52"))
                              (rule "eqSymm" (formula "60"))
                              (rule "disjointDefinition" (formula "51"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "notLeft" (formula "51"))
                              (rule "eqSymm" (formula "59"))
                              (rule "disjointDefinition" (formula "50"))
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "notLeft" (formula "50"))
                              (rule "eqSymm" (formula "58"))
                              (rule "disjointDefinition" (formula "49"))
                               (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "89")))
                              (rule "true_left" (formula "49"))
                              (rule "disjointDefinition" (formula "48"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "notLeft" (formula "48"))
                              (rule "eqSymm" (formula "56"))
                              (rule "disjointDefinition" (formula "47"))
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "notLeft" (formula "47"))
                              (rule "eqSymm" (formula "55"))
                              (rule "disjointDefinition" (formula "46"))
                               (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "83")))
                              (rule "true_left" (formula "46"))
                              (rule "disjointDefinition" (formula "45"))
                               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "81")))
                              (rule "true_left" (formula "45"))
                              (rule "disjointDefinition" (formula "44"))
                               (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "79")))
                              (rule "true_left" (formula "44"))
                              (rule "disjointDefinition" (formula "43"))
                               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "77")))
                              (rule "true_left" (formula "43"))
                              (rule "disjointDefinition" (formula "42"))
                               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "75")))
                              (rule "true_left" (formula "42"))
                              (rule "disjointDefinition" (formula "41"))
                               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "73")))
                              (rule "true_left" (formula "41"))
                              (rule "disjointDefinition" (formula "40"))
                               (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "71")))
                              (rule "true_left" (formula "40"))
                              (rule "disjointDefinition" (formula "39"))
                               (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "69")))
                              (rule "true_left" (formula "39"))
                              (rule "disjointDefinition" (formula "38"))
                               (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "67")))
                              (rule "true_left" (formula "38"))
                              (rule "disjointDefinition" (formula "37"))
                               (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "65")))
                              (rule "true_left" (formula "37"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "26"))
                              (rule "eqSymm" (formula "36"))
                              (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "notLeft" (formula "9"))
                              (rule "notLeft" (formula "8"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "notLeft" (formula "9"))
                              (rule "andLeft" (formula "7"))
                              (rule "notLeft" (formula "9"))
                              (rule "notLeft" (formula "8"))
                              (rule "andLeft" (formula "7"))
                              (rule "notLeft" (formula "8"))
                              (rule "andLeft" (formula "7"))
                              (rule "notLeft" (formula "7"))
                              (rule "notLeft" (formula "7"))
                              (rule "replace_known_right" (formula "103") (term "0,0") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "44")))
                              (rule "Definition_axiom_for_isValidForLen_in_de_wiesler_SampleParameters" (formula "33") (term "0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "andLeft" (formula "33"))
                              (rule "andLeft" (formula "33"))
                              (rule "andLeft" (formula "33"))
                              (rule "andLeft" (formula "34"))
                              (rule "andLeft" (formula "33"))
                              (rule "andLeft" (formula "33"))
                              (rule "andLeft" (formula "33"))
                              (rule "translateJavaMulInt" (formula "40") (term "0,0"))
                              (rule "translateJavaMod" (formula "39") (term "0"))
                              (rule "translateJavaDivInt" (formula "34") (term "1"))
                              (rule "translateJavaSubInt" (formula "40") (term "0"))
                              (rule "polySimp_elimSub" (formula "40") (term "0"))
                              (rule "mul_literals" (formula "40") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "40") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "35"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "37"))
                              (rule "inEqSimp_commuteLeq" (formula "36"))
                              (rule "inEqSimp_commuteLeq" (formula "33"))
                              (rule "inEqSimp_homoInEq0" (formula "40"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "40") (term "0"))
                              (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                              (rule "jmod_axiom" (formula "39") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "39"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1"))
                              (rule "polySimp_rightDist" (formula "35") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "35") (term "0,1"))
                              (rule "mul_literals" (formula "35") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                              (rule "polySimp_elimOne" (formula "40") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "110") (term "1,0") (ifseqformula "37"))
                              (rule "leq_literals" (formula "110") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "110"))
                              (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "33"))
                              (rule "leq_literals" (formula "45") (term "0"))
                               (builtin "One Step Simplification" (formula "45"))
                              (rule "true_left" (formula "45"))
                              (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "36"))
                              (rule "leq_literals" (formula "46") (term "0"))
                               (builtin "One Step Simplification" (formula "46"))
                              (rule "true_left" (formula "46"))
                              (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "37"))
                              (rule "leq_literals" (formula "47") (term "0"))
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "true_left" (formula "47"))
                              (rule "newSym_eq" (formula "39") (inst "newSymDef=mul(int::final(result_220,
               de.wiesler.SampleParameters::$num_buckets),
    Z(0(#)))") (inst "l=l_0"))
                              (rule "times_zero_1" (formula "39") (term "1,1"))
                              (rule "add_zero_right" (formula "39") (term "1"))
                              (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "39"))
                              (rule "eqSymm" (formula "40"))
                              (rule "applyEq" (formula "38") (term "0") (ifseqformula "40"))
                              (rule "inEqSimp_commuteLeq" (formula "38"))
                              (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                              (rule "applyEq" (formula "47") (term "0") (ifseqformula "40"))
                              (rule "applyEq" (formula "37") (term "0") (ifseqformula "40"))
                              (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "40"))
                              (rule "polySimp_mulAssoc" (formula "41") (term "0"))
                              (rule "elimGcdGeq_antec" (formula "37") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "37") (term "0,0"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                              (rule "add_zero_left" (formula "37") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                              (rule "add_literals" (formula "37") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0"))
                              (rule "leq_literals" (formula "37") (term "0"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "elimGcdLeq_antec" (formula "47") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))"))
                              (rule "neg_literal" (formula "47") (term "0,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                              (rule "leq_literals" (formula "47") (term "0,0"))
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "47") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                              (rule "add_literals" (formula "47") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "47") (term "1,0,0"))
                              (rule "add_literals" (formula "47") (term "0,0"))
                              (rule "qeq_literals" (formula "47") (term "0"))
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
                              (rule "mul_literals" (formula "33") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                              (rule "mul_literals" (formula "33") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0"))
                              (rule "qeq_literals" (formula "33") (term "0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                              (rule "mul_literals" (formula "33") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                              (rule "mul_literals" (formula "33") (term "1"))
                              (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "43") (term "0") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "expand_inInt" (formula "43") (term "1,0,0"))
                              (rule "replace_int_MIN" (formula "43") (term "0,1,1,0,0"))
                              (rule "replace_int_MAX" (formula "43") (term "1,0,1,0,0"))
                              (rule "translateJavaSubInt" (formula "43") (term "1,1,0,0,0"))
                              (rule "translateJavaAddInt" (formula "43") (term "0,2,1,1,0"))
                              (rule "polySimp_elimSub" (formula "43") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,1,1,0,0,0"))
                              (rule "polySimp_addComm0" (formula "43") (term "0,2,1,1,0"))
                              (rule "polySimp_addComm1" (formula "43") (term "1,1,0,0,0"))
                              (rule "polySimp_addComm0" (formula "43") (term "0,1,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "0,1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,0,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,0,0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,1,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,0,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,0,1,1,0,0,0"))
                              (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "45"))
                              (rule "andLeft" (formula "45"))
                              (rule "andLeft" (formula "45"))
                              (rule "notLeft" (formula "47"))
                              (rule "notLeft" (formula "46"))
                              (rule "andLeft" (formula "45"))
                              (rule "notLeft" (formula "46"))
                              (rule "andLeft" (formula "45"))
                              (rule "notLeft" (formula "46"))
                              (rule "andLeft" (formula "45"))
                              (rule "notLeft" (formula "46"))
                              (rule "andLeft" (formula "45"))
                              (rule "andLeft" (formula "45"))
                              (rule "notLeft" (formula "47"))
                              (rule "notLeft" (formula "45"))
                              (rule "notLeft" (formula "45"))
                              (rule "commuteUnion_2" (formula "44") (term "0,0"))
                              (rule "commuteUnion" (formula "44") (term "1,1,0"))
                              (rule "commuteUnion" (formula "44") (term "0,0,0"))
                              (rule "commuteUnion_2" (formula "44") (term "0,0"))
                              (rule "commuteUnion_2" (formula "44") (term "0"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "true_left" (formula "44"))
                              (rule "commute_or" (formula "13") (term "0,0,0"))
                              (rule "inEqSimp_or_subsumption3" (formula "13") (term "0,0"))
                              (rule "qeq_literals" (formula "13") (term "0,1,0,0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "cut_direct" (formula "28") (term "0,0"))
                              (branch "CUT: result_219 = null TRUE"
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "nnf_imp2or" (formula "43") (term "0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                 (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                                 (rule "expand_inShort" (formula "24"))
                                 (rule "replace_short_MIN" (formula "24") (term "0,1"))
                                 (rule "replace_short_MAX" (formula "24") (term "1,0"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "inEqSimp_commuteLeq" (formula "25"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
                                 (rule "leq_literals" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                 (rule "qeq_literals" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                 (rule "qeq_literals" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                 (rule "expand_inShort" (formula "23"))
                                 (rule "replace_short_MIN" (formula "23") (term "0,1"))
                                 (rule "replace_short_MAX" (formula "23") (term "1,0"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "inEqSimp_commuteLeq" (formula "24"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "25"))
                                 (rule "leq_literals" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                 (rule "qeq_literals" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                 (rule "qeq_literals" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                 (rule "expand_inShort" (formula "22"))
                                 (rule "replace_short_MIN" (formula "22") (term "0,1"))
                                 (rule "replace_short_MAX" (formula "22") (term "1,0"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "inEqSimp_commuteLeq" (formula "23"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                 (rule "qeq_literals" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                 (rule "qeq_literals" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                 (rule "expand_inShort" (formula "21"))
                                 (rule "replace_short_MIN" (formula "21") (term "0,1"))
                                 (rule "replace_short_MAX" (formula "21") (term "1,0"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "inEqSimp_commuteLeq" (formula "22"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                 (rule "qeq_literals" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                 (rule "qeq_literals" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                 (rule "expand_inShort" (formula "20"))
                                 (rule "replace_short_MIN" (formula "20") (term "0,1"))
                                 (rule "replace_short_MAX" (formula "20") (term "1,0"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_commuteLeq" (formula "21"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                              (branch "CUT: result_219 = null FALSE"
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "nnf_imp2or" (formula "43") (term "0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                 (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                                 (rule "expand_inShort" (formula "24"))
                                 (rule "replace_short_MIN" (formula "24") (term "0,1"))
                                 (rule "replace_short_MAX" (formula "24") (term "1,0"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "inEqSimp_commuteLeq" (formula "25"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                 (rule "qeq_literals" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                 (rule "leq_literals" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                 (rule "qeq_literals" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                 (rule "expand_inShort" (formula "23"))
                                 (rule "replace_short_MIN" (formula "23") (term "0,1"))
                                 (rule "replace_short_MAX" (formula "23") (term "1,0"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "inEqSimp_commuteLeq" (formula "24"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                 (rule "qeq_literals" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                 (rule "leq_literals" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                 (rule "qeq_literals" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                 (rule "expand_inShort" (formula "22"))
                                 (rule "replace_short_MIN" (formula "22") (term "0,1"))
                                 (rule "replace_short_MAX" (formula "22") (term "1,0"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "inEqSimp_commuteLeq" (formula "23"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                 (rule "qeq_literals" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                 (rule "qeq_literals" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                 (rule "qeq_literals" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                 (rule "expand_inShort" (formula "21"))
                                 (rule "replace_short_MIN" (formula "21") (term "0,1"))
                                 (rule "replace_short_MAX" (formula "21") (term "1,0"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "inEqSimp_commuteLeq" (formula "22"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                 (rule "qeq_literals" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                 (rule "expand_inShort" (formula "20"))
                                 (rule "replace_short_MIN" (formula "20") (term "0,1"))
                                 (rule "replace_short_MAX" (formula "20") (term "1,0"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_commuteLeq" (formula "21"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                 (rule "qeq_literals" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                           )
                        )
                     )
                  )
                  (branch "Null Reference (_storage = null)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (sample = null)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (sample = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (sample = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Exceptional Post (sample)"
          (builtin "One Step Simplification" (formula "28"))
          (builtin "One Step Simplification" (formula "77"))
         (rule "andLeft" (formula "28"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0") (ifseqformula "28"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "30"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "31"))
         (rule "notLeft" (formula "29"))
         (rule "close" (formula "33") (ifseqformula "32"))
      )
      (branch "Pre (sample)"
          (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "74")) (ifInst ""  (formula "72")) (ifInst ""  (formula "74")) (ifInst ""  (formula "2")) (ifInst ""  (formula "72")) (ifInst ""  (formula "8")))
         (rule "wellFormedAnon" (formula "75") (term "0,0,1,0"))
         (rule "expand_inInt" (formula "75") (term "1,0,1,0"))
         (rule "expand_inInt" (formula "75") (term "1,1,0"))
         (rule "replace_int_MAX" (formula "75") (term "1,0,1,0,1,0"))
         (rule "replace_int_MIN" (formula "75") (term "0,1,1,0,1,0"))
         (rule "replace_int_MAX" (formula "75") (term "1,0,1,1,0"))
         (rule "replace_int_MIN" (formula "75") (term "0,1,1,1,0"))
         (rule "translateJavaSubInt" (formula "75") (term "0,0,1"))
         (rule "replace_known_left" (formula "75") (term "0,1,1,0") (ifseqformula "5"))
          (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "1")) (ifInst ""  (formula "25")) (ifInst ""  (formula "3")))
         (rule "polySimp_elimSub" (formula "75") (term "0,0,1"))
         (rule "polySimp_addComm0" (formula "75") (term "0,0,1"))
         (rule "measuredByCheck" (formula "75") (term "1") (ifseqformula "9"))
         (rule "precOfPair" (formula "75") (term "1"))
          (builtin "One Step Simplification" (formula "75"))
         (rule "precOfInt" (formula "75") (term "0,1"))
         (rule "precOfInt" (formula "75") (term "1,1"))
         (rule "leq_literals" (formula "75") (term "0,1,1"))
          (builtin "One Step Simplification" (formula "75"))
         (rule "less_literals" (formula "75") (term "1,1"))
          (builtin "One Step Simplification" (formula "75"))
         (rule "inEqSimp_gtToGeq" (formula "19"))
         (rule "mul_literals" (formula "19") (term "1,0,0"))
         (rule "add_literals" (formula "19") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "75") (term "1,1"))
         (rule "replace_known_left" (formula "75") (term "1,1") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "75"))
         (rule "inEqSimp_commuteLeq" (formula "75") (term "1"))
         (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "75"))
         (rule "inEqSimp_homoInEq0" (formula "20"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0"))
         (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19"))
         (rule "polySimp_mulComm0" (formula "19") (term "1"))
         (rule "polySimp_rightDist" (formula "19") (term "1"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
         (rule "mul_literals" (formula "19") (term "0,1"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "20"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0"))
         (rule "polySimp_elimOne" (formula "20") (term "0"))
         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "19"))
         (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0"))
         (rule "qeq_literals" (formula "12") (term "0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
         (rule "leq_literals" (formula "14") (term "0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "11"))
         (rule "leq_literals" (formula "4") (term "0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "4"))
         (rule "polySimp_rightDist" (formula "16") (term "0,0"))
         (rule "mul_literals" (formula "16") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0"))
         (rule "add_literals" (formula "16") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "16"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0"))
         (rule "polySimp_elimOne" (formula "16") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "16"))
         (rule "leq_literals" (formula "3") (term "0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "17"))
         (rule "mul_literals" (formula "4") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "4") (term "0"))
         (rule "add_literals" (formula "4") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
         (rule "mul_literals" (formula "4") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "10"))
         (rule "leq_literals" (formula "4") (term "0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
         (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
         (rule "polySimp_addComm0" (formula "12") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
         (rule "polySimp_elimOne" (formula "12") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "12"))
         (rule "leq_literals" (formula "3") (term "0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "11"))
         (rule "polySimp_rightDist" (formula "16") (term "0,0"))
         (rule "mul_literals" (formula "16") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0"))
         (rule "add_literals" (formula "16") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "16"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0"))
         (rule "polySimp_elimOne" (formula "16") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "16"))
         (rule "leq_literals" (formula "15") (term "0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
         (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
         (rule "mul_literals" (formula "14") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
         (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "18"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "26"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "translateJavaMulInt" (formula "21") (term "1"))
         (rule "mul_literals" (formula "21") (term "1"))
         (rule "translateJavaMulInt" (formula "20") (term "1"))
         (rule "mul_literals" (formula "20") (term "1"))
         (rule "disjointDefinition" (formula "54"))
          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "103")))
         (rule "true_left" (formula "54"))
         (rule "disjointDefinition" (formula "53"))
          (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "101")))
         (rule "true_left" (formula "53"))
         (rule "disjointDefinition" (formula "52"))
          (builtin "One Step Simplification" (formula "52"))
         (rule "notLeft" (formula "52"))
         (rule "eqSymm" (formula "57"))
         (rule "disjointDefinition" (formula "51"))
          (builtin "One Step Simplification" (formula "51"))
         (rule "notLeft" (formula "51"))
         (rule "eqSymm" (formula "56"))
         (rule "disjointDefinition" (formula "50"))
          (builtin "One Step Simplification" (formula "50"))
         (rule "notLeft" (formula "50"))
         (rule "eqSymm" (formula "55"))
         (rule "disjointDefinition" (formula "49"))
          (builtin "One Step Simplification" (formula "49"))
         (rule "notLeft" (formula "49"))
         (rule "eqSymm" (formula "54"))
         (rule "disjointDefinition" (formula "48"))
          (builtin "One Step Simplification" (formula "48"))
         (rule "notLeft" (formula "48"))
         (rule "eqSymm" (formula "53"))
         (rule "disjointDefinition" (formula "47"))
          (builtin "One Step Simplification" (formula "47"))
         (rule "notLeft" (formula "47"))
         (rule "eqSymm" (formula "52"))
         (rule "disjointDefinition" (formula "46"))
          (builtin "One Step Simplification" (formula "46"))
         (rule "notLeft" (formula "46"))
         (rule "eqSymm" (formula "51"))
         (rule "disjointDefinition" (formula "45"))
          (builtin "One Step Simplification" (formula "45"))
         (rule "notLeft" (formula "45"))
         (rule "eqSymm" (formula "50"))
         (rule "disjointDefinition" (formula "44"))
          (builtin "One Step Simplification" (formula "44"))
         (rule "notLeft" (formula "44"))
         (rule "eqSymm" (formula "49"))
         (rule "disjointDefinition" (formula "43"))
          (builtin "One Step Simplification" (formula "43"))
         (rule "notLeft" (formula "43"))
         (rule "eqSymm" (formula "48"))
         (rule "disjointDefinition" (formula "42"))
          (builtin "One Step Simplification" (formula "42"))
         (rule "notLeft" (formula "42"))
         (rule "eqSymm" (formula "47"))
         (rule "disjointDefinition" (formula "41"))
          (builtin "One Step Simplification" (formula "41"))
         (rule "notLeft" (formula "41"))
         (rule "eqSymm" (formula "46"))
         (rule "disjointDefinition" (formula "40"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "notLeft" (formula "40"))
         (rule "eqSymm" (formula "45"))
         (rule "disjointDefinition" (formula "39"))
          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "73")))
         (rule "true_left" (formula "39"))
         (rule "disjointDefinition" (formula "38"))
          (builtin "One Step Simplification" (formula "38"))
         (rule "notLeft" (formula "38"))
         (rule "eqSymm" (formula "43"))
         (rule "disjointDefinition" (formula "37"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "notLeft" (formula "37"))
         (rule "eqSymm" (formula "42"))
         (rule "disjointDefinition" (formula "36"))
          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "67")))
         (rule "true_left" (formula "36"))
         (rule "disjointDefinition" (formula "35"))
          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "65")))
         (rule "true_left" (formula "35"))
         (rule "disjointDefinition" (formula "34"))
          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "63")))
         (rule "true_left" (formula "34"))
         (rule "disjointDefinition" (formula "33"))
          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "61")))
         (rule "true_left" (formula "33"))
         (rule "disjointDefinition" (formula "32"))
          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "59")))
         (rule "true_left" (formula "32"))
         (rule "disjointDefinition" (formula "31"))
          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "57")))
         (rule "true_left" (formula "31"))
         (rule "disjointDefinition" (formula "30"))
          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "55")))
         (rule "true_left" (formula "30"))
         (rule "disjointDefinition" (formula "29"))
          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "53")))
         (rule "true_left" (formula "29"))
         (rule "disjointDefinition" (formula "27"))
          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "50")))
         (rule "true_left" (formula "27"))
         (rule "disjointDefinition" (formula "27"))
          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "50")))
         (rule "true_left" (formula "27"))
         (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "26"))
         (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "26"))
         (rule "distributeIntersection" (formula "27") (term "0"))
         (rule "distributeIntersection" (formula "28") (term "0"))
         (rule "distributeIntersection" (formula "27") (term "0,0"))
         (rule "distributeIntersection" (formula "27") (term "1,0"))
         (rule "unionEqualsEmpty" (formula "28"))
         (rule "andLeft" (formula "28"))
         (rule "distributeIntersection" (formula "27") (term "0,0,0"))
         (rule "distributeIntersection" (formula "27") (term "1,0,0"))
         (rule "distributeIntersection" (formula "27") (term "0,1,0"))
         (rule "distributeIntersection" (formula "27") (term "1,1,0"))
         (rule "distributeIntersection" (formula "28") (term "0"))
         (rule "distributeIntersection" (formula "29") (term "0"))
         (rule "unionEqualsEmpty" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "distributeIntersection" (formula "29") (term "0,0"))
         (rule "distributeIntersection" (formula "29") (term "1,0"))
         (rule "distributeIntersection" (formula "30") (term "0,0"))
         (rule "distributeIntersection" (formula "30") (term "1,0"))
         (rule "unionEqualsEmpty" (formula "28"))
         (rule "andLeft" (formula "28"))
         (rule "unionEqualsEmpty" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "unionEqualsEmpty" (formula "31"))
         (rule "andLeft" (formula "31"))
         (rule "unionEqualsEmpty" (formula "33"))
         (rule "andLeft" (formula "33"))
         (rule "unionEqualsEmpty" (formula "30"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "andLeft" (formula "30"))
         (rule "notLeft" (formula "30"))
         (rule "notLeft" (formula "30"))
         (rule "eqSymm" (formula "38"))
         (rule "eqSymm" (formula "37"))
         (rule "unionEqualsEmpty" (formula "29"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "andLeft" (formula "29"))
         (rule "notLeft" (formula "29"))
         (rule "notLeft" (formula "29"))
         (rule "eqSymm" (formula "37"))
         (rule "eqSymm" (formula "36"))
         (rule "unionEqualsEmpty" (formula "27"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "eqSymm" (formula "36"))
         (rule "eqSymm" (formula "35"))
         (rule "unionEqualsEmpty" (formula "27"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "eqSymm" (formula "35"))
         (rule "eqSymm" (formula "34"))
         (rule "unionEqualsEmpty" (formula "28"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "andLeft" (formula "28"))
         (rule "notLeft" (formula "28"))
         (rule "notLeft" (formula "28"))
         (rule "eqSymm" (formula "34"))
         (rule "eqSymm" (formula "33"))
         (rule "unionEqualsEmpty" (formula "27"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "eqSymm" (formula "33"))
         (rule "eqSymm" (formula "32"))
         (rule "unionEqualsEmpty" (formula "28"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "andLeft" (formula "28"))
         (rule "notLeft" (formula "28"))
         (rule "notLeft" (formula "28"))
         (rule "eqSymm" (formula "32"))
         (rule "eqSymm" (formula "31"))
         (rule "unionEqualsEmpty" (formula "27"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "eqSymm" (formula "31"))
         (rule "eqSymm" (formula "30"))
         (rule "commuteUnion" (formula "26") (term "0,0,1"))
         (rule "commuteUnion" (formula "26") (term "1,1,1"))
         (rule "commuteUnion_2" (formula "26") (term "0,1"))
         (rule "commuteUnion" (formula "26") (term "0,0,1"))
         (rule "commuteUnion_2" (formula "26") (term "1"))
         (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "9"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "9"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "9"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "7"))
         (rule "notLeft" (formula "7"))
         (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "85"))
         (rule "replace_known_right" (formula "85") (term "0,1,0,0") (ifseqformula "34"))
          (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
         (rule "closeTrue" (formula "85"))
      )
   )
)
)
}
