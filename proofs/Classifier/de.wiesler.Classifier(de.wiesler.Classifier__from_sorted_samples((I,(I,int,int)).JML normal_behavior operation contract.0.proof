\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Apr 16 17:57:28 CEST 2023
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , finalFields-finalFields\\:immutable
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Sun Apr 16 17:57:28 CEST 2023
contract=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:from_sorted_samples([I,[I,int,int)].JML normal_behavior operation contract.0
name=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:from_sorted_samples([I,[I,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "3" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "63662")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "translateJavaMod" (formula "1") (term "0,0,1,1,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,1,0,1,1,1,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,0,0,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "15"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "15"))
(rule "eqSymm" (formula "17") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "17") (term "0,0,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "17") (term "1,0,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "17") (term "0,0,1,1,1,1,1,0,0,0,1"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "15"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "16"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "7") (term "1,1,0,0"))
(rule "mul_literals" (formula "7") (term "1,1,1,0,0"))
(rule "polySimp_elimSub" (formula "10") (term "1"))
(rule "mul_literals" (formula "10") (term "1,1"))
(rule "polySimp_addComm0" (formula "7") (term "0,2,1,1,0"))
(rule "polySimp_addComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_addComm0" (formula "10") (term "1"))
(rule "disjointDefinition" (formula "8"))
 (builtin "One Step Simplification" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "eqSymm" (formula "14"))
(rule "translateJavaShiftLeftIntConstant" (formula "11") (term "1"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "inEqSimp_commuteLeq" (formula "11"))
(rule "assignment" (formula "17") (term "1"))
 (builtin "One Step Simplification" (formula "17"))
(rule "applyEq" (formula "6") (term "0") (ifseqformula "12"))
(rule "inEqSimp_commuteGeq" (formula "6"))
(rule "javaShiftLeftIntDef" (formula "11") (term "0"))
(rule "elementOfUnion" (formula "17") (term "0,0,0,0,1,0,1"))
 (builtin "One Step Simplification" (formula "17"))
(rule "shiftLeftDef" (formula "11") (term "0,0"))
(rule "polySimp_elimNeg" (formula "11") (term "1,1,0,0"))
(rule "shiftLeftPositiveShiftDef" (formula "11") (term "2,0,0"))
(rule "polySimp_elimOneLeft0" (formula "11") (term "2,0,0"))
(rule "shiftRightPositiveShiftDef" (formula "11") (term "1,0,0"))
(rule "expand_moduloInteger" (formula "11") (term "0"))
(rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0"))
(rule "replace_int_RANGE" (formula "11") (term "1,1,0"))
(rule "replace_int_MIN" (formula "11") (term "0,0"))
(rule "commute_and" (formula "7") (term "0,0"))
(rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_from_sorted_samples,savedHeapBefore_from_sorted_samples,_num_bucketsBefore_from_sorted_samples,_num_splittersBefore_from_sorted_samples,_splittersBefore_from_sorted_samples,_treeBefore_from_sorted_samples"))
 (builtin "One Step Simplification" (formula "17"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "use_equal_buckets"))
(rule "compound_greater_equal_than_comparison_1" (formula "17") (term "1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "x"))
(rule "remove_parentheses_right" (formula "17") (term "1"))
(rule "compound_subtraction_1" (formula "17") (term "1") (inst "#v=x_1"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "x_1"))
(rule "assignmentSubtractionInt" (formula "17") (term "1"))
 (builtin "One Step Simplification" (formula "17"))
(rule "translateJavaSubInt" (formula "17") (term "0,1,0"))
(rule "polySimp_elimSub" (formula "17") (term "0,1,0"))
(rule "mul_literals" (formula "17") (term "1,0,1,0"))
(rule "polySimp_addComm0" (formula "17") (term "0,1,0"))
(rule "assignmentSubtractionInt" (formula "17") (term "1"))
 (builtin "One Step Simplification" (formula "17"))
(rule "translateJavaSubInt" (formula "17") (term "0,1,0"))
(rule "polySimp_elimSub" (formula "17") (term "0,1,0"))
(rule "greater_equal_than_comparison_simple" (formula "17") (term "1"))
 (builtin "One Step Simplification" (formula "17"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "log_buckets"))
(rule "compound_addition_1" (formula "17") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "x_2"))
 (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_log2,result_21,exc_25") (contract "de.wiesler.Constants[de.wiesler.Constants::log2(int)].JML normal_behavior operation contract.0"))
(branch "Post (log2)"
    (builtin "One Step Simplification" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "assignment" (formula "19") (term "1"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "assignmentAdditionInt" (formula "19") (term "1"))
    (builtin "One Step Simplification" (formula "19"))
    (builtin "Block Contract (Internal)" (formula "19") (newnames "result_22,exc_26,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
   (branch "Validity"
       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "4")) (ifInst ""  (formula "1")))
       (builtin "One Step Simplification" (formula "20"))
      (rule "true_left" (formula "16"))
      (rule "translateJavaAddInt" (formula "19") (term "0,0,0"))
      (rule "eqSymm" (formula "19") (term "0,0,1,0,1"))
      (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "exc_26_1"))
      (rule "assignment" (formula "19") (term "1"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "emptyStatement" (formula "19") (term "1"))
      (rule "emptyStatement" (formula "19") (term "1"))
      (rule "tryEmpty" (formula "19") (term "1"))
      (rule "blockEmptyLabel" (formula "19") (term "1"))
      (rule "blockEmpty" (formula "19") (term "1"))
      (rule "methodCallEmpty" (formula "19") (term "1"))
      (rule "emptyModality" (formula "19") (term "1"))
      (rule "andRight" (formula "19"))
      (branch "Case 1"
         (rule "andRight" (formula "19"))
         (branch "Case 1"
             (builtin "SMTRule")
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "19"))
            (rule "cut" (inst "cutFormula=geq(result_21<<origin(\"User_Interaction @ node 1431 (cut)\",\"[]\")>>,
    de.wiesler.Constants.LOG_MAX_BUCKETS)<<origin(\"User_Interaction @ node 1431 (cut)\",\"[]\")>>") (userinteraction))
            (branch "CUT: result_21 >= 7 TRUE"
               (rule "Definition_axiom_for_isLog2Of_in_de_wiesler_Constants" (formula "15") (term "0") (userinteraction))
                (builtin "One Step Simplification" (formula "15") (userinteraction))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "impLeft" (formula "18") (userinteraction))
               (branch "Case 1"
                  (rule "notRight" (formula "19"))
                  (rule "inEqSimp_leqRight" (formula "23"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,1,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                  (rule "mod_axiom" (formula "14") (term "1,2,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                  (rule "div_literals" (formula "14") (term "0,1,1,2,1,0,0,1,0"))
                  (rule "mul_literals" (formula "14") (term "1,1,2,1,0,0,1,0"))
                  (rule "add_literals" (formula "14") (term "1,2,1,0,0,1,0"))
                  (rule "pow_literals" (formula "14") (term "2,1,0,0,1,0"))
                  (rule "mod_axiom" (formula "14") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "div_literals" (formula "14") (term "0,1,1,0,0,1,0,0,1,0"))
                  (rule "times_zero_2" (formula "14") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "add_zero_right" (formula "14") (term "1,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "14") (term "0,0,1,0,0,1,0"))
                  (rule "leq_literals" (formula "14") (term "0,1,0,0,1,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "add_literals" (formula "14") (term "0,0,1,0"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "qeq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "mod_axiom" (formula "13") (term "0,1,0"))
                  (rule "div_literals" (formula "13") (term "0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                  (rule "times_zero_2" (formula "13") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "13") (term "0,1,0"))
                  (rule "mul_literals" (formula "13") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "2"))
                  (rule "translateJavaShiftLeftIntConstant" (formula "18") (term "0"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                  (rule "add_literals" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
                  (rule "leq_literals" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
                  (rule "leq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "javaShiftLeftIntDef" (formula "14") (term "0"))
                  (rule "mod_axiom" (formula "14") (term "1,0,0"))
                  (rule "div_literals" (formula "14") (term "0,0,1,1,0,0"))
                  (rule "times_zero_2" (formula "14") (term "0,1,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                  (rule "add_literals" (formula "14") (term "1,0,0"))
                  (rule "shiftleft_literals" (formula "14") (term "0,0"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                  (rule "mul_literals" (formula "8") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "8"))
                  (rule "leq_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "nnf_imp2or" (formula "7") (term "0"))
                  (rule "expand_moduloInteger" (formula "14") (term "0"))
                  (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                  (rule "replace_int_MIN" (formula "14") (term "0,0"))
                  (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                  (rule "add_literals" (formula "14") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                  (rule "mod_axiom" (formula "14") (term "0,1,0"))
                  (rule "div_literals" (formula "14") (term "0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                  (rule "times_zero_2" (formula "14") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "14") (term "0,1,0"))
                  (rule "mul_literals" (formula "14") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                  (rule "mul_literals" (formula "14") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "14"))
                  (rule "leq_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "6"))
                  (rule "qeq_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "closeFalse" (formula "13"))
               )
               (branch "Case 2"
                  (rule "shiftLeftLowerBoundGe" (formula "17") (term "0") (ifseqformula "1") (userinteraction))
                  (rule "translateJavaAddInt" (formula "19") (term "1,1"))
                   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "16")))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "leq_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "polySimp_addComm0" (formula "19") (term "1,1"))
                  (rule "translateJavaShiftLeftIntConstant" (formula "17") (term "1"))
                  (rule "inEqSimp_leqRight" (formula "24"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0,1,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0,1,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                  (rule "inEqSimp_commuteGeq" (formula "18"))
                  (rule "inEqSimp_homoInEq1" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                  (rule "mod_axiom" (formula "13") (term "0,1,1,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,1,0,0,1,0"))
                  (rule "div_literals" (formula "13") (term "0,1,0,1,1,1,1,0,0,1,0"))
                  (rule "times_zero_2" (formula "13") (term "1,0,1,1,1,1,0,0,1,0"))
                  (rule "add_literals" (formula "13") (term "0,1,1,1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,1,1,0,0,1,0"))
                  (rule "pow_literals" (formula "13") (term "1,1,1,0,0,1,0"))
                  (rule "mod_axiom" (formula "13") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "div_literals" (formula "13") (term "0,1,1,0,0,1,0,0,1,0"))
                  (rule "times_zero_2" (formula "13") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "13") (term "1,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "13") (term "0,0,1,0,0,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,1,0,0,1,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "mod_axiom" (formula "13") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                  (rule "div_literals" (formula "13") (term "0,1,1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,1,0,0,1,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                  (rule "pow_literals" (formula "13") (term "1,0,0,1,0"))
                  (rule "add_literals" (formula "13") (term "0,0,1,0"))
                  (rule "mod_axiom" (formula "13") (term "0,1,0"))
                  (rule "div_literals" (formula "13") (term "0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                  (rule "times_zero_2" (formula "13") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "13") (term "0,1,0"))
                  (rule "mul_literals" (formula "13") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
                  (rule "leq_literals" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
                  (rule "leq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "javaShiftLeftIntDef" (formula "15") (term "0"))
                  (rule "mod_axiom" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                  (rule "div_literals" (formula "15") (term "0,1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                  (rule "add_literals" (formula "15") (term "1,0,0"))
                  (rule "shiftleft_literals" (formula "15") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                  (rule "mul_literals" (formula "8") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "8"))
                  (rule "leq_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                  (rule "nnf_imp2or" (formula "7") (term "0"))
                  (rule "expand_moduloInteger" (formula "16") (term "1"))
                  (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "16") (term "1,1,1"))
                  (rule "replace_int_MIN" (formula "16") (term "0,1"))
                  (rule "add_literals" (formula "16") (term "0,1,1"))
                  (rule "inEqSimp_homoInEq1" (formula "16"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "mod_axiom" (formula "16") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                  (rule "div_literals" (formula "16") (term "0,1,1,0"))
                  (rule "times_zero_2" (formula "16") (term "1,1,0"))
                  (rule "add_zero_right" (formula "16") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "17"))
                  (rule "mul_literals" (formula "16") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "16"))
                  (rule "leq_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "6"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "0,0"))
                  (rule "applyEq" (formula "7") (term "1,1,0,0,0,0") (ifseqformula "15"))
                  (rule "add_literals" (formula "7") (term "1,0,0,0,0"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "15"))
                  (rule "leq_literals" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "applyEq" (formula "17") (term "1") (ifseqformula "14"))
                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                  (rule "qeq_literals" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "14"))
                  (rule "add_literals" (formula "17") (term "1"))
                  (rule "applyEq" (formula "13") (term "1") (ifseqformula "14"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                  (rule "leq_literals" (formula "7") (term "0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "closeFalse" (formula "8"))
               )
            )
            (branch "CUT: result_21 >= 7 FALSE"
               (rule "inEqSimp_geqRight" (formula "16"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_leqRight" (formula "20"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0,1,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0,1,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "polySimp_addComm0" (formula "13") (term "0,0"))
               (rule "mod_axiom" (formula "13") (term "0,1,1,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,1,0,0,1,0"))
               (rule "div_literals" (formula "13") (term "0,1,0,1,1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "13") (term "1,0,1,1,1,1,0,0,1,0"))
               (rule "add_zero_right" (formula "13") (term "0,1,1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "13") (term "1,1,1,1,0,0,1,0"))
               (rule "pow_literals" (formula "13") (term "1,1,1,0,0,1,0"))
               (rule "mod_axiom" (formula "13") (term "1,0,0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0,1,0"))
               (rule "div_literals" (formula "13") (term "0,1,1,0,0,1,0,0,1,0"))
               (rule "times_zero_2" (formula "13") (term "1,1,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "13") (term "1,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "13") (term "0,0,1,0,0,1,0"))
               (rule "leq_literals" (formula "13") (term "0,1,0,0,1,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "mod_axiom" (formula "13") (term "1,1,0,0,1,0"))
               (rule "div_literals" (formula "13") (term "0,0,1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "13") (term "1,1,1,0,0,1,0"))
               (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
               (rule "pow_literals" (formula "13") (term "1,0,0,1,0"))
               (rule "add_literals" (formula "13") (term "0,0,1,0"))
               (rule "mod_axiom" (formula "13") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
               (rule "div_literals" (formula "13") (term "0,1,0,1,0"))
               (rule "mul_literals" (formula "13") (term "1,0,1,0"))
               (rule "add_literals" (formula "13") (term "0,1,0"))
               (rule "mul_literals" (formula "13") (term "1,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13"))
               (rule "mul_literals" (formula "13") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
         )
      )
      (branch "Case 2"
          (builtin "SMTRule")
      )
   )
   (branch "Precondition"
      (rule "andRight" (formula "19"))
      (branch "Case 1"
          (builtin "SMTRule")
      )
      (branch "Case 2"
          (builtin "SMTRule")
      )
   )
   (branch "Usage"
       (builtin "One Step Simplification" (formula "20"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
      (rule "translateJavaAddInt" (formula "16") (term "0,1,0"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "18"))
      (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "17") (term "0"))
      (rule "elim_double_block_2" (formula "22") (term "1"))
      (rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_3"))
      (rule "inequality_comparison_simple" (formula "22") (term "1"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "replace_known_left" (formula "22") (term "0,0,1,0") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "arrayLengthNotNegative" (formula "12") (term "0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "qeq_literals" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "arrayLengthIsAShort" (formula "12") (term "0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "arrayLengthNotNegative" (formula "13") (term "0"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
      (rule "qeq_literals" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "arrayLengthIsAShort" (formula "13") (term "0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "ifSplit" (formula "22"))
      (branch "if x_3 true"
          (builtin "One Step Simplification" (formula "23"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_3 false"
          (builtin "One Step Simplification" (formula "23"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "blockEmpty" (formula "22") (term "1"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "actual_num_buckets"))
         (rule "assignmentShiftLeftInt" (formula "22") (term "1"))
          (builtin "One Step Simplification" (formula "22"))
          (builtin "Block Contract (Internal)" (formula "22") (newnames "result_23,exc_27,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
         (branch "Validity"
             (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "4")) (ifInst ""  (formula "1")))
             (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "19"))
            (rule "eqSymm" (formula "22") (term "0,0,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,1,0,0,1"))
            (rule "variableDeclarationAssign" (formula "22") (term "1"))
            (rule "variableDeclaration" (formula "22") (term "1") (newnames "exc_27_1"))
            (rule "assignment" (formula "22") (term "1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "emptyStatement" (formula "22") (term "1"))
            (rule "emptyStatement" (formula "22") (term "1"))
            (rule "tryEmpty" (formula "22") (term "1"))
            (rule "blockEmptyLabel" (formula "22") (term "1"))
            (rule "blockEmpty" (formula "22") (term "1"))
            (rule "methodCallEmpty" (formula "22") (term "1"))
            (rule "emptyModality" (formula "22") (term "1"))
            (rule "andRight" (formula "22"))
            (branch "Case 1"
               (rule "andRight" (formula "22"))
               (branch "Case 1"
                   (builtin "SMTRule")
               )
               (branch "Case 2"
                  (rule "andRight" (formula "22"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "shiftLeftUpperBoundLe" (formula "22") (term "1") (ifseqformula "17") (userinteraction))
                     (rule "leq_literals" (formula "1") (term "1,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "translateJavaShiftLeftIntConstant" (formula "1") (term "1,1"))
                     (rule "inEqSimp_geqRight" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "2") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0"))
                     (rule "add_literals" (formula "19") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                     (rule "times_zero_2" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                     (rule "mod_axiom" (formula "13") (term "1,0,0,1,0,0,1,0"))
                     (rule "div_literals" (formula "13") (term "0,0,1,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "times_zero_2" (formula "13") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "13") (term "1,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,1,0,0,1,0"))
                     (rule "leq_literals" (formula "13") (term "0,1,0,0,1,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "14"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "mod_axiom" (formula "13") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                     (rule "div_literals" (formula "13") (term "0,1,1,1,0,0,1,0"))
                     (rule "times_zero_2" (formula "13") (term "1,1,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "13") (term "1,1,0,0,1,0"))
                     (rule "pow_literals" (formula "13") (term "1,0,0,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,1,0"))
                     (rule "mod_axiom" (formula "13") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                     (rule "div_literals" (formula "13") (term "0,1,0,1,0"))
                     (rule "times_zero_2" (formula "13") (term "1,0,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,1,0"))
                     (rule "mul_literals" (formula "13") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0"))
                     (rule "mul_literals" (formula "2") (term "1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                     (rule "mul_literals" (formula "13") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                     (rule "leq_literals" (formula "7") (term "0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "javaShiftLeftIntConstantDef" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1"))
                     (rule "div_literals" (formula "2") (term "0,1,1,0,0,1"))
                     (rule "times_zero_2" (formula "2") (term "1,1,0,0,1"))
                     (rule "add_zero_right" (formula "2") (term "1,0,0,1"))
                     (rule "shiftleft_literals" (formula "2") (term "0,0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                     (rule "mul_literals" (formula "9") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "9"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "nnf_imp2or" (formula "8") (term "0"))
                     (rule "expand_moduloInteger" (formula "2") (term "1,1"))
                     (rule "replace_int_RANGE" (formula "2") (term "1,1,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,1"))
                     (rule "replace_int_MIN" (formula "2") (term "0,1,1"))
                     (rule "add_literals" (formula "2") (term "0,1,1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                     (rule "mod_axiom" (formula "2") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1"))
                     (rule "div_literals" (formula "2") (term "0,1,1,0,1"))
                     (rule "times_zero_2" (formula "2") (term "1,1,0,1"))
                     (rule "add_zero_right" (formula "2") (term "1,0,1"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                     (rule "add_literals" (formula "2") (term "0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "2") (term "0,1"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "notLeft" (formula "2"))
                     (rule "inEqSimp_geqRight" (formula "19"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "1"))
                     (rule "leq_literals" (formula "18") (term "0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "nnf_notAnd" (formula "8") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                     (rule "Definition_axiom_for_isLog2Of_in_de_wiesler_Constants" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "translateJavaAddInt" (formula "15") (term "1,1,1,1"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "polySimp_addComm0" (formula "18") (term "1,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "18") (term "0,0") (ifseqformula "1"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "18") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_ltRight" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,1,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "18"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0"))
                     (rule "add_literals" (formula "18") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                     (rule "mod_axiom" (formula "12") (term "1,0,0,1,0,0,1,0"))
                     (rule "div_literals" (formula "12") (term "0,0,1,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "times_zero_2" (formula "12") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "12") (term "1,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "12") (term "0,0,1,0,0,1,0"))
                     (rule "leq_literals" (formula "12") (term "0,1,0,0,1,0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "mod_axiom" (formula "12") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
                     (rule "div_literals" (formula "12") (term "0,1,1,1,0,0,1,0"))
                     (rule "times_zero_2" (formula "12") (term "1,1,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "12") (term "1,1,0,0,1,0"))
                     (rule "pow_literals" (formula "12") (term "1,0,0,1,0"))
                     (rule "add_literals" (formula "12") (term "0,0,1,0"))
                     (rule "mod_axiom" (formula "12") (term "0,1,0"))
                     (rule "div_literals" (formula "12") (term "0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                     (rule "times_zero_2" (formula "12") (term "1,0,1,0"))
                     (rule "add_zero_right" (formula "12") (term "0,1,0"))
                     (rule "mul_literals" (formula "12") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "add_literals" (formula "12") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                     (rule "polySimp_elimOne" (formula "18") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                     (rule "mul_literals" (formula "12") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
                     (rule "leq_literals" (formula "6") (term "0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                     (rule "mul_literals" (formula "8") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "8"))
                     (rule "leq_literals" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "nnf_imp2or" (formula "7") (term "0"))
                     (rule "nnf_notAnd" (formula "7") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                     (rule "Definition_axiom_for_isLog2Of_in_de_wiesler_Constants" (formula "14") (term "0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "translateJavaAddInt" (formula "14") (term "1,1,1,1"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "polySimp_addComm0" (formula "17") (term "1,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "1"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "17") (term "0,0") (ifseqformula "20"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "17") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "20"))
                     (rule "leq_literals" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "16"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Case 2"
                (builtin "SMTRule")
            )
         )
         (branch "Precondition"
            (rule "andRight" (formula "22"))
            (branch "Case 1"
                (builtin "SMTRule")
            )
            (branch "Case 2"
                (builtin "SMTRule")
            )
         )
         (branch "Usage"
             (builtin "One Step Simplification" (formula "19"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "20"))
            (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "inEqSimp_commuteLeq" (formula "20"))
            (rule "applyEq" (formula "20") (term "0") (ifseqformula "12"))
            (rule "inEqSimp_commuteGeq" (formula "20"))
            (rule "elim_double_block_2" (formula "26") (term "1"))
            (rule "ifUnfold" (formula "26") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_4"))
            (rule "inequality_comparison_simple" (formula "26") (term "1"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "replace_known_left" (formula "26") (term "0,0,1,0") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "ifSplit" (formula "26"))
            (branch "if x_4 true"
                (builtin "One Step Simplification" (formula "27"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_4 false"
                (builtin "One Step Simplification" (formula "27"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "blockEmpty" (formula "26") (term "1"))
               (rule "for_to_while" (formula "26") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "i"))
               (rule "assignment" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "elim_double_block_3" (formula "26") (term "1"))
               (rule "loopScopeInvDia" (formula "26") (term "1") (newnames "i_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
               (branch "Invariant Initially Valid"
                  (rule "andRight" (formula "26"))
                  (branch "Case 1"
                     (rule "andRight" (formula "26"))
                     (branch "Case 1"
                        (rule "andRight" (formula "26"))
                        (branch "Case 1"
                           (rule "andRight" (formula "26"))
                           (branch "Case 1"
                              (rule "andRight" (formula "26"))
                              (branch "Case 1"
                                  (builtin "SMTRule")
                              )
                              (branch "Case 2"
                                  (builtin "SMTRule")
                              )
                           )
                           (branch "Case 2"
                               (builtin "SMTRule")
                           )
                        )
                        (branch "Case 2"
                            (builtin "SMTRule")
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "26"))
                        (branch "Case 1"
                            (builtin "SMTRule")
                        )
                        (branch "Case 2"
                            (builtin "SMTRule")
                        )
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                     (rule "mod_axiom" (formula "11") (term "0,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,1,0,0,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,0,1,1,1,1,0,0,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,0,1,1,1,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,1,1,0,0,1,0"))
                     (rule "pow_literals" (formula "11") (term "1,1,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "11") (term "1,2,1,0,0,1,0"))
                     (rule "div_literals" (formula "11") (term "0,0,1,1,2,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,2,1,0,0,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,1,2,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "11") (term "1,2,1,0,0,1,0"))
                     (rule "pow_literals" (formula "11") (term "2,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "11") (term "1,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,1,0,0,1,0,0,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "11") (term "1,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,1,0,0,1,0"))
                     (rule "leq_literals" (formula "11") (term "0,1,0,0,1,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "add_literals" (formula "11") (term "0,0,1,0"))
                     (rule "mod_axiom" (formula "11") (term "0,1,0"))
                     (rule "div_literals" (formula "11") (term "0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,0,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                     (rule "polySimp_elimOne" (formula "17") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "8"))
                     (rule "leq_literals" (formula "5") (term "0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                     (rule "mul_literals" (formula "7") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "mul_literals" (formula "7") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "7"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "19"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                     (rule "mul_literals" (formula "20") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0"))
                     (rule "add_literals" (formula "20") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "20"))
                     (rule "leq_literals" (formula "5") (term "0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "nnf_imp2or" (formula "5") (term "0"))
                     (rule "nnf_notAnd" (formula "5") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                     (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "25") (term "0"))
                     (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "2")))
                     (rule "true_left" (formula "1"))
                     (rule "Definition_axiom_for_isLog2Of_in_de_wiesler_Constants" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "translateJavaAddInt" (formula "12") (term "1,1,1,1"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "polySimp_addComm0" (formula "15") (term "1,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,1"))
                     (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "17"))
                     (rule "leq_literals" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "26") (term "0") (inst "i=i_1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "translateJavaAddInt" (formula "26") (term "0,2,1,1,0"))
                     (rule "translateJavaSubInt" (formula "26") (term "1,1,0,0"))
                     (rule "allRight" (formula "26") (inst "sk=i_1_0"))
                     (rule "impRight" (formula "26"))
                     (rule "andLeft" (formula "1"))
                     (rule "polySimp_elimSub" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "28") (term "0,2,1"))
                     (rule "polySimp_addComm0" (formula "2") (term "1"))
                     (rule "inEqSimp_leqRight" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "24"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "commute_or" (formula "10") (term "0,0"))
                     (rule "cut_direct" (formula "22") (term "0"))
                     (branch "CUT: result_22 = null TRUE"
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "cut_direct" (formula "27") (term "0"))
                        (branch "CUT: result_23 = null TRUE"
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "allLeft" (formula "10") (inst "t=i_1_0"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "10") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,0"))
                           (rule "leq_literals" (formula "10") (term "0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                           (rule "andLeft" (formula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,1,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0"))
                           (rule "add_literals" (formula "10") (term "0"))
                           (rule "leq_literals" (formula "10"))
                           (rule "closeFalse" (formula "10"))
                        )
                        (branch "CUT: result_23 = null FALSE"
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "allLeft" (formula "10") (inst "t=i_1_0"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq0" (formula "10") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                           (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1"))
                           (rule "leq_literals" (formula "10") (term "0,1"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                           (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1"))
                           (rule "leq_literals" (formula "10") (term "0,1"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch "CUT: result_22 = null FALSE"
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "cut_direct" (formula "27") (term "0"))
                        (branch "CUT: result_23 = null TRUE"
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "allLeft" (formula "10") (inst "t=i_1_0"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq0" (formula "10") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                           (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1"))
                           (rule "leq_literals" (formula "10") (term "0,1"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                           (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1"))
                           (rule "leq_literals" (formula "10") (term "0,1"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: result_23 = null FALSE"
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "allLeft" (formula "10") (inst "t=i_1_0"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "10") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq0" (formula "10") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                           (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1"))
                           (rule "leq_literals" (formula "10") (term "0,1"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "5"))
                           (rule "andLeft" (formula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,1,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "leq_literals" (formula "10"))
                           (rule "closeFalse" (formula "10"))
                        )
                     )
                  )
               )
               (branch "Invariant Preserved and Used"
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0,1,0,0,0"))
                  (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,1,0,1,0,0,0,0"))
                  (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "27") (term "0,2,1,1,0,1,0,0,0,0,1,1,0,1,1"))
                  (rule "translateJavaSubInt" (formula "27") (term "0,1,1,1,0,1,1"))
                  (rule "translateJavaSubInt" (formula "27") (term "0,2,1,1,0,1,0,0,0"))
                  (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,1,0"))
                  (rule "translateJavaSubInt" (formula "27") (term "2,2,0,0,0,0,1,0,1,1,0,1,1"))
                  (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,1,0,1,0,0,0"))
                  (rule "translateJavaSubInt" (formula "27") (term "0,1,1,0,1"))
                  (rule "impRight" (formula "27"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "34") (term "1,0,0,1,0,1,1,0,1"))
                  (rule "eqSymm" (formula "34") (term "1,0,1,0,0,0,0,0,1,1,0,1"))
                  (rule "polySimp_elimSub" (formula "34") (term "0,1,1,1,0,1"))
                  (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,0,1,0"))
                  (rule "mul_literals" (formula "34") (term "1,2,1,0,1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "34") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
                  (rule "mul_literals" (formula "34") (term "1,2,2,0,0,0,0,1,0,1,1,0,1"))
                  (rule "polySimp_elimSub" (formula "34") (term "0,2,1,1,0,1,0,0,0,0,1,1,0,1"))
                  (rule "mul_literals" (formula "34") (term "1,0,2,1,1,0,1,0,0,0,0,1,1,0,1"))
                  (rule "polySimp_elimSub" (formula "34") (term "0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "7") (term "2,1,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,2,1,0,0"))
                  (rule "polySimp_elimSub" (formula "4") (term "2,1,0,1,1,0"))
                  (rule "mul_literals" (formula "4") (term "1,2,1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "4") (term "2,1,0,0,1,0"))
                  (rule "mul_literals" (formula "4") (term "1,2,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "4") (term "0,2,1,1,0"))
                  (rule "mul_literals" (formula "4") (term "1,0,2,1,1,0"))
                  (rule "polySimp_elimSub" (formula "3") (term "2,1,0,0,1,0"))
                  (rule "mul_literals" (formula "3") (term "1,2,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "34") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "34") (term "0,2,1,1,0,1,0,0,0,0,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "34") (term "0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "2,1,0,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "2,1,0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "2,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,2,1,1,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "2,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,0,0,0,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,0,0,0,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,0,0,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,0,0,0,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "6"))
                  (rule "inEqSimp_commuteLeq" (formula "5"))
                  (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_5"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "20"))
                  (rule "inEqSimp_commuteGeq" (formula "6"))
                  (rule "elementOfArrayRange" (formula "34") (term "0,0,0,0,1,0,1,1,0,1") (inst "iv=iv"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0,1,0,0,0,0,1,0,1,1,0,1"))
                  (rule "pullOutSelect" (formula "4") (term "1,1,0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnon" (formula "4"))
                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")))
                  (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "commute_and" (formula "5") (term "0,0"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "ifElseUnfold" (formula "35") (term "1") (inst "#boolv=x_6"))
                  (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_6"))
                  (rule "less_than_comparison_simple" (formula "35") (term "1"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "ifElseSplit" (formula "35"))
                  (branch "if x_6 true"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "eval_order_array_access3" (formula "36") (term "1") (inst "#v1=x_7") (inst "#v2=x_6") (inst "#v0=x_arr"))
                     (rule "variableDeclarationAssign" (formula "36") (term "1"))
                     (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_arr"))
                     (rule "assignment" (formula "36") (term "1"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "variableDeclarationAssign" (formula "36") (term "1"))
                     (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_8"))
                     (rule "assignment" (formula "36") (term "1"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "variableDeclarationAssign" (formula "36") (term "1"))
                     (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_7"))
                     (rule "eval_order_array_access5" (formula "36") (term "1") (inst "#v1=x_9") (inst "#ar1=x_arr_1"))
                     (rule "variableDeclarationAssign" (formula "36") (term "1"))
                     (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_arr_1"))
                     (rule "assignment" (formula "36") (term "1"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "variableDeclarationAssign" (formula "36") (term "1"))
                     (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_9"))
                     (rule "assignmentSubtractionInt" (formula "36") (term "1"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "translateJavaSubInt" (formula "36") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "36") (term "0,1,0"))
                     (rule "mul_literals" (formula "36") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "36") (term "0,1,0"))
                     (rule "assignment_array2" (formula "36"))
                     (branch "Normal Execution (x_arr_1 != null)"
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "replaceKnownSelect_taclet112120_0" (formula "36") (term "0,1,0"))
                        (rule "assignment_to_primitive_array_component" (formula "36"))
                        (branch "Normal Execution (x_arr != null)"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "blockEmpty" (formula "36") (term "1"))
                           (rule "preincrement" (formula "36") (term "1"))
                           (rule "compound_int_cast_expression" (formula "36") (term "1") (inst "#v=x_6"))
                           (rule "variableDeclarationAssign" (formula "36") (term "1"))
                           (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_10"))
                           (rule "remove_parentheses_right" (formula "36") (term "1"))
                           (rule "assignmentAdditionInt" (formula "36") (term "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "translateJavaAddInt" (formula "36") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "36") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "36") (term "1"))
                           (rule "assignment" (formula "36") (term "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "blockEmpty" (formula "36") (term "1"))
                           (rule "lsContinue" (formula "36") (term "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "andRight" (formula "36"))
                           (branch "Case 1"
                              (rule "andRight" (formula "36"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "36"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "36"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "36"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "36"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "36"))
                                             (branch "Case 1"
                                                 (builtin "SMTRule")
                                             )
                                             (branch "Case 2"
                                                 (builtin "SMTRule")
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "SMTRule")
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "36") (inst "sk=j_0"))
                                          (rule "impRight" (formula "36"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "33"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "8") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEqReverse" (formula "38") (term "3,0,0") (ifseqformula "7"))
                                          (rule "applyEqReverse" (formula "38") (term "3,0,1") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                          (rule "mod_axiom" (formula "22") (term "1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,2,1,0,0,1,0"))
                                          (rule "div_literals" (formula "22") (term "0,1,1,2,1,0,0,1,0"))
                                          (rule "times_zero_2" (formula "22") (term "1,1,2,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "22") (term "1,2,1,0,0,1,0"))
                                          (rule "pow_literals" (formula "22") (term "2,1,0,0,1,0"))
                                          (rule "mod_axiom" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                          (rule "div_literals" (formula "22") (term "0,0,1,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,0,1,0"))
                                          (rule "times_zero_2" (formula "22") (term "1,1,0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,1,0,0,1,0"))
                                          (rule "leq_literals" (formula "22") (term "0,1,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                          (rule "mod_axiom" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                          (rule "div_literals" (formula "22") (term "0,1,0,1,0"))
                                          (rule "times_zero_2" (formula "22") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replaceKnownSelect_taclet112120_0" (formula "1") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000000112120_1" (formula "1") (term "2,0"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "4"))
                                          (rule "mul_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                                          (rule "mul_literals" (formula "17") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                          (rule "mul_literals" (formula "18") (term "1"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_2"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "31"))
                                          (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0"))
                                          (rule "add_literals" (formula "32") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "32"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "30"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "13")))
                                          (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                                          (rule "mul_literals" (formula "19") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1"))
                                          (rule "nnf_imp2or" (formula "9") (term "0"))
                                          (rule "nnf_imp2or" (formula "8") (term "0"))
                                          (rule "nnf_imp2or" (formula "16") (term "0"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "10") (term "0") (inst "i=i_1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "translateJavaAddInt" (formula "10") (term "0,2,1,1,0"))
                                          (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0,2,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                          (rule "Definition_axiom_for_isLog2Of_in_de_wiesler_Constants" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "translateJavaAddInt" (formula "25") (term "1,1,1,1"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "polySimp_addComm0" (formula "28") (term "1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0,1"))
                                          (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "30"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "nnf_imp2or" (formula "10") (term "0"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                          (rule "commute_or" (formula "8") (term "0,0"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "cut_direct" (formula "35") (term "0"))
                                          (branch "CUT: result_23 = null TRUE"
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "cut_direct" (formula "30") (term "0"))
                                             (branch "CUT: result_22 = null TRUE"
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "javaShiftLeftInt(1, 1 + result_21) >= 1 + j_0 TRUE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "32"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "allLeft" (formula "9") (inst "t=add(Z(neglit(1(#))), num_splitters)"))
                                                   (rule "replaceKnownSelect_taclet112120_0" (formula "9") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10000000112120_1" (formula "9") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "j_0 = i_0 TRUE"
                                                      (rule "close" (formula "41") (ifseqformula "4"))
                                                   )
                                                   (branch "j_0 = i_0 FALSE"
                                                      (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "eqSymm" (formula "40"))
                                                      (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "36"))
                                                      (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "4"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0"))
                                                      (rule "qeq_literals" (formula "36") (term "0"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "false_right" (formula "36"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                                                      (rule "mul_literals" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "allLeft" (formula "9") (inst "t=j_0"))
                                                      (rule "replaceKnownSelect_taclet10000000112120_5" (formula "9") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00010000000112120_6" (formula "9") (term "0,1"))
                                                      (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "40"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "9") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0"))
                                                      (rule "leq_literals" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                )
                                                (branch "javaShiftLeftInt(1, 1 + result_21) >= 1 + j_0 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_geqRight" (formula "35"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "34"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "5"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "CUT: result_22 = null FALSE"
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "javaShiftLeftInt(1, 1 + result_21) >= 1 + j_0 TRUE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "32"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "allLeft" (formula "9") (inst "t=add(Z(neglit(1(#))), num_splitters)"))
                                                   (rule "replaceKnownSelect_taclet112120_0" (formula "9") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10000000112120_1" (formula "9") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "j_0 = i_0 TRUE"
                                                      (rule "close" (formula "42") (ifseqformula "4"))
                                                   )
                                                   (branch "j_0 = i_0 FALSE"
                                                      (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "eqSymm" (formula "41"))
                                                      (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "36"))
                                                      (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "4"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0"))
                                                      (rule "qeq_literals" (formula "36") (term "0"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "false_right" (formula "36"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                                                      (rule "mul_literals" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "allLeft" (formula "9") (inst "t=j_0"))
                                                      (rule "replaceKnownSelect_taclet10000000112120_5" (formula "9") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01010000000112120_6" (formula "9") (term "0,1"))
                                                      (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "41"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "9") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "9"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch "javaShiftLeftInt(1, 1 + result_21) >= 1 + j_0 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_geqRight" (formula "35"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "6"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                             )
                                          )
                                          (branch "CUT: result_23 = null FALSE"
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "cut_direct" (formula "30") (term "0"))
                                             (branch "CUT: result_22 = null TRUE"
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "javaShiftLeftInt(1, 1 + result_21) >= 1 + j_0 TRUE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "32"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "allLeft" (formula "9") (inst "t=add(Z(neglit(1(#))), num_splitters)"))
                                                   (rule "replaceKnownSelect_taclet112120_0" (formula "9") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10000000112120_1" (formula "9") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "j_0 = i_0 TRUE"
                                                      (rule "close" (formula "42") (ifseqformula "4"))
                                                   )
                                                   (branch "j_0 = i_0 FALSE"
                                                      (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "eqSymm" (formula "41"))
                                                      (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "36"))
                                                      (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "4"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0"))
                                                      (rule "qeq_literals" (formula "36") (term "0"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "false_right" (formula "36"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                                                      (rule "mul_literals" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "allLeft" (formula "9") (inst "t=j_0"))
                                                      (rule "replaceKnownSelect_taclet10000000112120_5" (formula "9") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00110000000112120_6" (formula "9") (term "0,1"))
                                                      (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "41"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "9") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "9"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                                (branch "javaShiftLeftInt(1, 1 + result_21) >= 1 + j_0 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_geqRight" (formula "35"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "6"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                             )
                                             (branch "CUT: result_22 = null FALSE"
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "javaShiftLeftInt(1, 1 + result_21) >= 1 + j_0 TRUE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "32"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "allLeft" (formula "9") (inst "t=add(Z(neglit(1(#))), num_splitters)"))
                                                   (rule "replaceKnownSelect_taclet112120_0" (formula "9") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10000000112120_1" (formula "9") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "j_0 = i_0 TRUE"
                                                      (rule "close" (formula "43") (ifseqformula "4"))
                                                   )
                                                   (branch "j_0 = i_0 FALSE"
                                                      (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "eqSymm" (formula "42"))
                                                      (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "36"))
                                                      (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "4"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0"))
                                                      (rule "qeq_literals" (formula "36") (term "0"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "false_right" (formula "36"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                                                      (rule "mul_literals" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "allLeft" (formula "9") (inst "t=j_0"))
                                                      (rule "replaceKnownSelect_taclet10000000112120_5" (formula "9") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01110000000112120_6" (formula "9") (term "0,1"))
                                                      (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "9") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0"))
                                                      (rule "leq_literals" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                )
                                                (branch "javaShiftLeftInt(1, 1 + result_21) >= 1 + j_0 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_geqRight" (formula "35"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "34"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "5"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "36"))
                                       (branch "Case 1"
                                           (builtin "SMTRule")
                                       )
                                       (branch "Case 2"
                                           (builtin "SMTRule")
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "36") (term "0") (inst "i=i_1") (userinteraction))
                                    (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "9") (term "0") (inst "i=i_1") (userinteraction))
                                     (builtin "One Step Simplification" (formula "9"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "translateJavaAddInt" (formula "9") (term "0,2,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "36") (term "1,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "36") (term "0,2,1,1,0"))
                                    (rule "allRight" (formula "36") (inst "sk=i_1_0"))
                                    (rule "impRight" (formula "36"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,2,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,2,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
                                    (rule "inEqSimp_leqRight" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "applyEqReverse" (formula "1") (term "3,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEqReverse" (formula "9") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEqReverse" (formula "1") (term "3,0,1,0,0") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "inEqSimp_homoInEq0" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                    (rule "add_literals" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                    (rule "mod_axiom" (formula "23") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,1,1,0,0,1,0"))
                                    (rule "div_literals" (formula "23") (term "0,1,0,1,1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "1,0,1,1,1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "1,1,1,1,0,0,1,0"))
                                    (rule "pow_literals" (formula "23") (term "1,1,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "div_literals" (formula "23") (term "0,1,1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,1,0,0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "mod_axiom" (formula "23") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0"))
                                    (rule "div_literals" (formula "23") (term "0,1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "1,1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,0"))
                                    (rule "pow_literals" (formula "23") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                    (rule "mod_axiom" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "23") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "23") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "add_literals" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "20"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=arr_1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "4"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "14")))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_2"))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                    (rule "times_zero_1" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "32"))
                                    (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0"))
                                    (rule "add_literals" (formula "33") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "33"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "31"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "19") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                    (rule "mul_literals" (formula "19") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "9"))
                                    (rule "mul_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "20"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_3"))
                                    (rule "simplifySelectOfAnon" (formula "2"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "15")))
                                    (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "11") (term "0"))
                                    (rule "nnf_imp2or" (formula "10") (term "0"))
                                    (rule "nnf_imp2or" (formula "18") (term "0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "Definition_axiom_for_isLog2Of_in_de_wiesler_Constants" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "translateJavaAddInt" (formula "26") (term "1,1,1,1"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "polySimp_addComm0" (formula "29") (term "1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,1"))
                                    (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "31"))
                                    (rule "leq_literals" (formula "27") (term "0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                    (rule "cut_direct" (formula "36") (term "0"))
                                    (branch "CUT: result_23 = null TRUE"
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "cut_direct" (formula "31") (term "0"))
                                       (branch "CUT: result_22 = null TRUE"
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "commute_or" (formula "10") (term "0,0"))
                                          (rule "commute_or" (formula "18") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " num_splitters <= i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 1 + i_1_0 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "34"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "7"))
                                             (rule "mul_literals" (formula "22") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                             (rule "add_literals" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 TRUE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "qeq_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "34"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "allLeft" (formula "11") (inst "t=i_1_0"))
                                                (rule "replaceKnownSelect_taclet100000112120_3" (formula "11") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000100000112120_6" (formula "11") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "11") (term "1,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq0" (formula "11") (term "0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                                (rule "leq_literals" (formula "11") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "11"))
                                                (rule "allLeft" (formula "10") (inst "t=add(Z(neglit(1(#))), num_splitters)"))
                                                (rule "replaceKnownSelect_taclet112120_0" (formula "10") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100000112120_1" (formula "10") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "i_1_0 = -1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_literals" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                                (branch "i_1_0 = -1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "38"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                   (rule "add_literals" (formula "5") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "5"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0"))
                                                   (rule "qeq_literals" (formula "38") (term "0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "false_right" (formula "38"))
                                                   (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "5"))
                                                   (rule "mul_literals" (formula "21") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                   (rule "add_literals" (formula "21") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                   (rule "mul_literals" (formula "21") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "allLeft" (formula "12") (inst "t=i_1_0"))
                                                   (rule "replaceKnownSelect_taclet100000112120_3" (formula "12") (term "1,1"))
                                                   (rule "replaceKnownSelect_taclet100000112120_5" (formula "12") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet000100000112120_6" (formula "12") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000100000112120_7" (formula "12") (term "0,1"))
                                                   (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "10"))
                                                   (rule "inEqSimp_contradInEq0" (formula "12") (term "1,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "12") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "22") (term "0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "closeFalse" (formula "22"))
                                                )
                                             )
                                             (branch "javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_geqRight" (formula "38"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "38"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0"))
                                                (rule "applyEq" (formula "14") (term "1,2,1,0,1,1,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "2,1,0,1,1,0"))
                                                (rule "add_literals" (formula "14") (term "0,2,1,0,1,1,0"))
                                                (rule "add_zero_left" (formula "14") (term "2,1,0,1,1,0"))
                                                (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "0,2,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "13") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "0,2,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "12") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "36"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                (rule "add_literals" (formula "36") (term "0,0"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,0"))
                                                (rule "times_zero_1" (formula "1") (term "0"))
                                                (rule "qeq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0,0"))
                                                (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "0,2,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "13") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,0"))
                                                (rule "times_zero_1" (formula "4") (term "0"))
                                                (rule "leq_literals" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "8"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "7"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0"))
                                                (rule "add_literals" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                          )
                                          (branch " num_splitters <= i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 1 + i_1_0 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " num_splitters <= 1 + i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "inEqSimp_subsumption1" (formula "37") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "37") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "37") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_leqRight" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "add_literals" (formula "23") (term "0,0"))
                                                (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "12") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "28") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "19") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "11") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "1"))
                                                (rule "add_literals" (formula "36") (term "0,1"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "35"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                (rule "add_literals" (formula "35") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "1,0,2,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,2,1,0"))
                                                (rule "add_zero_left" (formula "4") (term "0,2,1,0"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "qeq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "12") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "11") (term "1,0,2,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,2,1,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,2,1,1,0"))
                                                (rule "add_zero_left" (formula "11") (term "0,2,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                (rule "mul_literals" (formula "21") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "31"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
                                                (rule "mul_literals" (formula "19") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                (rule "mul_literals" (formula "19") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                                (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "i_1_0 = -1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_literals" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch "i_1_0 = -1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "33"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                   (rule "add_literals" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "4"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0"))
                                                   (rule "qeq_literals" (formula "33") (term "0"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "false_right" (formula "33"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                                   (rule "mul_literals" (formula "18") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "add_literals" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "allLeft" (formula "7") (inst "t=i_1_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,1,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "7") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "7") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=arr_4"))
                                                   (rule "simplifySelectOfAnon" (formula "7"))
                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "37")) (ifInst ""  (formula "14")))
                                                   (rule "eqSymm" (formula "8"))
                                                   (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "7") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "allLeft" (formula "9") (inst "t=i_1_0"))
                                                   (rule "replaceKnownSelect_taclet10100100000112120_9" (formula "9") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10100100000112120_10" (formula "9") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (term "1,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=arr_5"))
                                                   (rule "simplifySelectOfAnon" (formula "9"))
                                                    (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "37")) (ifInst ""  (formula "14")))
                                                   (rule "elementOfArrayRangeConcrete" (formula "9") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_commuteGeq" (formula "10"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "9") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                                   (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "applyEqReverse" (formula "10") (term "1") (ifseqformula "9"))
                                                   (rule "hideAuxiliaryEq" (formula "9"))
                                                   (rule "inEqSimp_commuteLeq" (formula "9"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0"))
                                                   (rule "add_literals" (formula "9") (term "0"))
                                                   (rule "leq_literals" (formula "9"))
                                                   (rule "closeFalse" (formula "9"))
                                                )
                                             )
                                             (branch " num_splitters <= 1 + i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "allLeft" (formula "8") (inst "t=add(Z(neglit(1(#))), num_splitters)"))
                                                (rule "replaceKnownSelect_taclet112120_0" (formula "8") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100000112120_1" (formula "8") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "i_1_0 = -1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "applyEqRigid" (formula "35") (term "1,1,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "1,0"))
                                                   (rule "add_literals" (formula "35") (term "0,1,0"))
                                                   (rule "add_zero_left" (formula "35") (term "1,0"))
                                                   (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_geqRight" (formula "35"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "0"))
                                                   (rule "qeq_literals" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "applyEq" (formula "35") (term "1,1,1") (ifseqformula "2"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "1,1"))
                                                   (rule "add_literals" (formula "35") (term "0,1,1"))
                                                   (rule "add_zero_left" (formula "35") (term "1,1"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "1") (term "0,1,0,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "applyEq" (formula "3") (term "0,2,0,1,0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "mul_literals" (formula "4") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0"))
                                                   (rule "leq_literals" (formula "6"))
                                                   (rule "closeFalse" (formula "6"))
                                                )
                                                (branch "i_1_0 = -1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "34"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                   (rule "add_literals" (formula "3") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "34") (ifseqformula "3"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0"))
                                                   (rule "qeq_literals" (formula "34") (term "0"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "false_right" (formula "34"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                   (rule "mul_literals" (formula "2") (term "0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "allLeft" (formula "15") (inst "t=i_1_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq0" (formula "15") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "15") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "15"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_geqRight" (formula "35"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "16"))
                                                   (rule "mul_literals" (formula "20") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                   (rule "add_literals" (formula "20") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                   (rule "mul_literals" (formula "20") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "20"))
                                                   (rule "leq_literals" (formula "3") (term "0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "5") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: result_22 = null FALSE"
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "commute_or" (formula "10") (term "0,0"))
                                          (rule "commute_or" (formula "18") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " num_splitters <= i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 1 + i_1_0 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "34"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "7"))
                                             (rule "mul_literals" (formula "22") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                             (rule "add_literals" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 TRUE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "qeq_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "34"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "allLeft" (formula "11") (inst "t=i_1_0"))
                                                (rule "replaceKnownSelect_taclet100000112120_3" (formula "11") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet010100000112120_6" (formula "11") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "11") (term "1,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq0" (formula "11") (term "0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                                (rule "leq_literals" (formula "11") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "11"))
                                                (rule "allLeft" (formula "10") (inst "t=add(Z(neglit(1(#))), num_splitters)"))
                                                (rule "replaceKnownSelect_taclet112120_0" (formula "10") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100000112120_1" (formula "10") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "i_1_0 = -1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_literals" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                                (branch "i_1_0 = -1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "38"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                   (rule "add_literals" (formula "5") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "5"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0"))
                                                   (rule "qeq_literals" (formula "38") (term "0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "false_right" (formula "38"))
                                                   (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "5"))
                                                   (rule "mul_literals" (formula "21") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                   (rule "add_literals" (formula "21") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                   (rule "mul_literals" (formula "21") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "allLeft" (formula "12") (inst "t=i_1_0"))
                                                   (rule "replaceKnownSelect_taclet100000112120_5" (formula "12") (term "0,1"))
                                                   (rule "replaceKnownSelect_taclet100000112120_3" (formula "12") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0010100000112120_7" (formula "12") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010100000112120_6" (formula "12") (term "1,1"))
                                                   (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "22"))
                                                   (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "12") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "12"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_literals" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                             )
                                             (branch "javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_geqRight" (formula "38"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "36"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                (rule "add_literals" (formula "36") (term "0,0"))
                                                (rule "applyEq" (formula "14") (term "1,2,1,0,1,1,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "2,1,0,1,1,0"))
                                                (rule "add_literals" (formula "14") (term "0,2,1,0,1,1,0"))
                                                (rule "add_zero_left" (formula "14") (term "2,1,0,1,1,0"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,0"))
                                                (rule "times_zero_1" (formula "1") (term "0"))
                                                (rule "qeq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "0,2,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "13") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,2,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "11") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,0"))
                                                (rule "times_zero_1" (formula "4") (term "0"))
                                                (rule "leq_literals" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,2,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "11") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "36"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "8"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "7"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0"))
                                                (rule "add_literals" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                          )
                                          (branch " num_splitters <= i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 1 + i_1_0 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " num_splitters <= 1 + i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "inEqSimp_subsumption1" (formula "37") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "37") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "37") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_leqRight" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "14") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "qeq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "27") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "34"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                (rule "add_literals" (formula "34") (term "0,0"))
                                                (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                                (rule "add_literals" (formula "35") (term "0,1"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "0,0"))
                                                (rule "applyEq" (formula "3") (term "1,0,2,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,2,1,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,2,1,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,2,1,0"))
                                                (rule "applyEq" (formula "10") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "11") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "18") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "12") (term "1,1,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                (rule "applyEq" (formula "11") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0"))
                                                (rule "applyEq" (formula "11") (term "1,0,2,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,2,1,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,2,1,1,0"))
                                                (rule "add_zero_left" (formula "11") (term "0,2,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                (rule "mul_literals" (formula "21") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "31"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                                (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
                                                (rule "mul_literals" (formula "19") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                (rule "mul_literals" (formula "19") (term "1"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "i_1_0 = -1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_literals" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch "i_1_0 = -1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "33"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                   (rule "add_literals" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "4"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0"))
                                                   (rule "qeq_literals" (formula "33") (term "0"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "false_right" (formula "33"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                                   (rule "mul_literals" (formula "18") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "add_literals" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "allLeft" (formula "7") (inst "t=i_1_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,1,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "7") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "7") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=arr_4"))
                                                   (rule "simplifySelectOfAnon" (formula "7"))
                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "38")) (ifInst ""  (formula "14")))
                                                   (rule "eqSymm" (formula "8"))
                                                   (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "7") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "allLeft" (formula "9") (inst "t=i_1_0"))
                                                   (rule "replaceKnownSelect_taclet10110100000112120_9" (formula "9") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10110100000112120_10" (formula "9") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (term "1,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=arr_5"))
                                                   (rule "simplifySelectOfAnon" (formula "9"))
                                                    (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "38")) (ifInst ""  (formula "14")))
                                                   (rule "elementOfArrayRangeConcrete" (formula "9") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_commuteGeq" (formula "10"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "9") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                                   (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "applyEqReverse" (formula "10") (term "1") (ifseqformula "9"))
                                                   (rule "hideAuxiliaryEq" (formula "9"))
                                                   (rule "inEqSimp_commuteLeq" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "9"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch " num_splitters <= 1 + i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "allLeft" (formula "8") (inst "t=add(Z(neglit(1(#))), num_splitters)"))
                                                (rule "replaceKnownSelect_taclet112120_0" (formula "8") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100000112120_1" (formula "8") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "i_1_0 = -1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "1,0"))
                                                   (rule "add_literals" (formula "35") (term "0,1,0"))
                                                   (rule "add_zero_left" (formula "35") (term "1,0"))
                                                   (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_geqRight" (formula "35"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "0"))
                                                   (rule "qeq_literals" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "applyEq" (formula "35") (term "1,1,1") (ifseqformula "2"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "1,1"))
                                                   (rule "add_literals" (formula "35") (term "0,1,1"))
                                                   (rule "add_zero_left" (formula "35") (term "1,1"))
                                                   (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "35") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "3") (term "0,2,0,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "1") (term "0,1,0,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "mul_literals" (formula "4") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0"))
                                                   (rule "leq_literals" (formula "6"))
                                                   (rule "closeFalse" (formula "6"))
                                                )
                                                (branch "i_1_0 = -1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "34"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                   (rule "add_literals" (formula "3") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "34") (ifseqformula "3"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0"))
                                                   (rule "qeq_literals" (formula "34") (term "0"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "false_right" (formula "34"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                   (rule "times_zero_1" (formula "2") (term "0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "allLeft" (formula "9") (inst "t=i_1_0"))
                                                   (rule "replaceKnownSelect_taclet100000112120_3" (formula "9") (term "1,1"))
                                                   (rule "replaceKnownSelect_taclet100000112120_5" (formula "9") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet110100000112120_6" (formula "9") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1110100000112120_7" (formula "9") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (term "1,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "9") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "closeFalse" (formula "9"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_23 = null FALSE"
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "cut_direct" (formula "31") (term "0"))
                                       (branch "CUT: result_22 = null TRUE"
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "commute_or" (formula "10") (term "0,0"))
                                          (rule "commute_or" (formula "18") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " num_splitters <= i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 1 + i_1_0 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "34"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "7"))
                                             (rule "mul_literals" (formula "22") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                             (rule "add_literals" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 TRUE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "qeq_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "34"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "allLeft" (formula "11") (inst "t=i_1_0"))
                                                (rule "replaceKnownSelect_taclet100000112120_3" (formula "11") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet001100000112120_6" (formula "11") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "11") (term "1,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq0" (formula "11") (term "0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                                (rule "leq_literals" (formula "11") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "11"))
                                                (rule "allLeft" (formula "10") (inst "t=add(Z(neglit(1(#))), num_splitters)"))
                                                (rule "replaceKnownSelect_taclet112120_0" (formula "10") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100000112120_1" (formula "10") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "i_1_0 = -1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_literals" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                                (branch "i_1_0 = -1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "38"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                   (rule "add_literals" (formula "5") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "5"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0"))
                                                   (rule "qeq_literals" (formula "38") (term "0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "false_right" (formula "38"))
                                                   (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "5"))
                                                   (rule "mul_literals" (formula "21") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                   (rule "add_literals" (formula "21") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                   (rule "mul_literals" (formula "21") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "allLeft" (formula "12") (inst "t=i_1_0"))
                                                   (rule "replaceKnownSelect_taclet100000112120_5" (formula "12") (term "0,1"))
                                                   (rule "replaceKnownSelect_taclet100000112120_3" (formula "12") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0001100000112120_7" (formula "12") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet001100000112120_6" (formula "12") (term "1,1"))
                                                   (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "22"))
                                                   (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "12") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "5"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0"))
                                                   (rule "add_literals" (formula "12") (term "0"))
                                                   (rule "leq_literals" (formula "12"))
                                                   (rule "closeFalse" (formula "12"))
                                                )
                                             )
                                             (branch "javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_geqRight" (formula "38"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,0"))
                                                (rule "times_zero_1" (formula "1") (term "0"))
                                                (rule "qeq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,2,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "11") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0"))
                                                (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "0,2,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "12") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "13") (term "1,2,1,0,1,1,0") (ifseqformula "3"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,1,1,0"))
                                                (rule "add_literals" (formula "13") (term "0,2,1,0,1,1,0"))
                                                (rule "add_zero_left" (formula "13") (term "2,1,0,1,1,0"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "35"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                (rule "add_literals" (formula "35") (term "0,0"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,0"))
                                                (rule "times_zero_1" (formula "4") (term "0"))
                                                (rule "leq_literals" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "0,2,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "12") (term "2,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "8"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "7"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0"))
                                                (rule "add_literals" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                          )
                                          (branch " num_splitters <= i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 1 + i_1_0 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " num_splitters <= 1 + i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "inEqSimp_subsumption1" (formula "37") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "37") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "37") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_leqRight" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "12") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "qeq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,2,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,2,1,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,2,1,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,2,1,0"))
                                                (rule "applyEq" (formula "12") (term "1,1,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0"))
                                                (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "0,0"))
                                                (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "18") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "34"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                (rule "add_literals" (formula "34") (term "0,0"))
                                                (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                                (rule "add_literals" (formula "35") (term "0,1"))
                                                (rule "applyEq" (formula "27") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                (rule "applyEq" (formula "12") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "11") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "11") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "11") (term "1,0,2,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,2,1,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,2,1,1,0"))
                                                (rule "add_zero_left" (formula "11") (term "0,2,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "31"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                                (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
                                                (rule "mul_literals" (formula "19") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                (rule "mul_literals" (formula "19") (term "1"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "i_1_0 = -1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_literals" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch "i_1_0 = -1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "33"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                   (rule "add_literals" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "4"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0"))
                                                   (rule "qeq_literals" (formula "33") (term "0"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "false_right" (formula "33"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                                   (rule "mul_literals" (formula "18") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "add_literals" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "allLeft" (formula "7") (inst "t=i_1_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,1,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "7") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "7") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=arr_4"))
                                                   (rule "simplifySelectOfAnon" (formula "7"))
                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "38")) (ifInst ""  (formula "14")))
                                                   (rule "eqSymm" (formula "8"))
                                                   (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "7") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "allLeft" (formula "8") (inst "t=add(Z(1(#)), i_1_0)"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,1,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "8") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "8") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "8") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_5"))
                                                   (rule "simplifySelectOfAnon" (formula "8"))
                                                    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "38")) (ifInst ""  (formula "14")))
                                                   (rule "eqSymm" (formula "9"))
                                                   (rule "applyEqReverse" (formula "8") (term "1") (ifseqformula "9"))
                                                   (rule "hideAuxiliaryEq" (formula "9"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "8") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                   (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "8"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "qeq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch " num_splitters <= 1 + i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "allLeft" (formula "8") (inst "t=add(Z(neglit(1(#))), num_splitters)"))
                                                (rule "replaceKnownSelect_taclet112120_0" (formula "8") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100000112120_1" (formula "8") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "i_1_0 = -1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "36") (term "1,1,1") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "1,1"))
                                                   (rule "add_literals" (formula "36") (term "0,1,1"))
                                                   (rule "add_zero_left" (formula "36") (term "1,1"))
                                                   (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "35") (term "1,1,1") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "1,1"))
                                                   (rule "add_literals" (formula "35") (term "0,1,1"))
                                                   (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_leqRight" (formula "35"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "0"))
                                                   (rule "qeq_literals" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "applyEqRigid" (formula "3") (term "0,2,0,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "mul_literals" (formula "4") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "35") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "false_right" (formula "35"))
                                                   (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "4") (term "0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "6"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "i_1_0 = -1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "34"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                   (rule "add_literals" (formula "3") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "34") (ifseqformula "3"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0"))
                                                   (rule "qeq_literals" (formula "34") (term "0"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "false_right" (formula "34"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                   (rule "times_zero_1" (formula "2") (term "0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "allLeft" (formula "9") (inst "t=i_1_0"))
                                                   (rule "replaceKnownSelect_taclet100000112120_3" (formula "9") (term "1,1"))
                                                   (rule "replaceKnownSelect_taclet100000112120_5" (formula "9") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101100000112120_6" (formula "9") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1101100000112120_7" (formula "9") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (term "1,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "9") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "closeFalse" (formula "9"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: result_22 = null FALSE"
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "commute_or" (formula "10") (term "0,0"))
                                          (rule "commute_or" (formula "18") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " num_splitters <= i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 1 + i_1_0 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "34"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "7"))
                                             (rule "mul_literals" (formula "22") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                             (rule "add_literals" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 TRUE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "qeq_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "34"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "allLeft" (formula "11") (inst "t=i_1_0"))
                                                (rule "replaceKnownSelect_taclet100000112120_3" (formula "11") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet011100000112120_6" (formula "11") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "11") (term "1,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq0" (formula "11") (term "0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                                (rule "leq_literals" (formula "11") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "11"))
                                                (rule "allLeft" (formula "10") (inst "t=add(Z(neglit(1(#))), num_splitters)"))
                                                (rule "replaceKnownSelect_taclet112120_0" (formula "10") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100000112120_1" (formula "10") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "i_1_0 = -1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                                (branch "i_1_0 = -1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "38"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                   (rule "add_literals" (formula "5") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "5"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0"))
                                                   (rule "qeq_literals" (formula "38") (term "0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "false_right" (formula "38"))
                                                   (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "5"))
                                                   (rule "mul_literals" (formula "21") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                   (rule "add_literals" (formula "21") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                   (rule "mul_literals" (formula "21") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "allLeft" (formula "11") (inst "t=add(Z(1(#)), i_1_0)"))
                                                   (rule "replaceKnownSelect_taclet100000112120_5" (formula "11") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0011100000112120_7" (formula "11") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradEq3" (formula "11") (term "1") (ifseqformula "4"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                                   (rule "qeq_literals" (formula "11") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_contradInEq0" (formula "11") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "11") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "5"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0"))
                                                   (rule "add_zero_right" (formula "11") (term "0"))
                                                   (rule "leq_literals" (formula "11"))
                                                   (rule "closeFalse" (formula "11"))
                                                )
                                             )
                                             (branch "javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_geqRight" (formula "38"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                                (rule "applyEq" (formula "14") (term "1,2,1,0,1,1,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "2,1,0,1,1,0"))
                                                (rule "add_literals" (formula "14") (term "0,2,1,0,1,1,0"))
                                                (rule "add_zero_left" (formula "14") (term "2,1,0,1,1,0"))
                                                (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "0,2,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "12") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "14") (term "1,2,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "0,2,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "14") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,0"))
                                                (rule "times_zero_1" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "0,2,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "12") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "35"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                (rule "add_literals" (formula "35") (term "0,0"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,0"))
                                                (rule "times_zero_1" (formula "1") (term "0"))
                                                (rule "qeq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "8"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "7"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0"))
                                                (rule "add_zero_right" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                          )
                                          (branch " num_splitters <= i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 1 + i_1_0 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " num_splitters <= 1 + i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "inEqSimp_subsumption1" (formula "37") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "37") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "37") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_leqRight" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "3"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,0"))
                                                (rule "times_zero_1" (formula "3") (term "0"))
                                                (rule "qeq_literals" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "27") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "11") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0"))
                                                (rule "applyEq" (formula "12") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "34"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                (rule "add_literals" (formula "34") (term "0,0"))
                                                (rule "applyEq" (formula "10") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0,2,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,2,1,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,2,1,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,2,1,0"))
                                                (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                                (rule "add_literals" (formula "35") (term "0,1"))
                                                (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "18") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "0,0"))
                                                (rule "applyEq" (formula "11") (term "1,0,2,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,2,1,1,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,2,1,1,0"))
                                                (rule "add_zero_left" (formula "11") (term "0,2,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                (rule "mul_literals" (formula "22") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "31"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                                (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
                                                (rule "mul_literals" (formula "19") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                (rule "mul_literals" (formula "19") (term "1"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "i_1_0 = -1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch "i_1_0 = -1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "33"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                   (rule "add_literals" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "4"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0"))
                                                   (rule "qeq_literals" (formula "33") (term "0"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "false_right" (formula "33"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                                   (rule "mul_literals" (formula "18") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "add_literals" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "allLeft" (formula "7") (inst "t=i_1_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,1,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "7") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "7") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=arr_4"))
                                                   (rule "simplifySelectOfAnon" (formula "7"))
                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "39")) (ifInst ""  (formula "14")))
                                                   (rule "eqSymm" (formula "8"))
                                                   (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "7") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "allLeft" (formula "8") (inst "t=add(Z(1(#)), i_1_0)"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,1,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "8") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "8") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "8") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_5"))
                                                   (rule "simplifySelectOfAnon" (formula "8"))
                                                    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "39")) (ifInst ""  (formula "14")))
                                                   (rule "eqSymm" (formula "9"))
                                                   (rule "applyEqReverse" (formula "8") (term "1") (ifseqformula "9"))
                                                   (rule "hideAuxiliaryEq" (formula "9"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "8") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                   (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "8"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0"))
                                                   (rule "qeq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch " num_splitters <= 1 + i_1_0 & javaShiftLeftInt(1, 1 + result_21) >= 2 + i_1_0 FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "allLeft" (formula "8") (inst "t=add(Z(neglit(1(#))), num_splitters)"))
                                                (rule "replaceKnownSelect_taclet112120_0" (formula "8") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100000112120_1" (formula "8") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "i_1_0 = -1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "1,0"))
                                                   (rule "add_literals" (formula "35") (term "0,1,0"))
                                                   (rule "add_zero_left" (formula "35") (term "1,0"))
                                                   (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_geqRight" (formula "35"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "0"))
                                                   (rule "qeq_literals" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "applyEq" (formula "35") (term "1,1,1") (ifseqformula "2"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "1,1"))
                                                   (rule "add_literals" (formula "35") (term "0,1,1"))
                                                   (rule "add_zero_left" (formula "35") (term "1,1"))
                                                   (rule "applyEq" (formula "3") (term "0,2,0,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "1") (term "0,1,0,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "mul_literals" (formula "4") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0"))
                                                   (rule "leq_literals" (formula "6"))
                                                   (rule "closeFalse" (formula "6"))
                                                )
                                                (branch "i_1_0 = -1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "34"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                   (rule "add_literals" (formula "3") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "34") (ifseqformula "3"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0"))
                                                   (rule "qeq_literals" (formula "34") (term "0"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "false_right" (formula "34"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                   (rule "times_zero_1" (formula "2") (term "0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "allLeft" (formula "9") (inst "t=i_1_0"))
                                                   (rule "replaceKnownSelect_taclet100000112120_3" (formula "9") (term "1,1"))
                                                   (rule "replaceKnownSelect_taclet100000112120_5" (formula "9") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet111100000112120_6" (formula "9") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1111100000112120_7" (formula "9") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "9") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "9") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "9"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "SMTRule")
                              )
                           )
                           (branch "Case 2"
                               (builtin "SMTRule")
                           )
                        )
                        (branch "Null Reference (x_arr = null)"
                            (builtin "SMTRule")
                        )
                        (branch "Index Out of Bounds (x_arr != null, but x_8 Out of Bounds!)"
                            (builtin "SMTRule")
                        )
                     )
                     (branch "Null Reference (x_arr_1 = null)"
                         (builtin "SMTRule")
                     )
                     (branch "Index Out of Bounds (x_arr_1 != null, but x_9 Out of Bounds!)"
                         (builtin "SMTRule")
                     )
                  )
                  (branch "if x_6 false"
                      (builtin "One Step Simplification" (formula "36"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "elim_double_block_2" (formula "36") (term "1"))
                     (rule "blockBreak" (formula "36") (term "1"))
                     (rule "lsBreak" (formula "36") (term "1"))
                     (rule "assignment" (formula "36") (term "1"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "variableDeclarationAssign" (formula "36") (term "1"))
                     (rule "variableDeclaration" (formula "36") (term "1") (newnames "classifier"))
                      (builtin "Use Operation Contract" (formula "36") (newnames "heapBefore_Classifier,self_25,exc_28,heapAfter_Classifier,anon_heap_Classifier") (contract "de.wiesler.Classifier[de.wiesler.Classifier::Classifier([I,[I,int,boolean)].JML normal_behavior operation contract.0"))
                     (branch "Post (Classifier)"
                         (builtin "One Step Simplification" (formula "38"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "translateJavaMulInt" (formula "33") (term "1,1,1,0,1,0,1,1"))
                        (rule "andLeft" (formula "33"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,1,0,1,0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "andLeft" (formula "34"))
                        (rule "andLeft" (formula "35"))
                        (rule "andLeft" (formula "34"))
                        (rule "andLeft" (formula "35"))
                        (rule "andLeft" (formula "34"))
                        (rule "andLeft" (formula "37"))
                        (rule "andLeft" (formula "36"))
                        (rule "andLeft" (formula "34"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "35"))
                        (rule "notLeft" (formula "34"))
                        (rule "andLeft" (formula "39"))
                        (rule "notLeft" (formula "34"))
                        (rule "orRight" (formula "43"))
                        (rule "eqSymm" (formula "40"))
                        (rule "eqSymm" (formula "39"))
                        (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "44"))
                         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "43")))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                        (rule "assignment" (formula "50") (term "1"))
                         (builtin "One Step Simplification" (formula "50"))
                         (builtin "Block Contract (Internal)" (formula "50") (newnames "result_24,exc_29,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
                        (branch "Validity"
                            (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "13")))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "eqSymm" (formula "51") (term "0,0,1,0,1"))
                           (rule "variableDeclarationAssign" (formula "51") (term "1"))
                           (rule "variableDeclaration" (formula "51") (term "1") (newnames "exc_29_1"))
                           (rule "assignment" (formula "51") (term "1"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "emptyStatement" (formula "51") (term "1"))
                           (rule "emptyStatement" (formula "51") (term "1"))
                           (rule "tryEmpty" (formula "51") (term "1"))
                           (rule "blockEmptyLabel" (formula "51") (term "1"))
                           (rule "blockEmpty" (formula "51") (term "1"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "emptyModality" (formula "51") (term "1"))
                           (rule "andRight" (formula "51"))
                           (branch "Case 1"
                              (rule "andRight" (formula "51"))
                              (branch "Case 1"
                                  (builtin "SMTRule")
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "inEqSimp_ltRight" (formula "47"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "1,1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                 (rule "add_literals" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                 (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                 (rule "div_literals" (formula "20") (term "0,1,1,0,0,1,0,0,1,0"))
                                 (rule "times_zero_2" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,1,0,0,1,0"))
                                 (rule "leq_literals" (formula "20") (term "0,1,0,0,1,0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "mod_axiom" (formula "20") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                                 (rule "div_literals" (formula "20") (term "0,1,1,1,0,0,1,0"))
                                 (rule "times_zero_2" (formula "20") (term "1,1,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "20") (term "1,1,0,0,1,0"))
                                 (rule "pow_literals" (formula "20") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                 (rule "mod_axiom" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                 (rule "div_literals" (formula "20") (term "0,1,0,1,0"))
                                 (rule "times_zero_2" (formula "20") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                 (rule "mul_literals" (formula "20") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,0"))
                                 (rule "times_zero_1" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "29") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "29"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0"))
                                 (rule "applyEq" (formula "5") (term "1,2,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,0"))
                                 (rule "times_zero_1" (formula "3") (term "0"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "7") (term "1,2,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "31") (term "1,2,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "1,2,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "2"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1"))
                                 (rule "mul_literals" (formula "27") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                 (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "27"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                 (rule "mul_literals" (formula "14") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "26"))
                                 (rule "mul_literals" (formula "15") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                 (rule "add_literals" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                 (rule "mul_literals" (formula "15") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "nnf_imp2or" (formula "3") (term "0"))
                                 (rule "nnf_imp2or" (formula "2") (term "0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "3") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "Contract_axiom_for_classOfFirstSplitters_in_Classifier" (formula "46") (term "0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "40")) (ifInst ""  (formula "31")) (ifInst ""  (formula "43")) (ifInst ""  (formula "47")) (ifInst ""  (formula "38")))
                                 (rule "notLeft" (formula "1"))
                                 (rule "Definition_axiom_for_classOfFirstSplitters_in_de_wiesler_Classifier" (formula "47") (term "0"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "notRight" (formula "47"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEq" (formula "1") (term "1,2,1") (ifseqformula "34"))
                                 (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "34"))
                                 (rule "pullOutSelect" (formula "1") (term "2,1") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "10")))
                                 (rule "eqSymm" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "10")))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                 (rule "times_zero_2" (formula "1") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0") (ifseqformula "16"))
                                 (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "17"))
                                 (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "2,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "10")))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "eqSymm" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "10")))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0") (ifseqformula "17"))
                                 (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "2,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "Definition_axiom_for_isLog2Of_in_de_wiesler_Constants" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "translateJavaAddInt" (formula "21") (term "1,1,1,1"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "polySimp_addComm0" (formula "24") (term "1,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                 (rule "applyEq" (formula "24") (term "0,1,0,1") (ifseqformula "2"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                 (rule "mul_literals" (formula "24") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                                 (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "26"))
                                 (rule "leq_literals" (formula "22") (term "0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "39"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "translateJavaMulInt" (formula "39") (term "1,1,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "39") (term "0,2,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "39") (term "0,2,1,1,0"))
                                 (rule "andLeft" (formula "39"))
                                 (rule "andLeft" (formula "39"))
                                 (rule "andLeft" (formula "39"))
                                 (rule "andLeft" (formula "39"))
                                 (rule "andLeft" (formula "39"))
                                 (rule "andLeft" (formula "39"))
                                 (rule "andLeft" (formula "40"))
                                 (rule "andLeft" (formula "39"))
                                 (rule "notLeft" (formula "39"))
                                 (rule "notLeft" (formula "39"))
                                 (rule "eqSymm" (formula "44"))
                                 (rule "eqSymm" (formula "41"))
                                 (rule "polySimp_elimSub" (formula "44") (term "0,2,1"))
                                 (rule "mul_literals" (formula "44") (term "1,0,2,1"))
                                 (rule "polySimp_elimSub" (formula "44") (term "0,2,0"))
                                 (rule "mul_literals" (formula "44") (term "1,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "44") (term "0,2,1"))
                                 (rule "polySimp_addComm0" (formula "44") (term "0,2,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "39"))
                                 (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "35"))
                                 (rule "eqSymm" (formula "44"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "35"))
                                 (rule "applyEq" (formula "42") (term "1") (ifseqformula "35"))
                                 (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "35"))
                                 (rule "eqSymm" (formula "44"))
                                 (rule "pullOutSelect" (formula "44") (term "1") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "56")) (ifInst ""  (formula "9")))
                                 (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "56")) (ifInst ""  (formula "9")))
                                 (rule "eqSymm" (formula "44") (term "0,0"))
                                 (rule "eqSymm" (formula "45") (term "0,0"))
                                 (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "simplifySelectOfAnon" (formula "44"))
                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "56")) (ifInst ""  (formula "9")))
                                 (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "simplifySelectOfAnon" (formula "45"))
                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "56")) (ifInst ""  (formula "9")))
                                 (rule "elementOfArrayRangeConcrete" (formula "44") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "elementOfArrayRangeConcrete" (formula "45") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                 (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "6") (term "0") (inst "i=i_1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "translateJavaAddInt" (formula "6") (term "0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "6") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "6") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,2,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "6") (term "0"))
                                 (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                 (rule "Contract_axiom_for_classOfFirstSplitters_in_Tree" (formula "50") (term "0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "47")))
                                 (rule "notLeft" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                 (rule "applyEq" (formula "49") (term "1,0,1,0,0") (ifseqformula "42"))
                                 (rule "replaceKnownSelect_taclet10001112120_5" (formula "49") (term "0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001112120_7" (formula "49") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                 (rule "applyEq" (formula "49") (term "1,1,0,0") (ifseqformula "42"))
                                 (rule "replaceKnownSelect_taclet10001112120_2" (formula "49") (term "1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001112120_4" (formula "49") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "0,0"))
                                 (rule "Definition_axiom_for_classOfFirstSplitters_in_de_wiesler_Tree" (formula "51") (term "0"))
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "notRight" (formula "51"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEq" (formula "1") (term "1,2,1") (ifseqformula "43"))
                                 (rule "replaceKnownSelect_taclet10001112120_2" (formula "1") (term "2,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001112120_4" (formula "1") (term "2,1"))
                                 (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "43"))
                                 (rule "replaceKnownSelect_taclet10001112120_5" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001112120_7" (formula "1") (term "2,0"))
                                 (rule "commute_or" (formula "14") (term "0,0"))
                                 (rule "commute_or" (formula "4") (term "0,0"))
                                 (rule "Definition_axiom_for_classOf_in_de_wiesler_Classifier" (formula "2") (term "1"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "Query_axiom_for_classify_int__in_de_wiesler_Classifier" (formula "2") (term "0") (inst "classify_sk=classify_sk_0") (inst "#p0=x_1") (inst "#self=c") (inst "#res=x") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "eqSymm" (formula "2") (term "0,1"))
                                 (rule "boxToDiamond" (formula "2") (term "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "commute_or_2" (formula "51") (term "1"))
                                 (rule "commute_and" (formula "45") (term "0,0"))
                                 (rule "commute_and" (formula "46") (term "0,0"))
                                 (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_classify,savedHeapBefore_classify"))
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "variableDeclarationAssign" (formula "50") (term "1"))
                                 (rule "variableDeclaration" (formula "50") (term "1") (newnames "index_1"))
                                 (rule "methodCallWithAssignmentUnfoldTarget" (formula "50") (term "1") (inst "#v0=t"))
                                 (rule "variableDeclaration" (formula "50") (term "1") (newnames "t"))
                                 (rule "assignment_read_attribute_this_final" (formula "50"))
                                  (builtin "One Step Simplification" (formula "50"))
                                  (builtin "Use Operation Contract" (formula "50") (newnames "heapBefore_classify_0,result_25,exc_30") (contract "de.wiesler.Tree[de.wiesler.Tree::classify(int)].JML normal_behavior operation contract.0"))
                                 (branch "Post (classify)"
                                     (builtin "One Step Simplification" (formula "51"))
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "47")))
                                    (rule "translateJavaMulInt" (formula "50") (term "1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "50") (term "3,0,1,0,1"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "andLeft" (formula "51"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "andLeft" (formula "51"))
                                    (rule "andLeft" (formula "51"))
                                    (rule "eqSymm" (formula "50"))
                                    (rule "polySimp_elimSub" (formula "53") (term "3,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "52"))
                                    (rule "polySimp_mulAssoc" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "52") (term "0"))
                                    (rule "assignment" (formula "55") (term "1"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "variableDeclaration" (formula "55") (term "1") (newnames "bucket"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "50"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                    (rule "inEqSimp_exactShadow1" (formula "52") (ifseqformula "51"))
                                    (rule "greater_literals" (formula "52") (term "0"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "52") (term "0"))
                                    (rule "add_literals" (formula "52") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                    (rule "mul_literals" (formula "52") (term "1"))
                                    (rule "allLeft" (formula "7") (inst "t=Z(0(#))"))
                                    (rule "replaceKnownSelect_taclet10001112120_3" (formula "7") (term "1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10001112120_4" (formula "7") (term "1,1"))
                                    (rule "add_literals" (formula "7") (term "0,2,0,1"))
                                    (rule "replaceKnownSelect_taclet10001112120_6" (formula "7") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10001112120_7" (formula "7") (term "0,1"))
                                    (rule "leq_literals" (formula "7") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0"))
                                    (rule "mul_literals" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0"))
                                    (rule "mul_literals" (formula "7") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "17"))
                                    (rule "qeq_literals" (formula "7") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "allLeft" (formula "4") (inst "t=Z(1(#))"))
                                    (rule "replaceKnownSelect_taclet10001112120_6" (formula "4") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10001112120_7" (formula "4") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "allLeft" (formula "8") (inst "t=Z(1(#))"))
                                    (rule "replaceKnownSelect_taclet10001112120_6" (formula "8") (term "1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10001112120_7" (formula "8") (term "1,1"))
                                    (rule "leq_literals" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "add_literals" (formula "8") (term "0,2,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
                                    (rule "mul_literals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0"))
                                    (rule "mul_literals" (formula "8") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_4"))
                                    (rule "simplifySelectOfAnon" (formula "8"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "67")) (ifInst ""  (formula "13")))
                                    (rule "elementOfArrayRangeConcrete" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_commuteGeq" (formula "9"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "allLeft" (formula "4") (inst "t=Z(0(#))"))
                                    (rule "replaceKnownSelect_taclet10001112120_3" (formula "4") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10001112120_4" (formula "4") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                                    (rule "add_zero_right" (formula "18") (term "0,2,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0"))
                                    (rule "times_zero_2" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0"))
                                    (rule "mul_literals" (formula "18") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "22"))
                                    (rule "qeq_literals" (formula "18") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "replace_known_left" (formula "62") (term "0") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "62"))
                                    (rule "orRight" (formula "62"))
                                    (rule "orRight" (formula "62"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "18"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "9"))
                                    (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "ifElseUnfold" (formula "60") (term "1") (inst "#boolv=x_2"))
                                    (rule "variableDeclaration" (formula "60") (term "1") (newnames "x_7"))
                                    (rule "assignment_read_attribute_this_final" (formula "60"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "onlyCreatedObjectsAreReferencedFinal" (formula "40") (term "0") (ifseqformula "35") (ifseqformula "37"))
                                    (rule "applyEq" (formula "40") (term "1,0,1") (ifseqformula "41"))
                                    (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "41"))
                                    (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "71"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "onlyCreatedObjectsAreReferencedFinal" (formula "39") (term "0,0") (ifseqformula "35") (ifseqformula "37"))
                                    (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "66"))
                                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "64")))
                                    (rule "closeFalse" (formula "39"))
                                 )
                                 (branch "Exceptional Post (classify)"
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "47")))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "1,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "translateJavaMulInt" (formula "50") (term "1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "50") (term "3,0,1,0,1"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "andLeft" (formula "51"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "andLeft" (formula "52"))
                                    (rule "notLeft" (formula "50"))
                                    (rule "close" (formula "54") (ifseqformula "53"))
                                 )
                                 (branch "Pre (classify)"
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "47")) (ifInst ""  (formula "49")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "orRight" (formula "50"))
                                    (rule "orRight" (formula "50"))
                                    (rule "replace_known_right" (formula "53") (term "1,1") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "50")) (ifInst ""  (formula "52")))
                                    (rule "false_right" (formula "53"))
                                    (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "44") (term "0"))
                                    (rule "wellFormedAnonEQ" (formula "44") (term "1,0") (ifseqformula "32"))
                                    (rule "wellFormedAnon" (formula "44") (term "0,1,0"))
                                    (rule "replace_known_left" (formula "44") (term "0,1") (ifseqformula "45"))
                                     (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "60")) (ifInst ""  (formula "9")) (ifInst ""  (formula "8")) (ifInst ""  (formula "31")))
                                    (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "45") (term "0") (inst "i=i_1") (inst "j=j"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,0"))
                                    (rule "nnf_imp2or" (formula "45") (term "0"))
                                    (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "45") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "45") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "45") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "45") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,0"))
                                    (rule "Contract_axiom_for_classOf_in_Classifier" (formula "2") (term "0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")) (ifInst ""  (formula "34")) (ifInst ""  (formula "58")))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1"))
                                    (rule "applyEq" (formula "2") (term "3,0,0,1,1") (ifseqformula "3"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,1,0,1"))
                                    (rule "Definition_axiom_for_classOf_in_de_wiesler_Classifier" (formula "3") (term "0"))
                                    (rule "Query_axiom_for_classify_int__in_de_wiesler_Classifier" (formula "3") (term "0") (inst "classify_sk=classify_sk_1") (inst "#p0=x_1") (inst "#self=c") (inst "#res=x") (ifseqformula "35"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "eqSymm" (formula "3") (term "0,1"))
                                    (rule "applyEqRigid" (formula "3") (term "1,0,1") (ifseqformula "4"))
                                    (rule "boxToDiamond" (formula "3") (term "1"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "commute_and_2" (formula "2") (term "1"))
                                    (rule "commute_or" (formula "46") (term "0,0,1,0"))
                                    (rule "commute_and" (formula "2") (term "0,1"))
                                    (rule "methodBodyExpand" (formula "52") (term "1") (newnames "heapBefore_classify_1,savedHeapBefore_classify_0"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "variableDeclarationAssign" (formula "52") (term "1"))
                                    (rule "variableDeclaration" (formula "52") (term "1") (newnames "index_2"))
                                    (rule "allLeft" (formula "8") (inst "t=Z(0(#))"))
                                    (rule "replaceKnownSelect_taclet10001112120_3" (formula "8") (term "1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10001112120_4" (formula "8") (term "1,1"))
                                    (rule "leq_literals" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "add_literals" (formula "8") (term "0,2,0,1"))
                                    (rule "replaceKnownSelect_taclet10001112120_6" (formula "8") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10001112120_7" (formula "8") (term "0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
                                    (rule "times_zero_2" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0"))
                                    (rule "mul_literals" (formula "8") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "allLeft" (formula "5") (inst "t=Z(1(#))"))
                                    (rule "replaceKnownSelect_taclet10001112120_6" (formula "5") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10001112120_7" (formula "5") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "allLeft" (formula "9") (inst "t=Z(1(#))"))
                                    (rule "replaceKnownSelect_taclet10001112120_6" (formula "9") (term "1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10001112120_7" (formula "9") (term "1,1"))
                                    (rule "add_literals" (formula "9") (term "0,2,0,1"))
                                    (rule "leq_literals" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "9") (term "0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0"))
                                    (rule "mul_literals" (formula "9") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "19"))
                                    (rule "qeq_literals" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=arr_4"))
                                    (rule "simplifySelectOfAnon" (formula "9"))
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "65")) (ifInst ""  (formula "14")))
                                    (rule "elementOfArrayRangeConcrete" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_commuteGeq" (formula "10"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                    (rule "allLeft" (formula "5") (inst "t=Z(0(#))"))
                                    (rule "replaceKnownSelect_taclet10001112120_3" (formula "5") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10001112120_4" (formula "5") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "19") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "add_zero_right" (formula "19") (term "0,2,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0"))
                                    (rule "times_zero_2" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0"))
                                    (rule "mul_literals" (formula "19") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "23"))
                                    (rule "qeq_literals" (formula "19") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0"))
                                    (rule "qeq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "10"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "18"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "all_pull_out3" (formula "50") (term "0"))
                                    (rule "shift_paren_or" (formula "50") (term "0,0"))
                                    (rule "shift_paren_or" (formula "50") (term "0,0,0"))
                                    (rule "onlyCreatedObjectsAreReferencedFinal" (formula "41") (term "0") (ifseqformula "36") (ifseqformula "38"))
                                    (rule "applyEq" (formula "41") (term "1,0,1") (ifseqformula "42"))
                                    (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "42"))
                                    (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "onlyCreatedObjectsAreReferencedFinal" (formula "40") (term "0,0") (ifseqformula "36") (ifseqformula "38"))
                                    (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "61"))
                                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "62")))
                                    (rule "closeFalse" (formula "40"))
                                 )
                                 (branch "Null reference (t = null)"
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "52")))
                                    (rule "closeTrue" (formula "50"))
                                 )
                              )
                           )
                           (branch "Case 2"
                               (builtin "SMTRule")
                           )
                        )
                        (branch "Precondition"
                           (rule "andRight" (formula "50"))
                           (branch "Case 1"
                               (builtin "SMTRule")
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "wellFormedAnonEQ" (formula "50") (ifseqformula "33"))
                              (rule "wellFormedAnon" (formula "50") (term "0"))
                              (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "9")) (ifInst ""  (formula "32")))
                              (rule "closeTrue" (formula "50"))
                           )
                        )
                        (branch "Usage"
                            (builtin "One Step Simplification" (formula "51"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,1,1") (ifseqformula "33"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,0,1") (ifseqformula "33"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "andLeft" (formula "43"))
                           (rule "andLeft" (formula "43"))
                           (rule "andLeft" (formula "45"))
                           (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "43"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "commute_or_2" (formula "45") (term "1"))
                           (rule "shift_paren_or" (formula "45"))
                           (rule "shift_paren_or" (formula "45") (term "0"))
                           (rule "elim_double_block_2" (formula "53") (term "1"))
                           (rule "ifUnfold" (formula "53") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_7"))
                           (rule "inequality_comparison_simple" (formula "53") (term "1"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "replace_known_left" (formula "53") (term "0,0,1,0") (ifseqformula "43"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "ifSplit" (formula "53"))
                           (branch "if x_7 true"
                               (builtin "One Step Simplification" (formula "54"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_7 false"
                               (builtin "One Step Simplification" (formula "54"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "blockEmpty" (formula "53") (term "1"))
                              (rule "methodCallReturn" (formula "53") (term "1"))
                              (rule "assignment" (formula "53") (term "1"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "methodCallEmpty" (formula "53") (term "1"))
                              (rule "tryEmpty" (formula "53") (term "1"))
                              (rule "emptyModality" (formula "53") (term "1"))
                              (rule "andRight" (formula "53"))
                              (branch "Case 1"
                                 (rule "impRight" (formula "53"))
                                 (rule "andRight" (formula "54"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "54"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "54"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "54"))
                                          (branch "Case 1"
                                              (builtin "SMTRule")
                                          )
                                          (branch "Case 2"
                                              (builtin "SMTRule")
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "54"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "42")))
                                              (builtin "SMTRule")
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "54"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "54"))
                                                (branch "Case 1"
                                                    (builtin "SMTRule")
                                                )
                                                (branch "Case 2"
                                                    (builtin "SMTRule")
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "54"))
                                                (branch "Case 1"
                                                    (builtin "One Step Simplification" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "ifthenelse_split" (formula "41") (term "0") (userinteraction))
                                                   (branch "-1 + num_buckets + num_splitters * -1 >= 5 TRUE"
                                                      (rule "true_left" (formula "1"))
                                                      (rule "eqSymm" (formula "41"))
                                                      (rule "replace_known_left" (formula "39") (term "0,0") (ifseqformula "40"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "eqSymm" (formula "39"))
                                                      (rule "inEqSimp_ltRight" (formula "50"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "31"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "1,1,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                                      (rule "add_literals" (formula "40") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                      (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                                      (rule "div_literals" (formula "20") (term "0,1,1,0,0,1,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,1,0,0,1,0"))
                                                      (rule "leq_literals" (formula "20") (term "0,1,0,0,1,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "41"))
                                                      (rule "mod_axiom" (formula "20") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                                                      (rule "div_literals" (formula "20") (term "0,1,1,1,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "20") (term "1,1,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "1,1,0,0,1,0"))
                                                      (rule "pow_literals" (formula "20") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                                      (rule "mod_axiom" (formula "20") (term "0,1,0"))
                                                      (rule "div_literals" (formula "20") (term "0,0,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                      (rule "times_zero_2" (formula "20") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "0,0"))
                                                      (rule "jmod_axiom" (formula "53") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "53"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                      (rule "mul_literals" (formula "40") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                                      (rule "mul_literals" (formula "20") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "17"))
                                                      (rule "leq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "39"))
                                                      (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0"))
                                                      (rule "qeq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "elimGcdEq" (formula "51") (inst "elimGcdRightDiv=javaShiftLeftInt(Z(1(#)), add(Z(1(#)), result_21))") (inst "elimGcdLeftDiv=jdiv(mul(javaShiftLeftInt(Z(1(#)),
                          add(Z(1(#)), result_21)),
         Z(2(#))),
     Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                      (rule "add_literals" (formula "51") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor0" (formula "51") (term "0,0,1"))
                                                      (rule "add_literals" (formula "51") (term "1,0,0,1"))
                                                      (rule "times_zero_1" (formula "51") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "51") (term "0,1,0"))
                                                      (rule "add_literals" (formula "51") (term "1,0,1,0"))
                                                      (rule "times_zero_1" (formula "51") (term "0,1,0"))
                                                      (rule "qeq_literals" (formula "51") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "51") (term "0,0"))
                                                      (rule "add_literals" (formula "51") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "51") (term "0,0"))
                                                      (rule "leq_literals" (formula "51") (term "0"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "6") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "32") (term "1,2,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEq" (formula "4") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                      (rule "applyEq" (formula "8") (term "1,2,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "2"))
                                                      (rule "eqSymm" (formula "50"))
                                                      (rule "applyEq" (formula "26") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                      (rule "eqSymm" (formula "49"))
                                                      (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "2"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                      (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "26"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "35"))
                                                      (rule "mul_literals" (formula "14") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                      (rule "add_literals" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                      (rule "leq_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "25"))
                                                      (rule "mul_literals" (formula "15") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                      (rule "add_literals" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "4") (term "0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "nnf_imp2or" (formula "12") (term "0"))
                                                      (rule "nnf_imp2or" (formula "3") (term "0"))
                                                      (rule "nnf_imp2or" (formula "2") (term "0"))
                                                      (rule "Contract_axiom_for_classOfFirstSplitters_in_Classifier" (formula "40") (term "0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0,0") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "37")) (ifInst ""  (formula "29")) (ifInst ""  (formula "45")) (ifInst ""  (formula "41")) (ifInst ""  (formula "37")))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "Definition_axiom_for_classOfFirstSplitters_in_de_wiesler_Classifier" (formula "40") (term "0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "notLeft" (formula "40"))
                                                      (rule "eqSymm" (formula "41"))
                                                      (rule "applyEq" (formula "41") (term "1,2,0") (ifseqformula "32"))
                                                      (rule "eqSymm" (formula "41"))
                                                      (rule "applyEq" (formula "41") (term "1,2,0") (ifseqformula "32"))
                                                      (rule "eqSymm" (formula "41"))
                                                      (rule "pullOutSelect" (formula "41") (term "2,0") (inst "selectSK=arr_1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "9")))
                                                      (rule "eqSymm" (formula "42"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "9")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "16"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "42") (term "2,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "41") (term "2,0") (inst "selectSK=arr_2"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "9")))
                                                      (rule "eqSymm" (formula "42"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "9")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                      (rule "times_zero_2" (formula "1") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0") (ifseqformula "16"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "42") (term "2,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "37"))
                                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "34")))
                                                      (rule "translateJavaSubInt" (formula "37") (term "0,2,0,1,0"))
                                                      (rule "translateJavaSubInt" (formula "37") (term "0,2,1,1,0"))
                                                      (rule "translateJavaMulInt" (formula "37") (term "1,1,0,0,0,0"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "notLeft" (formula "37"))
                                                      (rule "notLeft" (formula "37"))
                                                      (rule "eqSymm" (formula "42"))
                                                      (rule "polySimp_elimSub" (formula "42") (term "0,2,0"))
                                                      (rule "mul_literals" (formula "42") (term "1,0,2,0"))
                                                      (rule "eqSymm" (formula "42"))
                                                      (rule "polySimp_elimSub" (formula "42") (term "0,2,0"))
                                                      (rule "mul_literals" (formula "42") (term "1,0,2,0"))
                                                      (rule "eqSymm" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                      (rule "eqSymm" (formula "39"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,2,1"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,2,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37"))
                                                      (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "32"))
                                                      (rule "eqSymm" (formula "42"))
                                                      (rule "applyEq" (formula "47") (term "0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "37") (term "0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "40") (term "1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "38") (term "0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "32"))
                                                      (rule "eqSymm" (formula "42"))
                                                      (rule "applyEq" (formula "39") (term "1") (ifseqformula "36"))
                                                      (rule "inEqSimp_subsumption6" (formula "37") (ifseqformula "14"))
                                                      (rule "greater_literals" (formula "37") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "mul_literals" (formula "37") (term "1,0"))
                                                      (rule "leq_literals" (formula "37") (term "0"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "inEqSimp_subsumption4" (formula "37") (ifseqformula "4"))
                                                      (rule "greater_literals" (formula "37") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "mul_literals" (formula "37") (term "0,0"))
                                                      (rule "leq_literals" (formula "37") (term "0"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "elimGcdEq" (formula "37") (inst "elimGcdRightDiv=i_0") (inst "elimGcdLeftDiv=int::final(de.wiesler.Tree::final(self_25,
                                  de.wiesler.Classifier::$tree),
           de.wiesler.Tree::$num_buckets)") (inst "elimGcd=Z(2(#))"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                      (rule "add_literals" (formula "37") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "37") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "37") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,1"))
                                                      (rule "add_literals" (formula "37") (term "1,0,0,1"))
                                                      (rule "times_zero_1" (formula "37") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0"))
                                                      (rule "add_literals" (formula "37") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "37") (term "0,0"))
                                                      (rule "qeq_literals" (formula "37") (term "0"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "applyEq" (formula "39") (term "3,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "40") (term "1,0,2,0") (ifseqformula "37"))
                                                      (rule "eqSymm" (formula "40"))
                                                      (rule "applyEq" (formula "40") (term "1,0,2,0") (ifseqformula "37"))
                                                      (rule "eqSymm" (formula "40"))
                                                      (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "53")) (ifInst ""  (formula "8")))
                                                      (rule "eqSymm" (formula "41"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "53")) (ifInst ""  (formula "8")))
                                                      (rule "eqSymm" (formula "40") (term "0,0"))
                                                      (rule "eqSymm" (formula "41") (term "0,0"))
                                                      (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "simplifySelectOfAnon" (formula "40"))
                                                       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "53")) (ifInst ""  (formula "8")))
                                                      (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "simplifySelectOfAnon" (formula "41"))
                                                       (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "53")) (ifInst ""  (formula "8")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "40") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "41") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "25")))
                                                      (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "40") (term "0,1,0,0"))
                                                      (rule "qeq_literals" (formula "40") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "41") (term "0,0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "41") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "41"))
                                                      (rule "hideAuxiliaryEq" (formula "41"))
                                                      (rule "Definition_axiom_for_isLog2Of_in_de_wiesler_Constants" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "translateJavaAddInt" (formula "19") (term "1,1,1,1"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "polySimp_addComm0" (formula "22") (term "1,1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                                      (rule "applyEq" (formula "22") (term "0,1,0,1") (ifseqformula "1"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                                      (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "24"))
                                                      (rule "leq_literals" (formula "20") (term "0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "3") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "5") (term "0") (inst "i=i_1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "translateJavaAddInt" (formula "5") (term "0,2,1,1,0"))
                                                      (rule "translateJavaSubInt" (formula "5") (term "1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "5") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "0,2,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "5") (term "0"))
                                                      (rule "Definition_axiom_for_classOf_in_de_wiesler_Classifier" (formula "47") (term "0"))
                                                      (rule "Query_axiom_for_classify_int__in_de_wiesler_Classifier" (formula "47") (term "0") (inst "classify_sk=classify_sk_0") (inst "#p0=x_1") (inst "#self=c") (inst "#res=x") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "eqSymm" (formula "48"))
                                                      (rule "eqSymm" (formula "1") (term "0,1"))
                                                      (rule "boxToDiamond" (formula "1") (term "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
                                                      (rule "jdiv_axiom" (formula "55") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "15"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                                                      (rule "polyDiv_pullOut" (formula "56") (term "0") (inst "polyDivCoeff=i_0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,2,0"))
                                                      (rule "equal_literals" (formula "56") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "polySimp_homoEq" (formula "56"))
                                                      (rule "polySimp_pullOutFactor0" (formula "56") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "56") (term "1,0,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "56") (term "0,0,0,1,0"))
                                                      (rule "div_literals" (formula "56") (term "0,0,1,0"))
                                                      (rule "add_zero_left" (formula "56") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "56") (term "0"))
                                                      (rule "add_literals" (formula "56") (term "1,0"))
                                                      (rule "times_zero_1" (formula "56") (term "0"))
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "closeTrue" (formula "56"))
                                                   )
                                                   (branch "-1 + num_buckets + num_splitters * -1 >= 5 FALSE"
                                                      (rule "shiftLeftSplitTwo" (formula "41") (term "0") (userinteraction))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "eqSymm" (formula "41"))
                                                      (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "47"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "eqSymm" (formula "39"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "notLeft" (formula "39"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "39") (term "1,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "39") (term "0,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "39") (term "1,0,0,1"))
                                                      (rule "eqSymm" (formula "39") (term "1"))
                                                      (rule "inEqSimp_geqRight" (formula "47"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "51"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "41") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                                      (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "div_literals" (formula "21") (term "0,0,1,1,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "21") (term "1,1,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "21") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,1,0,0,1,0"))
                                                      (rule "leq_literals" (formula "21") (term "0,1,0,0,1,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "41"))
                                                      (rule "mod_axiom" (formula "21") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                                                      (rule "div_literals" (formula "21") (term "0,1,1,1,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "21") (term "1,1,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "21") (term "1,1,0,0,1,0"))
                                                      (rule "pow_literals" (formula "21") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                      (rule "mod_axiom" (formula "21") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                                      (rule "div_literals" (formula "21") (term "0,1,0,1,0"))
                                                      (rule "times_zero_2" (formula "21") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "21") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "add_literals" (formula "21") (term "0,0"))
                                                      (rule "jmod_axiom" (formula "54") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "54") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "54"))
                                                      (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                                      (rule "mul_literals" (formula "21") (term "1"))
                                                      (rule "inEqSimp_subsumption0" (formula "40") (term "1,0") (ifseqformula "27"))
                                                      (rule "leq_literals" (formula "40") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "18"))
                                                      (rule "leq_literals" (formula "15") (term "0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "10") (term "1,2,1,0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "40") (term "0,1") (ifseqformula "4"))
                                                      (rule "eqSymm" (formula "40") (term "1"))
                                                      (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "4"))
                                                      (rule "eqSymm" (formula "54"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "6") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "30") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                      (rule "applyEq" (formula "33") (term "1,2,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEq" (formula "4") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                      (rule "eqSymm" (formula "51"))
                                                      (rule "applyEq" (formula "38") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                      (rule "mul_literals" (formula "28") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                      (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "28"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                      (rule "mul_literals" (formula "15") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                      (rule "add_literals" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "27"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "28"))
                                                      (rule "mul_literals" (formula "17") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                      (rule "add_literals" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                      (rule "mul_literals" (formula "17") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "17"))
                                                      (rule "leq_literals" (formula "6") (term "0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "15") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                      (rule "add_literals" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "17"))
                                                      (rule "leq_literals" (formula "15") (term "0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "nnf_imp2or" (formula "14") (term "0"))
                                                      (rule "nnf_imp2or" (formula "5") (term "0"))
                                                      (rule "nnf_imp2or" (formula "4") (term "0"))
                                                      (rule "Contract_axiom_for_classOfFirstSplitters_in_Classifier" (formula "42") (term "0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "1,0,0") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "39")) (ifInst ""  (formula "32")) (ifInst ""  (formula "48")) (ifInst ""  (formula "43")) (ifInst ""  (formula "39")))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "39"))
                                                       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "44")))
                                                      (rule "translateJavaSubInt" (formula "39") (term "0,2,0,1,0"))
                                                      (rule "translateJavaSubInt" (formula "39") (term "0,2,1,1,0"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "andLeft" (formula "40"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "notLeft" (formula "39"))
                                                      (rule "notLeft" (formula "39"))
                                                      (rule "eqSymm" (formula "44"))
                                                      (rule "eqSymm" (formula "41"))
                                                      (rule "polySimp_elimSub" (formula "44") (term "0,2,0"))
                                                      (rule "mul_literals" (formula "44") (term "1,0,2,0"))
                                                      (rule "eqSymm" (formula "44"))
                                                      (rule "polySimp_elimSub" (formula "44") (term "0,2,0"))
                                                      (rule "mul_literals" (formula "44") (term "1,0,2,0"))
                                                      (rule "eqSymm" (formula "44"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "0,2,1"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "0,2,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "39"))
                                                      (rule "applyEq" (formula "40") (term "0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "43") (term "3,0") (ifseqformula "41"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "39") (term "0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "44") (term "1,0,2,0") (ifseqformula "41"))
                                                      (rule "eqSymm" (formula "44"))
                                                      (rule "applyEq" (formula "42") (term "1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "41") (term "1") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "43") (term "3,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "44") (term "1,0,2,0") (ifseqformula "41"))
                                                      (rule "eqSymm" (formula "44"))
                                                      (rule "applyEq" (formula "44") (term "1,0,2,0") (ifseqformula "38"))
                                                      (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "16"))
                                                      (rule "leq_literals" (formula "39") (term "0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "inEqSimp_subsumption0" (formula "39") (ifseqformula "6"))
                                                      (rule "leq_literals" (formula "39") (term "0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "pullOutSelect" (formula "42") (term "1") (inst "selectSK=arr_1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                                                      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                                                      (rule "eqSymm" (formula "43") (term "0,0"))
                                                      (rule "eqSymm" (formula "42") (term "0,0"))
                                                      (rule "replace_known_right" (formula "42") (term "0,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "simplifySelectOfAnon" (formula "42"))
                                                       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                                                      (rule "replace_known_right" (formula "43") (term "0,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "simplifySelectOfAnon" (formula "43"))
                                                       (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "42") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "28")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "43") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "42") (term "0,0,0"))
                                                      (rule "add_literals" (formula "42") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "42") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "42"))
                                                      (rule "hideAuxiliaryEq" (formula "42"))
                                                      (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "42") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "42") (term "0,1,0,0"))
                                                      (rule "qeq_literals" (formula "42") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "Definition_axiom_for_classOfFirstSplitters_in_de_wiesler_Classifier" (formula "46") (term "0"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "notLeft" (formula "46"))
                                                      (rule "eqSymm" (formula "47"))
                                                      (rule "applyEq" (formula "47") (term "1,2,1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "47") (term "1,2,0") (ifseqformula "35"))
                                                      (rule "pullOutSelect" (formula "47") (term "2,1") (inst "selectSK=arr_2"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "11")))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                      (rule "times_zero_2" (formula "1") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "48") (term "2,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "47") (term "2,0") (inst "selectSK=arr_3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "11")))
                                                      (rule "eqSymm" (formula "48"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "48") (term "2,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "47"))
                                                      (rule "Definition_axiom_for_isLog2Of_in_de_wiesler_Constants" (formula "22") (term "0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "translateJavaAddInt" (formula "22") (term "1,1,1,1"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "1,1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "25") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                      (rule "applyEq" (formula "25") (term "0,1,0,1") (ifseqformula "3"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                                      (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "27"))
                                                      (rule "leq_literals" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "newSym_eq" (formula "38") (inst "l=l_0") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                                      (rule "times_zero_1" (formula "38") (term "1,1"))
                                                      (rule "add_zero_right" (formula "38") (term "1"))
                                                      (rule "applyEq" (formula "23") (term "0") (ifseqformula "38"))
                                                      (rule "inEqSimp_commuteLeq" (formula "23"))
                                                      (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "38"))
                                                      (rule "eqSymm" (formula "39"))
                                                      (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "39"))
                                                      (rule "applyEqRigid" (formula "7") (term "3,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "5") (term "1,1,0,0,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "7") (term "1,2,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEqRigid" (formula "58") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "32") (term "1,2,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEqRigid" (formula "44") (term "1,0,2,2,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "43") (term "3,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "44") (term "1,0,2,1,0") (ifseqformula "39"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,2,1,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,2,1,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "16") (term "0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "39"))
                                                      (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "39"))
                                                      (rule "applyEqRigid" (formula "41") (term "1") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "58") (term "1") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "40") (term "1") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "44") (term "1,0,2,1") (ifseqformula "39"))
                                                      (rule "elimGcdEq" (formula "58") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=jdiv(mul(l_0, Z(2(#))), Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                                      (rule "add_literals" (formula "58") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,0,0,1"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "58") (term "0,0,0"))
                                                      (rule "add_literals" (formula "58") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "58") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "58") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor0" (formula "58") (term "0,0,1"))
                                                      (rule "add_literals" (formula "58") (term "1,0,0,1"))
                                                      (rule "times_zero_1" (formula "58") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "58") (term "0,0"))
                                                      (rule "add_literals" (formula "58") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "58") (term "0,0"))
                                                      (rule "qeq_literals" (formula "58") (term "0"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(2(3(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "neg_literal" (formula "6") (term "0,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "6") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "16") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0"))
                                                      (rule "leq_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "29"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "29"))
                                                      (rule "mul_literals" (formula "17") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                      (rule "add_literals" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                      (rule "mul_literals" (formula "17") (term "1"))
                                                      (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "16"))
                                                      (rule "mul_literals" (formula "17") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "17") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "leq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "12"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "22") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "29"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                      (rule "mul_literals" (formula "23") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "17"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "14") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                      (rule "add_literals" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1"))
                                                      (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "16"))
                                                      (rule "greater_literals" (formula "14") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1,0"))
                                                      (rule "leq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "18"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                      (rule "add_literals" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "23"))
                                                      (rule "leq_literals" (formula "22") (term "0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                      (rule "mul_literals" (formula "23") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "4") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "4") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                                                      (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "6") (term "0") (inst "i=i_1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "translateJavaAddInt" (formula "6") (term "0,2,1,1,0"))
                                                      (rule "translateJavaSubInt" (formula "6") (term "1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "6") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "6") (term "0,2,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "6") (term "0"))
                                                      (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                                                      (rule "Definition_axiom_for_classOf_in_de_wiesler_Classifier" (formula "50") (term "0"))
                                                      (rule "Query_axiom_for_classify_int__in_de_wiesler_Classifier" (formula "50") (term "0") (inst "classify_sk=classify_sk_0") (inst "#p0=x_1") (inst "#self=c") (inst "#res=x") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "eqSymm" (formula "51"))
                                                      (rule "eqSymm" (formula "1") (term "0,1"))
                                                      (rule "boxToDiamond" (formula "1") (term "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "commute_or" (formula "13") (term "0,0"))
                                                      (rule "commute_or" (formula "4") (term "0,0"))
                                                      (rule "jdiv_axiom" (formula "60") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "16"))
                                                      (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "applyEqRigid" (formula "61") (term "0") (ifseqformula "1"))
                                                      (rule "polyDiv_pullOut" (formula "61") (term "0") (inst "polyDivCoeff=l_0"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,2,0"))
                                                      (rule "equal_literals" (formula "61") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "polySimp_homoEq" (formula "61"))
                                                      (rule "polySimp_pullOutFactor0" (formula "61") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "61") (term "1,0,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "61") (term "0,0,0,1,0"))
                                                      (rule "div_literals" (formula "61") (term "0,0,1,0"))
                                                      (rule "add_zero_left" (formula "61") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "61") (term "0"))
                                                      (rule "add_literals" (formula "61") (term "1,0"))
                                                      (rule "times_zero_1" (formula "61") (term "0"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "closeTrue" (formula "61"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "54"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "54"))
                                                      (branch "Case 1"
                                                          (builtin "SMTRule")
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "SMTRule")
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "54"))
                                                      (branch "Case 1"
                                                          (builtin "One Step Simplification" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "notRight" (formula "53"))
                                                         (rule "inEqSimp_ltRight" (formula "50"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,1,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "28"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                         (rule "add_literals" (formula "28") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                                         (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,0,1,0"))
                                                         (rule "div_literals" (formula "21") (term "0,1,0,1,1,1,1,0,0,1,0"))
                                                         (rule "times_zero_2" (formula "21") (term "1,0,1,1,1,1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,1,1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "21") (term "1,1,1,1,0,0,1,0"))
                                                         (rule "pow_literals" (formula "21") (term "1,1,1,0,0,1,0"))
                                                         (rule "mod_axiom" (formula "21") (term "1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,1,0,0,1,0"))
                                                         (rule "div_literals" (formula "21") (term "0,1,1,2,1,0,0,1,0"))
                                                         (rule "times_zero_2" (formula "21") (term "1,1,2,1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "21") (term "1,2,1,0,0,1,0"))
                                                         (rule "pow_literals" (formula "21") (term "2,1,0,0,1,0"))
                                                         (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,0,1,0"))
                                                         (rule "div_literals" (formula "21") (term "0,1,1,0,0,1,0,0,1,0"))
                                                         (rule "times_zero_2" (formula "21") (term "1,1,0,0,1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "21") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,1,0,0,1,0"))
                                                         (rule "leq_literals" (formula "21") (term "0,1,0,0,1,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                         (rule "mod_axiom" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                                         (rule "div_literals" (formula "21") (term "0,1,0,1,0"))
                                                         (rule "times_zero_2" (formula "21") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "21") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                         (rule "add_literals" (formula "21") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                                         (rule "mul_literals" (formula "21") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "18"))
                                                         (rule "leq_literals" (formula "15") (term "0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "pullOutSelect" (formula "2") (term "2,1") (inst "selectSK=arr_1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "34"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")) (ifInst ""  (formula "13")))
                                                         (rule "eqSymm" (formula "2") (term "0,0"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfAnon" (formula "2"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")) (ifInst ""  (formula "13")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                         (rule "times_zero_2" (formula "2") (term "1,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "2") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqReverse" (formula "3") (term "2,1") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_2"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "34"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")) (ifInst ""  (formula "13")))
                                                         (rule "eqSymm" (formula "3"))
                                                         (rule "eqSymm" (formula "2") (term "0,0"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfAnon" (formula "2"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")) (ifInst ""  (formula "13")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "1,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "2") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqReverse" (formula "3") (term "2,1") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "eqSymm" (formula "2"))
                                                         (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "41") (term "2,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "31") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "31"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                         (rule "applyEq" (formula "10") (term "1,2,1,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "7") (term "1,2,1,0,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "34") (term "1,2,1,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "0"))
                                                         (rule "qeq_literals" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "applyEq" (formula "5") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "0"))
                                                         (rule "leq_literals" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                         (rule "mul_literals" (formula "28") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "28"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                         (rule "mul_literals" (formula "15") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                         (rule "add_literals" (formula "15") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                         (rule "mul_literals" (formula "15") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
                                                         (rule "leq_literals" (formula "18") (term "0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "27"))
                                                         (rule "mul_literals" (formula "16") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                         (rule "add_literals" (formula "16") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                         (rule "mul_literals" (formula "16") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "16"))
                                                         (rule "leq_literals" (formula "5") (term "0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "nnf_imp2or" (formula "13") (term "0"))
                                                         (rule "nnf_imp2or" (formula "4") (term "0"))
                                                         (rule "nnf_imp2or" (formula "3") (term "0"))
                                                         (rule "Definition_axiom_for_isLog2Of_in_de_wiesler_Constants" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "translateJavaAddInt" (formula "21") (term "1,1,1,1"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "polySimp_addComm0" (formula "24") (term "1,1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "24") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                                         (rule "applyEq" (formula "24") (term "0,1,0,1") (ifseqformula "2"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                                                         (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "30"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "39"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "translateJavaSubInt" (formula "39") (term "0,2,0,1,0"))
                                                         (rule "translateJavaSubInt" (formula "39") (term "0,2,1,1,0"))
                                                         (rule "translateJavaMulInt" (formula "39") (term "1,1,1,0,0,0,0"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "notLeft" (formula "39"))
                                                         (rule "notLeft" (formula "39"))
                                                         (rule "eqSymm" (formula "44"))
                                                         (rule "eqSymm" (formula "41"))
                                                         (rule "polySimp_elimSub" (formula "44") (term "0,2,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,2,0"))
                                                         (rule "eqSymm" (formula "44"))
                                                         (rule "polySimp_elimSub" (formula "44") (term "0,2,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,2,0"))
                                                         (rule "eqSymm" (formula "44"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,2,0"))
                                                         (rule "eqSymm" (formula "44"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,2,0"))
                                                         (rule "eqSymm" (formula "44"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39"))
                                                         (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "35"))
                                                         (rule "eqSymm" (formula "44"))
                                                         (rule "applyEq" (formula "42") (term "1") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "35"))
                                                         (rule "eqSymm" (formula "44"))
                                                         (rule "pullOutSelect" (formula "44") (term "1") (inst "selectSK=arr_3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "31"))
                                                          (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "57")) (ifInst ""  (formula "9")))
                                                         (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "31"))
                                                          (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "57")) (ifInst ""  (formula "9")))
                                                         (rule "eqSymm" (formula "45") (term "0,0"))
                                                         (rule "eqSymm" (formula "44") (term "0,0"))
                                                         (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "simplifySelectOfAnon" (formula "45"))
                                                          (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "57")) (ifInst ""  (formula "9")))
                                                         (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "simplifySelectOfAnon" (formula "44"))
                                                          (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "57")) (ifInst ""  (formula "9")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "45") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "44") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                         (rule "Definition_axiom_for_classOfFirstSplitters_in_de_wiesler_Classifier" (formula "49") (term "0"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "notLeft" (formula "49"))
                                                         (rule "eqSymm" (formula "50"))
                                                         (rule "applyEq" (formula "50") (term "1,2,1") (ifseqformula "35"))
                                                         (rule "replaceKnownSelect_taclet0111110001201112120_2" (formula "50") (term "2,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0111110001201112120_4" (formula "50") (term "2,1"))
                                                         (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "35"))
                                                         (rule "replaceKnownSelect_taclet0111110001201112120_5" (formula "50") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0111110001201112120_7" (formula "50") (term "2,0"))
                                                         (rule "close" (formula "50") (ifseqformula "1"))
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "SMTRule")
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "SMTRule")
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "1"))
                                     (builtin "One Step Simplification" (formula "54"))
                                     (builtin "SMTRule")
                                 )
                              )
                              (branch "Case 2"
                                 (rule "impRight" (formula "53"))
                                 (rule "andRight" (formula "54"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "54"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "54"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "54"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "54"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "54"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "54"))
                                                   (branch "Case 1"
                                                       (builtin "SMTRule")
                                                   )
                                                   (branch "Case 2"
                                                       (builtin "SMTRule")
                                                   )
                                                )
                                                (branch "Case 2"
                                                    (builtin "SMTRule")
                                                )
                                             )
                                             (branch "Case 2"
                                                 (builtin "SMTRule")
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "54"))
                                             (branch "Case 1"
                                                 (builtin "SMTRule")
                                             )
                                             (branch "Case 2"
                                                 (builtin "SMTRule")
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "SMTRule")
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "SMTRule")
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "SMTRule")
                                 )
                              )
                           )
                        )
                     )
                     (branch "Exceptional Post (Classifier)"
                         (builtin "One Step Simplification" (formula "38"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "translateJavaMulInt" (formula "33") (term "1,1,1,0,1,0,1,1"))
                        (rule "andLeft" (formula "33"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,0,0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,1,0,1,0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "andLeft" (formula "34"))
                        (rule "andLeft" (formula "35"))
                        (rule "andLeft" (formula "34"))
                        (rule "andLeft" (formula "36"))
                        (rule "andLeft" (formula "35"))
                        (rule "andLeft" (formula "34"))
                        (rule "andLeft" (formula "38"))
                        (rule "andLeft" (formula "40"))
                        (rule "andLeft" (formula "36"))
                        (rule "notLeft" (formula "34"))
                        (rule "close" (formula "43") (ifseqformula "42"))
                     )
                     (branch "Pre (Classifier)"
                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "33")) (ifInst ""  (formula "26")) (ifInst ""  (formula "35")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "11")) (ifInst ""  (formula "34")) (ifInst ""  (formula "12")))
                        (rule "andRight" (formula "36"))
                        (branch "Case 1"
                           (rule "andRight" (formula "36"))
                           (branch "Case 1"
                              (rule "inEqSimp_leqRight" (formula "36"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltRight" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,1,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "6") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0"))
                              (rule "add_literals" (formula "27") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                              (rule "mod_axiom" (formula "21") (term "0,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,1,1,0,0,1,0"))
                              (rule "div_literals" (formula "21") (term "0,1,0,1,1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "1,0,1,1,1,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "21") (term "0,1,1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "1,1,1,1,0,0,1,0"))
                              (rule "pow_literals" (formula "21") (term "1,1,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,0,1,0"))
                              (rule "div_literals" (formula "21") (term "0,1,1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "1,1,0,0,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "21") (term "1,0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "21") (term "0,0,1,0,0,1,0"))
                              (rule "leq_literals" (formula "21") (term "0,1,0,0,1,0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "mod_axiom" (formula "21") (term "1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                              (rule "div_literals" (formula "21") (term "0,1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "1,1,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "21") (term "1,1,0,0,1,0"))
                              (rule "pow_literals" (formula "21") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "21") (term "0,0,1,0"))
                              (rule "mod_axiom" (formula "21") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                              (rule "div_literals" (formula "21") (term "0,1,0,1,0"))
                              (rule "times_zero_2" (formula "21") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "21") (term "0,1,0"))
                              (rule "mul_literals" (formula "21") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "add_literals" (formula "21") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                              (rule "polySimp_elimOne" (formula "31") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                              (rule "polySimp_elimOne" (formula "27") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                              (rule "mul_literals" (formula "21") (term "1"))
                              (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "2"))
                              (rule "leq_literals" (formula "27") (term "0"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "18"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,0"))
                              (rule "times_zero_1" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "applyEq" (formula "5") (term "1,2,1,0,0,1,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "5") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "27"))
                              (rule "polySimp_addComm1" (formula "27") (term "0"))
                              (rule "applyEq" (formula "8") (term "1,2,1,0,0") (ifseqformula "3"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1"))
                              (rule "polySimp_rightDist" (formula "27") (term "1"))
                              (rule "mul_literals" (formula "27") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                              (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                              (rule "mul_literals" (formula "15") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
                              (rule "leq_literals" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "26"))
                              (rule "mul_literals" (formula "16") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0"))
                              (rule "add_literals" (formula "16") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "mul_literals" (formula "16") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "16"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "nnf_imp2or" (formula "13") (term "0"))
                              (rule "nnf_imp2or" (formula "3") (term "0"))
                              (rule "nnf_imp2or" (formula "4") (term "0"))
                              (rule "nnf_notAnd" (formula "13") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "3") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "3") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "3") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                              (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "4") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "4") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "4") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "4") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                              (rule "Definition_axiom_for_isLog2Of_in_de_wiesler_Constants" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "translateJavaAddInt" (formula "21") (term "1,1,1,1"))
                              (rule "andLeft" (formula "21"))
                              (rule "andLeft" (formula "21"))
                              (rule "andLeft" (formula "21"))
                              (rule "polySimp_addComm0" (formula "24") (term "1,1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "24") (term "1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                              (rule "applyEq" (formula "24") (term "0,1,0,1") (ifseqformula "2"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                              (rule "mul_literals" (formula "24") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                              (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "36"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "36"))
                                 (branch "Case 1"
                                     (builtin "SMTRule")
                                 )
                                 (branch "Case 2"
                                     (builtin "SMTRule")
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "36"))
                                 (branch "Case 1"
                                    (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "8") (term "0") (userinteraction))
                                    (rule "doubleImpLeft" (formula "8") (userinteraction))
                                    (branch "Case 1"
                                       (rule "wellFormedAnon" (formula "32") (term "1"))
                                       (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "10")) (ifInst ""  (formula "9")))
                                       (rule "closeTrue" (formula "32"))
                                    )
                                    (branch "Case 2"
                                       (rule "close" (formula "32") (ifseqformula "8"))
                                    )
                                    (branch "Case 3"
                                       (rule "inEqSimp_ltRight" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                       (rule "add_literals" (formula "28") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "1,1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                       (rule "mod_axiom" (formula "21") (term "1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "div_literals" (formula "21") (term "0,1,1,0,0,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "21") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "21") (term "1,0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,1,0,0,1,0"))
                                       (rule "leq_literals" (formula "21") (term "0,1,0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "mod_axiom" (formula "21") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                                       (rule "div_literals" (formula "21") (term "0,1,1,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "21") (term "1,1,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "21") (term "1,1,0,0,1,0"))
                                       (rule "pow_literals" (formula "21") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                       (rule "mod_axiom" (formula "21") (term "0,1,0"))
                                       (rule "div_literals" (formula "21") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                       (rule "times_zero_2" (formula "21") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,0"))
                                       (rule "times_zero_1" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "8") (term "1,2,1,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "34") (term "1,2,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "1,2,1,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "4") (term "1,2,1,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "33") (term "3,0") (ifseqformula "2"))
                                       (rule "close" (formula "33") (ifseqformula "7"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "36"))
                                    (branch "Case 1"
                                        (builtin "SMTRule")
                                    )
                                    (branch "Case 2"
                                       (rule "translateJavaSubInt" (formula "36") (term "0,2,0"))
                                       (rule "translateJavaSubInt" (formula "36") (term "0,2,1"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "polySimp_elimSub" (formula "36") (term "0,2,0"))
                                       (rule "mul_literals" (formula "36") (term "1,0,2,0"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "polySimp_elimSub" (formula "36") (term "0,2,0"))
                                       (rule "mul_literals" (formula "36") (term "1,0,2,0"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,2,1"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,2,0"))
                                       (rule "inEqSimp_ltRight" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                       (rule "add_literals" (formula "27") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "1,1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                       (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "div_literals" (formula "20") (term "0,1,1,0,0,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,1,0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "mod_axiom" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                                       (rule "div_literals" (formula "20") (term "0,1,1,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "20") (term "1,1,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "pow_literals" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                       (rule "mod_axiom" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "20") (term "0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "20") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "pullOutSelect" (formula "34") (term "1") (inst "selectSK=arr_1"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "12")))
                                       (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "0,1,0,0"))
                                       (rule "qeq_literals" (formula "1") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_2"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "12")))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                                       (rule "qeq_literals" (formula "1") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                       (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "2"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "qeq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "30"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,0"))
                                       (rule "times_zero_1" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "1") (term "1,0,2,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "34") (term "1,0,2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "8") (term "1,2,1,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "5") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,0,2,2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "4") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1"))
                                       (rule "mul_literals" (formula "28") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                       (rule "mul_literals" (formula "15") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "27"))
                                       (rule "mul_literals" (formula "16") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "nnf_imp2or" (formula "13") (term "0"))
                                       (rule "nnf_imp2or" (formula "4") (term "0"))
                                       (rule "nnf_imp2or" (formula "3") (term "0"))
                                       (rule "Definition_axiom_for_isLog2Of_in_de_wiesler_Constants" (formula "21") (term "0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "translateJavaAddInt" (formula "21") (term "1,1,1,1"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "polySimp_addComm0" (formula "24") (term "1,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                       (rule "applyEq" (formula "24") (term "0,1,0,1") (ifseqformula "2"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                                       (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "26"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                                       (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "6") (term "0") (inst "i=i_1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "translateJavaAddInt" (formula "6") (term "0,2,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "6") (term "1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "6") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "1,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,2,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "6") (term "0"))
                                       (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "13") (term "0,0"))
                                       (rule "cut_direct" (formula "26") (term "0"))
                                       (branch "CUT: result_22 = null TRUE"
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "cut_direct" (formula "29") (term "0"))
                                          (branch "CUT: result_23 = null TRUE"
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "num_splitters <= -2 + i_0 TRUE"
                                                (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "33"))
                                                (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0"))
                                                (rule "qeq_literals" (formula "28") (term "0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "16") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "15") (term "0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(2(#))), i_0)"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "4") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "33")) (ifInst ""  (formula "11")))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEq" (formula "33") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "33"))
                                                (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                                (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "5") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfAnon" (formula "5"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "34")) (ifInst ""  (formula "12")))
                                                (rule "eqSymm" (formula "6"))
                                                (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "elementOfArrayRangeConcrete" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "0,1,0,0"))
                                                (rule "qeq_literals" (formula "5") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_subsumption0" (formula "5") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "34")))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                             (branch "num_splitters <= -2 + i_0 FALSE"
                                                (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_leqRight" (formula "29"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "28"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "29"))
                                                (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                (rule "add_literals" (formula "29") (term "1,0"))
                                                (rule "times_zero_1" (formula "29") (term "0"))
                                                (rule "qeq_literals" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "applyEq" (formula "5") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,1,1,0,0"))
                                                (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "applyEq" (formula "6") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0,0"))
                                                (rule "applyEq" (formula "6") (term "1,1,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "22") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "1,0,2,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,2,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                (rule "commute_or" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_or_antiSymm0" (formula "4") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1,0,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "4") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "commute_or" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "30")) (ifInst ""  (formula "10")))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "30")))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                          )
                                          (branch "CUT: result_23 = null FALSE"
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "num_splitters <= -2 + i_0 TRUE"
                                                (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "34"))
                                                (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0"))
                                                (rule "qeq_literals" (formula "28") (term "0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "16") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "15") (term "0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(2(#))), i_0)"))
                                                (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "4") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "34"))
                                                (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "5") (term "0,0,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "5") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfAnon" (formula "5"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "35")) (ifInst ""  (formula "12")))
                                                (rule "eqSymm" (formula "6"))
                                                (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "elementOfArrayRangeConcrete" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "0,1,0,0"))
                                                (rule "qeq_literals" (formula "5") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_subsumption0" (formula "5") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "35")))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                             (branch "num_splitters <= -2 + i_0 FALSE"
                                                (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_leqRight" (formula "29"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "28"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "applyEq" (formula "6") (term "1,1,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0,0"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,1,1,0,0"))
                                                (rule "applyEq" (formula "6") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "22") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "28"))
                                                (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                                (rule "add_literals" (formula "28") (term "1,0"))
                                                (rule "times_zero_1" (formula "28") (term "0"))
                                                (rule "qeq_literals" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "applyEq" (formula "4") (term "1,0,2,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,2,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                (rule "commute_or" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_or_antiSymm0" (formula "4") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1,0,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "4") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "commute_or" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "31")) (ifInst ""  (formula "10")))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "31")))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_22 = null FALSE"
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "cut_direct" (formula "29") (term "0"))
                                          (branch "CUT: result_23 = null TRUE"
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "num_splitters <= -2 + i_0 TRUE"
                                                (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "34"))
                                                (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0"))
                                                (rule "qeq_literals" (formula "28") (term "0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "16") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "15") (term "0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(2(#))), i_0)"))
                                                (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "4") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "34"))
                                                (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "5") (term "0,0,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "5") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfAnon" (formula "5"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "35")) (ifInst ""  (formula "12")))
                                                (rule "eqSymm" (formula "6"))
                                                (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "elementOfArrayRangeConcrete" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "0,1,0,0"))
                                                (rule "qeq_literals" (formula "5") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_subsumption0" (formula "5") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "35")))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                             (branch "num_splitters <= -2 + i_0 FALSE"
                                                (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_leqRight" (formula "29"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "28"))
                                                (rule "applyEq" (formula "4") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "23") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "29"))
                                                (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                (rule "add_literals" (formula "29") (term "1,0"))
                                                (rule "times_zero_1" (formula "29") (term "0"))
                                                (rule "qeq_literals" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "applyEq" (formula "5") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,1,1,0,0"))
                                                (rule "applyEq" (formula "7") (term "1,1,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,1,1,0,0"))
                                                (rule "applyEq" (formula "5") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                (rule "add_literals" (formula "17") (term "0,0"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "add_literals" (formula "13") (term "0,0"))
                                                (rule "applyEq" (formula "7") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "1,0,2,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,2,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                (rule "commute_or" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_or_antiSymm0" (formula "4") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1,0,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "4") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "commute_or" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "31")) (ifInst ""  (formula "10")))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "31")))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                          )
                                          (branch "CUT: result_23 = null FALSE"
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "num_splitters <= -2 + i_0 TRUE"
                                                (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "35"))
                                                (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0"))
                                                (rule "qeq_literals" (formula "28") (term "0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "16") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "15") (term "0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(2(#))), i_0)"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "4") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "35")) (ifInst ""  (formula "11")))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "35"))
                                                (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "5") (term "0,0,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "5") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfAnon" (formula "5"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "36")) (ifInst ""  (formula "12")))
                                                (rule "eqSymm" (formula "6"))
                                                (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "elementOfArrayRangeConcrete" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "0,1,0,0"))
                                                (rule "qeq_literals" (formula "5") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_subsumption0" (formula "5") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "36")))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                             (branch "num_splitters <= -2 + i_0 FALSE"
                                                (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_leqRight" (formula "29"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "28"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0,0"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "applyEq" (formula "6") (term "1,1,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,1,1,0,0"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "applyEq" (formula "22") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "6") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "28"))
                                                (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                                (rule "add_literals" (formula "28") (term "1,0"))
                                                (rule "times_zero_1" (formula "28") (term "0"))
                                                (rule "qeq_literals" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "applyEq" (formula "4") (term "1,0,2,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,2,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                (rule "commute_or" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_or_antiSymm0" (formula "4") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1,0,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "4") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "commute_or" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "32")) (ifInst ""  (formula "10")))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "32")))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "wellFormedAnon" (formula "36"))
                           (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "9")))
                           (rule "closeTrue" (formula "36"))
                        )
                     )
                  )
               )
            )
         )
      )
   )
)
(branch "Exceptional Post (log2)"
    (builtin "One Step Simplification" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "14"))
   (rule "close" (formula "16") (ifseqformula "15"))
)
(branch "Pre (log2)"
    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
   (rule "inEqSimp_gtRight" (formula "17"))
   (rule "times_zero_1" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,1,0"))
   (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "12") (term "0,0,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "8") (term "0,1,0"))
   (rule "inEqSimp_homoInEq1" (formula "12"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "12") (term "0"))
   (rule "polySimp_addComm0" (formula "12") (term "0,0"))
   (rule "mod_axiom" (formula "12") (term "1,2,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,2,1,0,0,1,0"))
   (rule "div_literals" (formula "12") (term "0,1,1,2,1,0,0,1,0"))
   (rule "mul_literals" (formula "12") (term "1,1,2,1,0,0,1,0"))
   (rule "add_literals" (formula "12") (term "1,2,1,0,0,1,0"))
   (rule "pow_literals" (formula "12") (term "2,1,0,0,1,0"))
   (rule "mod_axiom" (formula "12") (term "1,0,0,1,0,0,1,0"))
   (rule "div_literals" (formula "12") (term "0,0,1,1,0,0,1,0,0,1,0"))
   (rule "times_zero_2" (formula "12") (term "0,1,1,0,0,1,0,0,1,0"))
   (rule "times_zero_2" (formula "12") (term "1,1,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "12") (term "1,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "12") (term "0,0,1,0,0,1,0"))
   (rule "leq_literals" (formula "12") (term "0,1,0,0,1,0"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "add_literals" (formula "12") (term "0,0,1,0"))
   (rule "mod_axiom" (formula "12") (term "0,1,0"))
   (rule "div_literals" (formula "12") (term "0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
   (rule "times_zero_2" (formula "12") (term "1,0,1,0"))
   (rule "add_zero_right" (formula "12") (term "0,1,0"))
   (rule "mul_literals" (formula "12") (term "1,0"))
   (rule "polySimp_addComm1" (formula "12") (term "0"))
   (rule "add_literals" (formula "12") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "8") (term "0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12"))
   (rule "mul_literals" (formula "12") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
   (rule "leq_literals" (formula "6") (term "0"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
   (rule "qeq_literals" (formula "1") (term "0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
)
}
