\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu May 05 18:22:58 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Thu May 05 18:22:58 CEST 2022
contract=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:isClassifiedUntil([I,int,int,int,[I,de.wiesler.Buffers)].JML accessible clause.0
name=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:isClassifiedUntil([I,int,int,int,[I,de.wiesler.Buffers)].JML accessible clause.0
class=de.uka.ilkd.key.proof.init.DependencyContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "3" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "4" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "5" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "6" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "42101")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "self,values_0,begin,write,i,bucket_starts,buffers,anon_heap"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "17"))
(rule "andLeft" (formula "17"))
(rule "notLeft" (formula "17"))
(rule "notLeft" (formula "17"))
(rule "Definition_axiom_for_isClassifiedUntil_in_de_wiesler_Classifier" (formula "21") (term "1,1") (inst "b=b") (userinteraction))
(rule "Definition_axiom_for_isClassifiedUntil_in_de_wiesler_Classifier" (formula "21") (term "0") (inst "b=b") (userinteraction))
 (builtin "One Step Simplification" (formula "21") (userinteraction))
 (builtin "Use Dependency Contract" (formula "21") (term "0,0,0,0,0,1") (ifInst ""  (formula "21") (term "0,0,0,0,0,0")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::allElementsCounted([I,int,int,[I)].JML accessible clause.0") (userinteraction))
 (builtin "Use Dependency Contract" (formula "22") (term "0,1,0,0,0,1") (ifInst ""  (formula "22") (term "0,1,0,0,0,0")) (contract "de.wiesler.Classifier[de.wiesler.Classifier::isClassifiedBlocksRange([I,int,int)].JML accessible clause.0") (userinteraction))
 (builtin "Use Dependency Contract" (formula "23") (term "0,1,0,0,1") (ifInst ""  (formula "23") (term "0,1,0,0,0")) (contract "de.wiesler.Buffers[de.wiesler.Buffers::isClassifiedWith(de.wiesler.Classifier)].JML accessible clause.0") (userinteraction))
 (builtin "Use Dependency Contract" (formula "24") (term "0,1,1") (ifInst ""  (formula "24") (term "0,1,0")) (contract "de.wiesler.Buffers[de.wiesler.Buffers::count()].JML accessible clause.0") (userinteraction))
(rule "impLeft" (formula "20") (userinteraction))
(branch "Case 1"
   (rule "andRight" (formula "20"))
   (branch "Case 1"
      (rule "andRight" (formula "20"))
      (branch "Case 1"
         (rule "andRight" (formula "20"))
         (branch "Case 1"
            (rule "andRight" (formula "20"))
            (branch "Case 1"
                (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "20")) (ifInst ""  (formula "1")) (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "16")) (ifInst ""  (formula "12")) (ifInst ""  (formula "24")))
                (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "23")))
                (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "23")) (ifInst ""  (formula "22")))
                (builtin "One Step Simplification" (formula "8"))
                (builtin "One Step Simplification" (formula "7"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "16"))
               (rule "wellFormedAnon" (formula "15") (term "0,0"))
               (rule "wellFormedAnon" (formula "14") (term "0,0"))
               (rule "translateJavaSubInt" (formula "21") (term "1,1,0"))
               (rule "translateJavaSubInt" (formula "12") (term "0,0"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1,1"))
               (rule "translateJavaSubInt" (formula "21") (term "1,1,1"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,1,0"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,0,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,1,0,1,0"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1,1"))
               (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,0,1,0"))
               (rule "translateJavaMulInt" (formula "14") (term "0,2,1,1,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "14") (term "0,2,1,1,0,1,0"))
               (rule "notRight" (formula "16"))
               (rule "close" (formula "17") (ifseqformula "1"))
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "1")) (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "16")) (ifInst ""  (formula "12")) (ifInst ""  (formula "24")))
                (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "23")))
                (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "23")) (ifInst ""  (formula "22")))
                (builtin "One Step Simplification" (formula "8"))
                (builtin "One Step Simplification" (formula "7"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "16"))
               (rule "wellFormedAnon" (formula "15") (term "0,0"))
               (rule "wellFormedAnon" (formula "14") (term "0,0"))
               (rule "translateJavaSubInt" (formula "21") (term "1,1,0"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "12") (term "0,0"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1,1"))
               (rule "translateJavaSubInt" (formula "21") (term "1,1,1"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,0,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,1,0"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,1,0,1,0"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1,1"))
               (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,0,1,0"))
               (rule "translateJavaMulInt" (formula "14") (term "0,2,1,1,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "14") (term "0,2,1,1,0,1,0"))
               (rule "eqSymm" (formula "11"))
               (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "17")))
               (rule "closeFalse" (formula "7"))
            )
         )
         (branch "Case 2"
            (rule "andRight" (formula "20"))
            (branch "Case 1"
               (rule "close" (formula "20") (ifseqformula "1"))
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "21")) (ifInst ""  (formula "1")) (ifInst ""  (formula "20")) (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "16")) (ifInst ""  (formula "12")) (ifInst ""  (formula "24")))
               (rule "wellFormedAnon" (formula "20"))
                (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "23")))
                (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "23")) (ifInst ""  (formula "22")))
                (builtin "One Step Simplification" (formula "8"))
                (builtin "One Step Simplification" (formula "7"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "16"))
               (rule "wellFormedAnon" (formula "15") (term "0,0"))
               (rule "wellFormedAnon" (formula "14") (term "0,0"))
               (rule "translateJavaSubInt" (formula "12") (term "0,0"))
               (rule "translateJavaSubInt" (formula "21") (term "1,1,0"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1,1"))
               (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1,1"))
               (rule "translateJavaSubInt" (formula "21") (term "1,1,1"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,0,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,1,0,1,0"))
               (rule "translateJavaMulInt" (formula "14") (term "0,2,1,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,1,0"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1,1"))
               (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,0,1,0"))
               (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "14") (term "0,2,1,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "14") (term "2,1,1,1,0,0,1"))
               (rule "eqSymm" (formula "11"))
               (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")))
               (rule "closeTrue" (formula "16"))
            )
         )
      )
      (branch "Case 2"
         (rule "close" (formula "20") (ifseqformula "12"))
      )
   )
   (branch "Case 2"
      (rule "translateJavaSubInt" (formula "20") (term "2,1,0,0,0,1,0"))
      (rule "translateJavaSubInt" (formula "20") (term "2,1,0,1,0"))
      (rule "translateJavaSubInt" (formula "20") (term "2,1,1,0"))
      (rule "translateJavaSubInt" (formula "20") (term "2,1"))
      (rule "translateJavaMulInt" (formula "20") (term "0,2,1,1,0"))
      (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0,1,0"))
      (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,0"))
      (rule "polySimp_elimSub" (formula "20") (term "2,1"))
      (rule "polySimp_elimSub" (formula "20") (term "2,1,1,0"))
      (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,1,0,1,0"))
      (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,1"))
      (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,1,1,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1,0"))
      (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "20") (term "2,1"))
      (rule "polySimp_addComm0" (formula "20") (term "2,1,1,0"))
      (rule "disjointDefinition" (formula "20"))
      (rule "commuteUnion_2" (formula "20") (term "0,0,1,0,0"))
      (rule "commuteUnion_2" (formula "20") (term "1,0,0"))
      (rule "commuteIntersection" (formula "20") (term "0"))
      (rule "equalityToElementOfRight" (formula "20") (inst "ov=ov") (inst "fv=fv"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "allRight" (formula "20") (inst "sk=ov_0"))
      (rule "allRight" (formula "20") (inst "sk=fv_0"))
      (rule "notRight" (formula "20"))
      (rule "elementOfIntersect" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "elementOfSetMinus" (formula "2"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "notLeft" (formula "2"))
      (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
      (rule "andLeft" (formula "1"))
      (rule "exLeft" (formula "2") (inst "sk=iv_0"))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "inEqSimp_commuteLeq" (formula "3"))
      (rule "inEqSimp_homoInEq0" (formula "4"))
      (rule "polySimp_addComm1" (formula "4") (term "0"))
      (rule "applyEq" (formula "24") (term "1") (ifseqformula "2"))
      (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
      (rule "polySimp_mulComm0" (formula "4") (term "1"))
      (rule "polySimp_rightDist" (formula "4") (term "1"))
      (rule "mul_literals" (formula "4") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
      (rule "polySimp_elimOne" (formula "4") (term "1,1"))
      (rule "elementOfUnion" (formula "24"))
      (rule "orRight" (formula "24"))
      (rule "elementOfArrayRangeConcrete" (formula "25"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "0"))
      (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "3"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "inEqSimp_leqRight" (formula "25"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "elementOfUnion" (formula "25"))
      (rule "orRight" (formula "25"))
      (rule "elementOfArrayRangeConcrete" (formula "26"))
      (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0"))
      (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "inEqSimp_homoInEq0" (formula "26") (term "1"))
      (rule "polySimp_addComm1" (formula "26") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
      (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
      (rule "polySimp_rightDist" (formula "26") (term "1,1"))
      (rule "mul_literals" (formula "26") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
      (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
      (rule "elementOfUnion" (formula "25"))
      (rule "orRight" (formula "25"))
      (rule "elementOfArrayRangeConcrete" (formula "26"))
      (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0"))
      (rule "inEqSimp_homoInEq0" (formula "26") (term "1"))
      (rule "polySimp_addComm1" (formula "26") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
      (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
      (rule "polySimp_rightDist" (formula "26") (term "1,1"))
      (rule "mul_literals" (formula "26") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
      (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
      (rule "elementOfUnion" (formula "25"))
      (rule "orRight" (formula "25"))
      (rule "elementOfArrayRangeConcrete" (formula "26"))
      (rule "inEqSimp_commuteLeq" (formula "26") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0"))
      (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "25"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "orRight" (formula "25"))
      (rule "eqSymm" (formula "25"))
      (rule "eqSymm" (formula "26"))
      (rule "cut_direct" (formula "29") (term "1"))
      (branch "CUT: self_103.num_buckets * 256 >= 1 + iv_0 TRUE"
          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "31")) (ifInst ""  (formula "7")) (ifInst ""  (formula "34")) (ifInst ""  (formula "9")) (ifInst ""  (formula "22")) (ifInst ""  (formula "18")) (ifInst ""  (formula "34")))
          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "34")) (ifInst ""  (formula "9")) (ifInst ""  (formula "7")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "21")) (ifInst ""  (formula "22")) (ifInst ""  (formula "33")))
          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "34")) (ifInst ""  (formula "9")) (ifInst ""  (formula "7")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "15")) (ifInst ""  (formula "19")) (ifInst ""  (formula "22")) (ifInst ""  (formula "33")) (ifInst ""  (formula "32")))
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "13"))
          (builtin "One Step Simplification" (formula "12"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "true_left" (formula "12"))
         (rule "wellFormedAnon" (formula "21") (term "0,0"))
         (rule "wellFormedAnon" (formula "20") (term "0,0"))
         (rule "wellFormedAnon" (formula "22") (term "1,0,0,0"))
         (rule "translateJavaSubInt" (formula "18") (term "0,0"))
         (rule "translateJavaSubInt" (formula "32") (term "1,1,0"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
         (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,1"))
         (rule "translateJavaSubInt" (formula "32") (term "1,1,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,1,1,0"))
         (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,0,0,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0"))
         (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "21") (term "2,1,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1"))
         (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "20") (term "2,1,0,0,0,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "20") (term "2,1,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "20") (term "2,1,0,1,0,1,0"))
         (rule "translateJavaMulInt" (formula "20") (term "0,2,1,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "20") (term "2,1,0,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "20") (term "2,1,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "20") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
         (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
         (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
         (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
         (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
         (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
         (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,0,1,0"))
         (rule "translateJavaMulInt" (formula "22") (term "0,2,1,0,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,1"))
         (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1"))
         (rule "translateJavaMulInt" (formula "20") (term "0,2,1,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "20") (term "2,1,1,1,0,0,1"))
         (rule "eqSymm" (formula "17"))
         (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "29"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "28"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "8")))
         (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "8")))
         (rule "replace_known_left" (formula "22") (term "1,1,0,0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "13")) (ifInst ""  (formula "7")) (ifInst ""  (formula "17")))
         (rule "polySimp_elimSub" (formula "18") (term "0,0"))
         (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,1"))
         (rule "polySimp_elimSub" (formula "32") (term "1,1,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,1"))
         (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,1"))
         (rule "polySimp_elimSub" (formula "21") (term "2,1,1,0,0"))
         (rule "mul_literals" (formula "21") (term "1,2,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "21") (term "2,1,1,1,0,0,1"))
         (rule "mul_literals" (formula "21") (term "1,2,1,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0,0"))
         (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "21") (term "2,1,1,0"))
         (rule "mul_literals" (formula "21") (term "1,2,1,1,0"))
         (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,1,0,0,1"))
         (rule "mul_literals" (formula "21") (term "1,2,1,0,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,0,0"))
         (rule "mul_literals" (formula "20") (term "1,2,1,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,0"))
         (rule "mul_literals" (formula "20") (term "1,2,1,0,1,0"))
         (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,1,0,0,1"))
         (rule "mul_literals" (formula "20") (term "1,2,1,0,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "20") (term "2,1,1,0,0"))
         (rule "mul_literals" (formula "20") (term "1,2,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "20") (term "2,1,1,1,0,0,1"))
         (rule "mul_literals" (formula "20") (term "1,2,1,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,0,0"))
         (rule "mul_literals" (formula "22") (term "1,2,1,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0,1"))
         (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "22") (term "2,1,1,0,0"))
         (rule "mul_literals" (formula "22") (term "1,2,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "22") (term "2,0,0,0,1,0"))
         (rule "mul_literals" (formula "22") (term "1,2,0,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,1,0"))
         (rule "mul_literals" (formula "22") (term "1,2,1,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0,1"))
         (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "18") (term "0,0"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,0,0"))
         (rule "inEqSimp_commuteGeq" (formula "16"))
         (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "22") (term "2,0,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,1"))
         (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "21") (term "2,1,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "20") (term "2,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "20") (term "2,1,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "22") (term "2,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,1,0"))
         (rule "disjointDefinition" (formula "21") (term "0"))
         (rule "disjointDefinition" (formula "20") (term "0"))
         (rule "disjointDefinition" (formula "22") (term "0"))
         (rule "applyEq" (formula "20") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "21") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "20") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "17"))
         (rule "applyEq" (formula "2") (term "0") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "17"))
         (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
         (rule "applyEq" (formula "20") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "21") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "21") (term "2,1,0,0,1,0,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "21") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "21") (term "1,2,1,0,1,0,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "21") (term "0,1,2,1,1,0,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "20") (term "2,1,1,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "20") (term "0,1,2,1,1,0,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "20") (term "1,2,1,0,1,0,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "20") (term "2,1,0,0,1,0,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "22") (term "1,2,1,0,1,0,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "22") (term "2,1,0,0,1,0,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "22") (term "0,1,2,1,1,0,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "17"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,1"))
         (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,1"))
         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "6"))
         (rule "andLeft" (formula "2"))
         (rule "inEqSimp_homoInEq1" (formula "2"))
         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,1,0"))
         (rule "times_zero_1" (formula "2") (term "1,0"))
         (rule "add_zero_right" (formula "2") (term "0"))
         (rule "leq_literals" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
      (branch "CUT: self_103.num_buckets * 256 >= 1 + iv_0 FALSE"
          (builtin "One Step Simplification" (formula "30"))
         (rule "false_right" (formula "30"))
         (rule "inEqSimp_geqRight" (formula "29"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "cut_direct" (formula "29") (term "1,0"))
         (branch "CUT: iv_0 >= begin TRUE"
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "31")) (ifInst ""  (formula "8")) (ifInst ""  (formula "34")) (ifInst ""  (formula "10")) (ifInst ""  (formula "23")) (ifInst ""  (formula "19")) (ifInst ""  (formula "34")))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "34")) (ifInst ""  (formula "10")) (ifInst ""  (formula "8")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "23")) (ifInst ""  (formula "33")))
             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "34")) (ifInst ""  (formula "10")) (ifInst ""  (formula "8")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")) (ifInst ""  (formula "20")) (ifInst ""  (formula "23")) (ifInst ""  (formula "33")) (ifInst ""  (formula "32")))
             (builtin "One Step Simplification" (formula "15"))
             (builtin "One Step Simplification" (formula "14"))
             (builtin "One Step Simplification" (formula "13"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "true_left" (formula "13"))
            (rule "wellFormedAnon" (formula "22") (term "0,0"))
            (rule "wellFormedAnon" (formula "21") (term "0,0"))
            (rule "wellFormedAnon" (formula "23") (term "1,0,0,0"))
            (rule "translateJavaSubInt" (formula "19") (term "0,0"))
            (rule "translateJavaSubInt" (formula "32") (term "1,1,0"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
            (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,1"))
            (rule "translateJavaSubInt" (formula "32") (term "1,1,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,1,1,0"))
            (rule "translateJavaSubInt" (formula "23") (term "2,0,0,0,1,1,0"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "22") (term "2,1,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0"))
            (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0"))
            (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1"))
            (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
            (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
            (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
            (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
            (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
            (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
            (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,0,1,0"))
            (rule "translateJavaMulInt" (formula "23") (term "0,2,1,0,0,1,1,0"))
            (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1"))
            (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,0,1,0"))
            (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,1"))
            (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1"))
            (rule "eqSymm" (formula "18"))
            (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "30"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "9")))
            (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "9")))
            (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "14")) (ifInst ""  (formula "8")) (ifInst ""  (formula "9")))
            (rule "polySimp_elimSub" (formula "19") (term "0,0"))
            (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,1"))
            (rule "polySimp_elimSub" (formula "32") (term "1,1,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
            (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,1"))
            (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,1"))
            (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,1,0,0,1"))
            (rule "mul_literals" (formula "21") (term "1,2,1,0,1,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0,0"))
            (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "21") (term "2,1,1,0,0"))
            (rule "mul_literals" (formula "21") (term "1,2,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
            (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,0,0"))
            (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0"))
            (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "21") (term "2,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "21") (term "1,2,1,1,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0,1"))
            (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,0,0"))
            (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,0,0"))
            (rule "mul_literals" (formula "22") (term "1,2,1,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "22") (term "2,1,1,0,0"))
            (rule "mul_literals" (formula "22") (term "1,2,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
            (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "22") (term "2,1,1,0"))
            (rule "mul_literals" (formula "22") (term "1,2,1,1,0"))
            (rule "polySimp_elimSub" (formula "23") (term "2,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "23") (term "1,2,1,1,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,0,0"))
            (rule "mul_literals" (formula "23") (term "1,2,1,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,0,0"))
            (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "23") (term "2,1,1,0,0"))
            (rule "mul_literals" (formula "23") (term "1,2,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "23") (term "2,0,0,0,1,0"))
            (rule "mul_literals" (formula "23") (term "1,2,0,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,1,0"))
            (rule "mul_literals" (formula "23") (term "1,2,1,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,1,0,0,1"))
            (rule "mul_literals" (formula "23") (term "1,2,1,0,1,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
            (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
            (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,1"))
            (rule "polySimp_addComm0" (formula "19") (term "0,0"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_commuteGeq" (formula "17"))
            (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,1"))
            (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "22") (term "2,1,1,0"))
            (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "23") (term "2,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
            (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,1"))
            (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "21") (term "2,1,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "22") (term "2,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "23") (term "2,1,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "23") (term "2,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,1,0"))
            (rule "disjointDefinition" (formula "21") (term "0"))
            (rule "disjointDefinition" (formula "22") (term "0"))
            (rule "disjointDefinition" (formula "23") (term "0"))
            (rule "applyEq" (formula "23") (term "1,2,1,0,1,0,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "23") (term "2,1,0,0,1,0,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "22") (term "1,2,1,0,1,0,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "21") (term "2,1,0,0,1,0,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "18"))
            (rule "applyEq" (formula "23") (term "0,1,2,1,1,0,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "21") (term "1,2,1,0,1,0,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "23") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "3") (term "0") (ifseqformula "18"))
            (rule "applyEq" (formula "23") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "22") (term "0,1,2,1,1,0,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "21") (term "2,1,1,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "21") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "21") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "22") (term "2,1,0,0,1,0,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "18"))
            (rule "applyEq" (formula "23") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "21") (term "0,1,2,1,1,0,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "21") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "18"))
            (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "18"))
            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,1"))
            (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,1"))
            (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,1"))
            (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,0"))
            (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "3"))
            (rule "andLeft" (formula "7"))
            (rule "inEqSimp_homoInEq1" (formula "7"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
            (rule "add_literals" (formula "7") (term "1,1,0"))
            (rule "times_zero_1" (formula "7") (term "1,0"))
            (rule "add_zero_right" (formula "7") (term "0"))
            (rule "leq_literals" (formula "7"))
            (rule "closeFalse" (formula "7"))
         )
         (branch "CUT: iv_0 >= begin FALSE"
             (builtin "One Step Simplification" (formula "30"))
            (rule "false_right" (formula "30"))
            (rule "inEqSimp_geqRight" (formula "29"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
            (rule "mul_literals" (formula "6") (term "0,0"))
            (rule "add_zero_left" (formula "6") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1"))
            (rule "cut_direct" (formula "30") (term "1"))
            (branch "CUT: self_103.num_buckets >= iv_0 TRUE"
                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")) (ifInst ""  (formula "10")) (ifInst ""  (formula "35")) (ifInst ""  (formula "12")) (ifInst ""  (formula "25")) (ifInst ""  (formula "21")) (ifInst ""  (formula "35")))
                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "34")))
                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "35")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "18")) (ifInst ""  (formula "22")) (ifInst ""  (formula "25")) (ifInst ""  (formula "34")) (ifInst ""  (formula "33")))
                (builtin "One Step Simplification" (formula "17"))
                (builtin "One Step Simplification" (formula "16"))
                (builtin "One Step Simplification" (formula "15"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "true_left" (formula "15"))
               (rule "wellFormedAnon" (formula "24") (term "0,0"))
               (rule "wellFormedAnon" (formula "23") (term "0,0"))
               (rule "wellFormedAnon" (formula "25") (term "1,0,0,0"))
               (rule "translateJavaSubInt" (formula "33") (term "1,1,0"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "21") (term "0,0"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,1"))
               (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,1"))
               (rule "translateJavaSubInt" (formula "33") (term "1,1,1"))
               (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,1,1,0"))
               (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "25") (term "2,1,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "25") (term "2,0,0,0,1,1,0"))
               (rule "translateJavaSubInt" (formula "25") (term "2,1,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0"))
               (rule "translateJavaSubInt" (formula "24") (term "2,1,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "23") (term "2,1,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0"))
               (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
               (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
               (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,1"))
               (rule "translateJavaMulInt" (formula "25") (term "0,2,1,0,0,1,1,0"))
               (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,0,1,0"))
               (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,0,1,0"))
               (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,0,1,0"))
               (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1"))
               (rule "eqSymm" (formula "20"))
               (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "31"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "10"))
                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "11")))
               (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "10")))
               (rule "replace_known_left" (formula "25") (term "0,1,0,0,0") (ifseqformula "10"))
                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")) (ifInst ""  (formula "11")) (ifInst ""  (formula "20")))
               (rule "polySimp_elimSub" (formula "33") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "21") (term "0,0"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,0,1,1,0,0,1,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,0,1,1,0,0,1,1"))
               (rule "polySimp_elimSub" (formula "33") (term "1,1,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,1,1,0,0,0,0,0,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,1,1,0,0,1,0,0,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,1,1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,1,1,0,0,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "33") (term "2,1,1,1,0,0,1,1"))
               (rule "mul_literals" (formula "33") (term "1,2,1,1,1,0,0,1,1"))
               (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,0,0"))
               (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,0,0"))
               (rule "mul_literals" (formula "24") (term "1,2,1,0,1,0,0"))
               (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,1,0,0,1"))
               (rule "mul_literals" (formula "24") (term "1,2,1,0,1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "24") (term "2,1,1,0,0"))
               (rule "mul_literals" (formula "24") (term "1,2,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "24") (term "2,1,1,0"))
               (rule "mul_literals" (formula "24") (term "1,2,1,1,0"))
               (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "24") (term "2,1,1,1,0,0,1"))
               (rule "mul_literals" (formula "24") (term "1,2,1,1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,0,0"))
               (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,0,0"))
               (rule "mul_literals" (formula "23") (term "1,2,1,0,1,0,0"))
               (rule "polySimp_elimSub" (formula "23") (term "2,1,1,0,0"))
               (rule "mul_literals" (formula "23") (term "1,2,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,0"))
               (rule "mul_literals" (formula "23") (term "1,2,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,1,0,0,1"))
               (rule "mul_literals" (formula "23") (term "1,2,1,0,1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "23") (term "2,1,1,1,0,0,1"))
               (rule "mul_literals" (formula "23") (term "1,2,1,1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "25") (term "2,1,1,0,0"))
               (rule "mul_literals" (formula "25") (term "1,2,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0,1"))
               (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,0,0"))
               (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,1,0"))
               (rule "mul_literals" (formula "25") (term "1,2,1,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0,0"))
               (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0,0"))
               (rule "polySimp_elimSub" (formula "25") (term "2,0,0,0,1,0"))
               (rule "mul_literals" (formula "25") (term "1,2,0,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0,1"))
               (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,2,1,1,1,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "21") (term "0,0"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,0,1,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,0,0,1,0"))
               (rule "inEqSimp_commuteGeq" (formula "19"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "2,1,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "25") (term "2,0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,1,1,0,0,0,0,0,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,1,1,0,0,1,0,0,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,1,1,0,0,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "2,1,1,1,0,0,1,1"))
               (rule "polySimp_addComm0" (formula "24") (term "2,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "24") (term "2,1,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "23") (term "2,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "23") (term "2,1,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,1,0"))
               (rule "disjointDefinition" (formula "24") (term "0"))
               (rule "disjointDefinition" (formula "23") (term "0"))
               (rule "disjointDefinition" (formula "25") (term "0"))
               (rule "applyEq" (formula "25") (term "2,1,0,0,1,0,0,0") (ifseqformula "20"))
               (rule "applyEq" (formula "25") (term "0,1,2,1,1,0,0,0") (ifseqformula "20"))
               (rule "applyEq" (formula "23") (term "2,1,1,0,0") (ifseqformula "20"))
               (rule "applyEq" (formula "25") (term "1,2,1,0,1,0,0,0") (ifseqformula "20"))
               (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "25") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "20"))
               (rule "applyEq" (formula "23") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "24") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "25") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "23") (term "2,1,0,0,1,0,0,0") (ifseqformula "20"))
               (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
               (rule "applyEq" (formula "23") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "20"))
               (rule "applyEq" (formula "25") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "24") (term "2,1,0,0,1,0,0,0") (ifseqformula "20"))
               (rule "applyEq" (formula "23") (term "0,1,2,1,1,0,0,0") (ifseqformula "20"))
               (rule "applyEq" (formula "24") (term "0,1,2,1,1,0,0,0") (ifseqformula "20"))
               (rule "applyEq" (formula "24") (term "1,2,1,0,1,0,0,0") (ifseqformula "20"))
               (rule "applyEq" (formula "23") (term "1,2,1,0,1,0,0,0") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "24") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "20"))
               (rule "applyEq" (formula "24") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
               (rule "applyEq" (formula "23") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "20"))
               (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "20"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0,1"))
               (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0,1"))
               (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0,0"))
               (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "9"))
               (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "qeq_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "3"))
               (rule "andLeft" (formula "8"))
               (rule "inEqSimp_homoInEq1" (formula "8"))
               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "times_zero_1" (formula "8") (term "1,0"))
               (rule "add_zero_right" (formula "8") (term "0"))
               (rule "leq_literals" (formula "8"))
               (rule "closeFalse" (formula "8"))
            )
            (branch "CUT: self_103.num_buckets >= iv_0 FALSE"
                (builtin "One Step Simplification" (formula "31"))
               (rule "false_right" (formula "31"))
               (rule "inEqSimp_geqRight" (formula "30"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
               (rule "add_literals" (formula "4") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "4") (term "1,0,0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "qeq_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "29") (term "0,0") (ifseqformula "9") (ifseqformula "11"))
               (rule "cut_direct" (formula "1") (term "0"))
               (branch "CUT: self_103.tree = null TRUE"
                   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "32")) (ifInst ""  (formula "11")) (ifInst ""  (formula "35")) (ifInst ""  (formula "13")) (ifInst ""  (formula "26")) (ifInst ""  (formula "22")) (ifInst ""  (formula "35")))
                   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "34")))
                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "19")) (ifInst ""  (formula "23")) (ifInst ""  (formula "26")) (ifInst ""  (formula "34")) (ifInst ""  (formula "33")))
                   (builtin "One Step Simplification" (formula "18"))
                   (builtin "One Step Simplification" (formula "17"))
                   (builtin "One Step Simplification" (formula "16"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "15"))
                  (rule "wellFormedAnon" (formula "24") (term "0,0"))
                  (rule "wellFormedAnon" (formula "23") (term "0,0"))
                  (rule "wellFormedAnon" (formula "25") (term "1,0,0,0"))
                  (rule "translateJavaSubInt" (formula "21") (term "0,0"))
                  (rule "translateJavaSubInt" (formula "32") (term "1,1,0"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,1"))
                  (rule "translateJavaSubInt" (formula "32") (term "1,1,1"))
                  (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "25") (term "2,0,0,0,1,1,0"))
                  (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "25") (term "2,1,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "25") (term "2,1,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,1,1,0"))
                  (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0"))
                  (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "24") (term "2,1,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,1,0,1,0"))
                  (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                  (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                  (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
                  (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                  (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                  (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
                  (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,1,0,0,1"))
                  (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,0,1,0"))
                  (rule "translateJavaMulInt" (formula "25") (term "0,2,1,0,0,1,1,0"))
                  (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,1,0,0,1"))
                  (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,0,1,0"))
                  (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1"))
                  (rule "eqSymm" (formula "20"))
                  (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "11")))
                  (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "10")))
                  (rule "replace_known_left" (formula "25") (term "0,1,0,0,0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")) (ifInst ""  (formula "11")) (ifInst ""  (formula "20")))
                  (rule "polySimp_elimSub" (formula "21") (term "0,0"))
                  (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "1,1,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,1"))
                  (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,0"))
                  (rule "mul_literals" (formula "23") (term "1,2,1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,1,0,0,1"))
                  (rule "mul_literals" (formula "23") (term "1,2,1,0,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "23") (term "2,1,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,2,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,2,1,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "23") (term "2,1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "23") (term "1,2,1,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "24") (term "2,1,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,2,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "24") (term "2,1,1,0"))
                  (rule "mul_literals" (formula "24") (term "1,2,1,1,0"))
                  (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,1,0,0,1"))
                  (rule "mul_literals" (formula "24") (term "1,2,1,0,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "24") (term "2,1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "24") (term "1,2,1,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,2,1,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,1,0"))
                  (rule "mul_literals" (formula "25") (term "1,2,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "25") (term "2,0,0,0,1,0"))
                  (rule "mul_literals" (formula "25") (term "1,2,0,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "25") (term "2,1,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,2,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0,1"))
                  (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_commuteGeq" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "24") (term "2,1,1,0"))
                  (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "25") (term "2,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "23") (term "2,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "23") (term "2,1,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "24") (term "2,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "24") (term "2,1,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0,0"))
                  (rule "disjointDefinition" (formula "23") (term "0"))
                  (rule "disjointDefinition" (formula "24") (term "0"))
                  (rule "disjointDefinition" (formula "25") (term "0"))
                  (rule "applyEq" (formula "24") (term "0,0,1,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "24") (term "0,1,2,1,1,0,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "24") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "0,0,1,0,0,0,0,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "32") (term "0,0,1,0,0,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "0,1,2,1,1,0,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "24") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "0,0,1,0,0,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "25") (term "0,0,1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "25") (term "1,2,1,0,1,0,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "25") (term "0,1,2,1,1,0,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "25") (term "2,1,0,0,1,0,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "2,1,1,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "24") (term "0,0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "32") (term "0,0,1,0,0,0,0,1,1,0,0,1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "24") (term "1,2,1,0,1,0,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "23") (term "1,2,1,0,1,0,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "20"))
                  (rule "applyEq" (formula "23") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "24") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "23") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "0,0,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "25") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "24") (term "2,1,0,0,1,0,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "23") (term "2,1,0,0,1,0,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "25") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "24") (term "0,0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "25") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "20"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,1"))
                  (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "2"))
                  (rule "andLeft" (formula "9"))
                  (rule "inEqSimp_homoInEq1" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0"))
                  (rule "add_literals" (formula "9") (term "0"))
                  (rule "leq_literals" (formula "9"))
                  (rule "closeFalse" (formula "9"))
               )
               (branch "CUT: self_103.tree = null FALSE"
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferencedFinal" (formula "30") (term "0") (ifseqformula "10") (ifseqformula "12"))
                  (rule "cut_direct" (formula "1") (term "0"))
                  (branch "CUT: self_103.sorted_splitters = null TRUE"
                      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "34")) (ifInst ""  (formula "12")) (ifInst ""  (formula "37")) (ifInst ""  (formula "14")) (ifInst ""  (formula "27")) (ifInst ""  (formula "23")) (ifInst ""  (formula "37")))
                      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "37")) (ifInst ""  (formula "14")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "36")))
                      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "37")) (ifInst ""  (formula "14")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "20")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "36")) (ifInst ""  (formula "35")))
                      (builtin "One Step Simplification" (formula "19"))
                      (builtin "One Step Simplification" (formula "18"))
                      (builtin "One Step Simplification" (formula "17"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "16"))
                     (rule "wellFormedAnon" (formula "25") (term "0,0"))
                     (rule "wellFormedAnon" (formula "24") (term "0,0"))
                     (rule "wellFormedAnon" (formula "26") (term "1,0,0,0"))
                     (rule "translateJavaSubInt" (formula "34") (term "1,1,0"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "22") (term "0,0"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,0,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "2,1,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "1,1,1"))
                     (rule "translateJavaSubInt" (formula "26") (term "2,0,0,0,1,1,0"))
                     (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "26") (term "2,1,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,1,1,0"))
                     (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "25") (term "2,1,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "25") (term "2,1,1,1,0"))
                     (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "34") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaMulInt" (formula "34") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaMulInt" (formula "34") (term "0,2,1,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "34") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaMulInt" (formula "34") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaMulInt" (formula "34") (term "0,2,1,1,1,0,0,1,1"))
                     (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,0,1,0"))
                     (rule "translateJavaMulInt" (formula "26") (term "0,2,1,0,0,1,1,0"))
                     (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "25") (term "2,1,1,0,1,0"))
                     (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,0,1,0"))
                     (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,1,0,0,1"))
                     (rule "eqSymm" (formula "21"))
                     (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "31"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "11")))
                     (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "12")))
                     (rule "replace_known_left" (formula "26") (term "1,1,0,0,0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")) (ifInst ""  (formula "11")) (ifInst ""  (formula "21")))
                     (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "0,0"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "1,1,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,0"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,1,0"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,1,0"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,0,0,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "1,2,0,0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,1,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,0,0,1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "20"))
                     (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,1,0"))
                     (rule "disjointDefinition" (formula "24") (term "0"))
                     (rule "disjointDefinition" (formula "25") (term "0"))
                     (rule "disjointDefinition" (formula "26") (term "0"))
                     (rule "applyEq" (formula "24") (term "0,0,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "34") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "25") (term "1,2,1,0,1,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "24") (term "0,0,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "26") (term "0,0,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "25") (term "0,0,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "34") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "25") (term "0,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "1,2,1,0,1,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "26") (term "1,2,1,0,1,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "26") (term "0,1,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "26") (term "0,1,2,1,1,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "24") (term "0,1,2,1,1,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "2,1,1,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "26") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "26") (term "2,1,0,0,1,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "25") (term "2,1,0,0,1,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "25") (term "0,0,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "25") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "25") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "24") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "25") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "26") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "26") (term "0,0,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "34") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "25") (term "0,1,2,1,1,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "24") (term "2,1,0,0,1,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "28"))
                     (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,1,1,0,0,1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "34") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "34") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "21"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0,1"))
                     (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "10"))
                     (rule "andLeft" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "CUT: self_103.sorted_splitters = null FALSE"
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferencedFinal" (formula "33") (term "0") (ifseqformula "11") (ifseqformula "2"))
                     (rule "cut_direct" (formula "1") (term "0"))
                     (branch "CUT: self_103.tree.tree = null TRUE"
                         (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "36")) (ifInst ""  (formula "13")) (ifInst ""  (formula "39")) (ifInst ""  (formula "15")) (ifInst ""  (formula "28")) (ifInst ""  (formula "24")) (ifInst ""  (formula "39")))
                         (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "39")) (ifInst ""  (formula "15")) (ifInst ""  (formula "13")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "38")))
                         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")) (ifInst ""  (formula "15")) (ifInst ""  (formula "13")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "21")) (ifInst ""  (formula "25")) (ifInst ""  (formula "28")) (ifInst ""  (formula "38")) (ifInst ""  (formula "37")))
                         (builtin "One Step Simplification" (formula "20"))
                         (builtin "One Step Simplification" (formula "19"))
                         (builtin "One Step Simplification" (formula "18"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "17"))
                        (rule "wellFormedAnon" (formula "26") (term "0,0"))
                        (rule "wellFormedAnon" (formula "25") (term "0,0"))
                        (rule "wellFormedAnon" (formula "27") (term "1,0,0,0"))
                        (rule "translateJavaSubInt" (formula "36") (term "1,1,0"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "23") (term "0,0"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,0,1,1,0,0,1,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "2,1,1,1,0,0,1,1"))
                        (rule "translateJavaSubInt" (formula "36") (term "1,1,1"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,0,0,0,1,1,0"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,1,1,0"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0"))
                        (rule "translateJavaMulInt" (formula "36") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaMulInt" (formula "36") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaMulInt" (formula "36") (term "0,2,1,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "36") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaMulInt" (formula "36") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaMulInt" (formula "36") (term "0,2,1,1,1,0,0,1,1"))
                        (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,0,1,0"))
                        (rule "translateJavaMulInt" (formula "27") (term "0,2,1,0,0,1,1,0"))
                        (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,0,1,0"))
                        (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,0,1,0"))
                        (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,1,0,0,1"))
                        (rule "eqSymm" (formula "22"))
                        (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "32"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "34"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "13")))
                        (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "12")))
                        (rule "replace_known_left" (formula "27") (term "1,0,0") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "18")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")))
                        (rule "polySimp_elimSub" (formula "36") (term "1,1,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "23") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,1,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,1,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,1,1"))
                        (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,1,0"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,0,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,2,0,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,0,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "21"))
                        (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,0,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,1,0"))
                        (rule "disjointDefinition" (formula "25") (term "0"))
                        (rule "disjointDefinition" (formula "26") (term "0"))
                        (rule "disjointDefinition" (formula "27") (term "0"))
                        (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "25") (term "1,2,1,0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "0,1,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "27") (term "1,2,1,0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "2,1,0,0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "0,1,2,1,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "0,1,0,0,0,0,1,1,0,0,1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "31"))
                        (rule "applyEq" (formula "27") (term "0,1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "2,1,0,0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "1,2,1,0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "0,1,2,1,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "0,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "0,1,0,0,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "27") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "0,1,0,0,0,0,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "2,1,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "0,1,0,0,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "0,1,0,0,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "0,1,2,1,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "2,1,0,0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "36") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "22"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0,0"))
                        (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "4"))
                        (rule "andLeft" (formula "11"))
                        (rule "inEqSimp_homoInEq1" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "1,1,0"))
                        (rule "times_zero_1" (formula "11") (term "1,0"))
                        (rule "add_literals" (formula "11") (term "0"))
                        (rule "leq_literals" (formula "11"))
                        (rule "closeFalse" (formula "11"))
                     )
                     (branch "CUT: self_103.tree.tree = null FALSE"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "17"))
                         (builtin "One Step Simplification" (formula "19"))
                         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")) (ifInst ""  (formula "12")) (ifInst ""  (formula "38")) (ifInst ""  (formula "14")) (ifInst ""  (formula "26")) (ifInst ""  (formula "22")) (ifInst ""  (formula "38")))
                         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "38")) (ifInst ""  (formula "14")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "18")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "37")))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "38")) (ifInst ""  (formula "14")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "23")) (ifInst ""  (formula "26")) (ifInst ""  (formula "37")) (ifInst ""  (formula "36")))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "17"))
                        (rule "wellFormedAnon" (formula "26") (term "0,0"))
                        (rule "wellFormedAnon" (formula "25") (term "0,0"))
                        (rule "wellFormedAnon" (formula "27") (term "1,0,0,0"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,1,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "27") (term "0,2,1,0,0,1,1,0"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,0,0,0,1,1,0"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0"))
                        (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,1,1,0"))
                        (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,0,1,0"))
                        (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,0,1,0"))
                        (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,0,1,0"))
                        (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "12")))
                        (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "12")))
                        (rule "replace_known_left" (formula "27") (term "1,1,0,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "12")))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,1,0"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,2,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "25") (term "2,1,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,2,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,0,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,2,0,0,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,0,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "2,1,1,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,2,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,0,0,1,1,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,0,0,0,1,1,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,1,1,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "2,1,1,0,1,0"))
                        (rule "disjointDefinition" (formula "26") (term "0"))
                        (rule "disjointDefinition" (formula "25") (term "0"))
                        (rule "disjointDefinition" (formula "27") (term "1,0"))
                        (rule "distributeIntersection" (formula "26") (term "0,0"))
                        (rule "distributeIntersection" (formula "25") (term "0,0"))
                        (rule "distributeIntersection" (formula "27") (term "0,1,0"))
                        (rule "unionEqualsEmpty" (formula "26") (term "0"))
                        (rule "unionEqualsEmpty" (formula "25") (term "0"))
                        (rule "distributeIntersection" (formula "27") (term "0,0,1,0"))
                        (rule "distributeIntersection" (formula "26") (term "0,0,0"))
                        (rule "distributeIntersection" (formula "25") (term "0,0,0"))
                        (rule "unionEqualsEmpty" (formula "27") (term "1,0"))
                        (rule "unionEqualsEmpty" (formula "26") (term "0,0"))
                        (rule "distributeIntersection" (formula "25") (term "0,0,0,0"))
                        (rule "unionEqualsEmpty" (formula "27") (term "0,1,0"))
                        (rule "unionEqualsEmpty" (formula "25") (term "0,0"))
                        (rule "distributeIntersection" (formula "27") (term "0,0,0,1,0"))
                        (rule "unionEqualsEmpty" (formula "25") (term "0,0,0"))
                        (rule "unionEqualsEmpty" (formula "27") (term "0,0,1,0"))
                        (rule "commuteUnion_2" (formula "26") (term "0,0,1,1,0,0,1"))
                        (rule "commuteUnion_2" (formula "25") (term "0,0,1,1,0,0,1"))
                        (rule "commuteUnion_2" (formula "27") (term "0,0,1,1,0,0,1"))
                        (rule "commuteUnion_2" (formula "26") (term "0,0,1,0,0,1,0"))
                        (rule "commuteUnion_2" (formula "25") (term "0,0,1,0,0,1,0"))
                        (rule "commuteUnion_2" (formula "27") (term "0,0,1,0,0,1,1,0"))
                        (rule "commuteUnion_2" (formula "26") (term "0,0,1,0,0,0,0,0"))
                        (rule "commuteUnion_2" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "commuteUnion_2" (formula "27") (term "0,0,1,0,0,1,0,1,0"))
                        (rule "commuteUnion_2" (formula "25") (term "0,0,1,0,0,1,0,0"))
                        (rule "commuteIntersection" (formula "25") (term "0,1,0,0,0"))
                        (rule "commuteUnion_2" (formula "25") (term "0,0,1,0,0,0,0,0,0"))
                        (rule "commuteIntersection" (formula "27") (term "0,1,0,0,1,0"))
                        (rule "commuteUnion_2" (formula "27") (term "0,0,1,0,0,0,0,0,1,0"))
                        (rule "commuteUnion_2" (formula "26") (term "1,1,0,0,1"))
                        (rule "commuteUnion_2" (formula "25") (term "1,1,0,0,1"))
                        (rule "commuteUnion_2" (formula "27") (term "1,1,0,0,1"))
                        (rule "commuteUnion_2" (formula "26") (term "1,0,0,1,0"))
                        (rule "commuteUnion_2" (formula "25") (term "1,0,0,1,0"))
                        (rule "commuteIntersection" (formula "27") (term "0,1,1,0"))
                        (rule "commuteIntersection" (formula "26") (term "0,0,0,0"))
                        (rule "commuteUnion_2" (formula "26") (term "0,0,1,0,0,1,0,0"))
                        (rule "commuteUnion_2" (formula "27") (term "1,0,0,1,0,1,0"))
                        (rule "commuteUnion_2" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "commuteUnion_2" (formula "25") (term "1,1,0,1,0,0,0"))
                        (rule "commuteUnion_2" (formula "25") (term "1,0,0,0,0,0,0"))
                        (rule "commuteUnion_2" (formula "27") (term "1,1,0,1,0,0,1,0"))
                        (rule "commuteUnion_2" (formula "27") (term "1,0,0,0,0,0,1,0"))
                        (rule "commuteIntersection" (formula "26") (term "0,1,0"))
                        (rule "commuteIntersection" (formula "25") (term "0,1,0"))
                        (rule "commuteUnion_2" (formula "27") (term "1,1,0,1,1,0"))
                        (rule "commuteUnion_2" (formula "26") (term "1,1,0,0,0,0"))
                        (rule "commuteIntersection" (formula "26") (term "0,1,0,0"))
                        (rule "commuteIntersection" (formula "27") (term "0,1,0,1,0"))
                        (rule "commuteIntersection" (formula "25") (term "0,1,0,0"))
                        (rule "commuteUnion_2" (formula "25") (term "0,0,1,1,0,1,0,0,0"))
                        (rule "commuteIntersection" (formula "25") (term "0,0,0,0,0"))
                        (rule "commuteUnion_2" (formula "27") (term "0,0,1,1,0,1,0,0,1,0"))
                        (rule "commuteIntersection" (formula "27") (term "0,0,0,0,1,0"))
                        (rule "translateJavaSubInt" (formula "23") (term "0,0"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "1,1,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,1,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,1,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "37") (term "1,1,0"))
                        (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,1,1"))
                        (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "eqSymm" (formula "22"))
                        (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "34"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "35"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "22")))
                        (rule "polySimp_elimSub" (formula "23") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "1,1,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,0,1,1,0,0,1,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,0,1,1,0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "1,1,0"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,1,1,0,0,1,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,1,1,0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "37") (term "2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "37") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "37") (term "0,2,1,1,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "37") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "37") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "37") (term "0,2,1,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "37") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "37") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,0,1,1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,1,1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,1,1,0,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "37") (term "2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,1,0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "21"))
                        (rule "applyEq" (formula "37") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "0,1,2,1,0,1,1,0,0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "2,1,0,0,0,1,1,0,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "2,1,0,0,0,1,1,0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "1,2,1,1,1,0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "1,2,1,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "2,0,0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "0,1,2,1,0,1,1,0,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "2,1,0,0,0,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "1,2,1,1,1,0,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "1,2,1,1,1,0,0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "1,2,1,1,1,0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "0,1,2,1,0,1,1,0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "0,1,2,1,0,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "2,1,0,0,0,1,1,0,0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "2,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "0,1,2,1,0,1,1,0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "22"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0,1"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "11"))
                        (rule "andLeft" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                  )
               )
            )
         )
      )
   )
)
(branch "Case 2"
    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "21")) (ifInst ""  (formula "1")) (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "16")) (ifInst ""  (formula "12")) (ifInst ""  (formula "24")) (userinteraction))
   (rule "impLeft" (formula "19") (userinteraction))
   (branch "Case 1"
      (rule "wellFormedAnon" (formula "20") (term "1,0,0"))
      (rule "translateJavaSubInt" (formula "20") (term "2,1,0,0,0,1,0,1"))
      (rule "translateJavaSubInt" (formula "20") (term "2,1,0,1,0,1"))
      (rule "translateJavaSubInt" (formula "20") (term "2,1,1,0,1"))
      (rule "translateJavaSubInt" (formula "20") (term "2,0,0,0,1,1"))
      (rule "translateJavaSubInt" (formula "20") (term "2,1,0,0,1,1"))
      (rule "translateJavaMulInt" (formula "20") (term "0,2,1,1,0,1"))
      (rule "translateJavaMulInt" (formula "20") (term "0,2,1,0,0,1,1"))
      (rule "replace_known_left" (formula "20") (term "0,1,0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "2")))
      (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,0,1"))
      (rule "mul_literals" (formula "20") (term "1,2,1,0,1,0,1"))
      (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,1,1"))
      (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,1,0,1"))
      (rule "polySimp_elimSub" (formula "20") (term "2,0,0,0,1,1"))
      (rule "polySimp_elimSub" (formula "20") (term "2,1,1,0,1"))
      (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,1,0,0,1,1"))
      (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,1,0,0,0,1,0,1"))
      (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,0,0,0,1,1"))
      (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,0,1"))
      (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,0,1"))
      (rule "polySimp_addComm0" (formula "20") (term "2,0,0,0,1,1"))
      (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,1,1"))
      (rule "polySimp_addComm0" (formula "20") (term "2,1,1,0,1"))
      (rule "disjointDefinition" (formula "20") (term "1"))
      (rule "distributeIntersection" (formula "20") (term "0,1"))
      (rule "unionEqualsEmpty" (formula "20") (term "1"))
      (rule "distributeIntersection" (formula "20") (term "0,0,1"))
      (rule "distributeIntersection" (formula "20") (term "0,0,0,1"))
      (rule "unionEqualsEmpty" (formula "20") (term "0,1"))
      (rule "unionEqualsEmpty" (formula "20") (term "0,0,1"))
      (rule "commuteUnion_2" (formula "20") (term "0,0,1,0,0,1,1"))
      (rule "commuteIntersection" (formula "20") (term "0,1,0,1"))
      (rule "commuteIntersection" (formula "20") (term "0,1,0,0,1"))
      (rule "commuteUnion_2" (formula "20") (term "1,0,0,0,0,0,1"))
      (rule "commuteIntersection" (formula "20") (term "0,1,1"))
      (rule "commuteUnion_2" (formula "20") (term "1,1,0,1,0,1"))
      (rule "commuteUnion_2" (formula "20") (term "1,1,0,1,0,0,1"))
      (rule "commuteIntersection" (formula "20") (term "0,0,0,0,1"))
      (rule "commuteUnion_2" (formula "20") (term "1,1,0,1,1"))
      (rule "commute_and_2" (formula "20"))
      (rule "commute_and_2" (formula "20") (term "1,0"))
      (rule "commute_and_2" (formula "20") (term "0,1,0"))
      (rule "commute_and_2" (formula "20") (term "1,0"))
      (rule "shift_paren_and" (formula "20") (term "0"))
      (rule "commute_and" (formula "20") (term "0,1,0,0"))
      (rule "commute_and_2" (formula "20") (term "1,0,0"))
      (rule "shift_paren_and" (formula "20") (term "0,0"))
      (rule "shift_paren_and" (formula "20") (term "0,0,0"))
      (rule "commute_and_2" (formula "20") (term "0"))
      (rule "cut_direct" (formula "20") (term "0,0,0,0,0"))
      (branch "CUT: buffers.<created> = TRUE TRUE"
         (rule "andRight" (formula "21"))
         (branch "Case 1"
            (rule "andRight" (formula "21"))
            (branch "Case 1"
               (rule "andRight" (formula "21"))
               (branch "Case 1"
                  (rule "andRight" (formula "21"))
                  (branch "Case 1"
                     (rule "andRight" (formula "21"))
                     (branch "Case 1"
                        (rule "closeTrue" (formula "21"))
                     )
                     (branch "Case 2"
                        (rule "equalityToElementOfRight" (formula "21") (inst "ov=ov") (inst "fv=fv"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "allRight" (formula "21") (inst "sk=ov_0"))
                        (rule "allRight" (formula "21") (inst "sk=fv_0"))
                        (rule "notRight" (formula "21"))
                        (rule "elementOfIntersect" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "elementOfSetMinus" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "notLeft" (formula "2"))
                        (rule "elementOfUnion" (formula "22"))
                        (rule "orRight" (formula "22"))
                        (rule "elementOfArrayRange" (formula "23") (inst "iv=iv"))
                        (rule "eqSymm" (formula "23") (term "0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1"))
                        (rule "elementOfUnion" (formula "22"))
                        (rule "orRight" (formula "22"))
                        (rule "elementOfUnion" (formula "22"))
                        (rule "orRight" (formula "22"))
                        (rule "elementOfArrayRange" (formula "24") (inst "iv=iv"))
                        (rule "eqSymm" (formula "24") (term "0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,1"))
                        (rule "elementOfArrayRange" (formula "23") (inst "iv=iv"))
                        (rule "eqSymm" (formula "23") (term "0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1"))
                        (rule "elementOfUnion" (formula "22"))
                        (rule "orRight" (formula "22"))
                        (rule "elementOfArrayRange" (formula "23") (inst "iv=iv"))
                        (rule "eqSymm" (formula "23") (term "0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1"))
                        (rule "elementOfUnion" (formula "22"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "closeTrue" (formula "22"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")) (ifInst ""  (formula "4")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "8")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "24")))
                      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "25")) (ifInst ""  (formula "4")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "8")) (ifInst ""  (formula "10")) (ifInst ""  (formula "14")) (ifInst ""  (formula "17")) (ifInst ""  (formula "24")) (ifInst ""  (formula "23")))
                      (builtin "One Step Simplification" (formula "9"))
                      (builtin "One Step Simplification" (formula "8"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "wellFormedAnon" (formula "16") (term "0,0"))
                     (rule "wellFormedAnon" (formula "15") (term "0,0"))
                     (rule "translateJavaSubInt" (formula "17") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "1,1,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "17") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "17") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "13") (term "0,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "1,1,1"))
                     (rule "translateJavaSubInt" (formula "16") (term "2,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "16") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "16") (term "2,1,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "16") (term "2,1,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "16") (term "2,1,1,1,0"))
                     (rule "translateJavaSubInt" (formula "16") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "16") (term "2,1,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0"))
                     (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "15") (term "2,1,1,0,1,0"))
                     (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaMulInt" (formula "17") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1,1"))
                     (rule "translateJavaMulInt" (formula "16") (term "0,2,1,1,0,1,0"))
                     (rule "translateJavaMulInt" (formula "16") (term "0,2,1,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,0,1,0"))
                     (rule "eqSymm" (formula "12"))
                     (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")))
                     (rule "true_left" (formula "8"))
                     (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "2")))
                     (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "3")))
                     (rule "polySimp_elimSub" (formula "16") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "1,1,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "16") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "1,1,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "16") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "14") (term "2,1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "14") (term "1,2,1,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "14") (term "2,1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,2,1,0,0,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "14") (term "2,1,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,2,1,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "14") (term "2,1,0,1,0"))
                     (rule "mul_literals" (formula "14") (term "1,2,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "14") (term "2,1,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,2,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "14") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "14") (term "1,2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "14") (term "2,1,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "14") (term "1,2,1,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "15") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "1,2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "15") (term "2,1,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "1,2,1,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "15") (term "2,1,1,0"))
                     (rule "mul_literals" (formula "15") (term "1,2,1,1,0"))
                     (rule "polySimp_elimSub" (formula "15") (term "2,1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "1,2,1,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "15") (term "2,1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,2,1,0,0,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "15") (term "2,1,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,2,1,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "15") (term "2,1,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,2,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "16") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "16") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "2,1,0,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "10"))
                     (rule "polySimp_addComm0" (formula "14") (term "2,1,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "14") (term "2,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "14") (term "2,1,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "15") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "15") (term "2,1,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "15") (term "2,1,1,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "2,1,0,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "2,1,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "16") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "14") (term "2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "14") (term "2,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "15") (term "2,1,1,0,0"))
                     (rule "disjointDefinition" (formula "14") (term "0"))
                     (rule "disjointDefinition" (formula "15") (term "0"))
                     (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "16"))
                     (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "16") (term "2,1,0,0,1,1,0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "17") (term "1,2,1,1,1,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "15") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "14") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "14") (term "1,2,1,0,1,0,0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "14") (term "0,1,2,1,1,0,0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "14") (term "2,1,1,0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "14") (term "2,1,0,0,1,0,0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "15") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "16") (term "1,2,1,0,1,1,0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "14") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "17") (term "2,1,0,0,1,1,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "14") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "16") (term "0,1,2,1,1,1,0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "15") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "15") (term "1,2,1,0,1,0,0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "15") (term "2,1,0,0,1,0,0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "15") (term "0,1,2,1,1,0,0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "17") (term "0,1,2,1,0,1,1,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "11"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,1"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,0"))
                     (rule "distributeIntersection" (formula "14") (term "0,0"))
                     (rule "distributeIntersection" (formula "15") (term "0,0"))
                     (rule "unionEqualsEmpty" (formula "14") (term "0"))
                     (rule "unionEqualsEmpty" (formula "15") (term "0"))
                     (rule "distributeIntersection" (formula "14") (term "0,0,0"))
                     (rule "distributeIntersection" (formula "15") (term "0,0,0"))
                     (rule "unionEqualsEmpty" (formula "14") (term "0,0"))
                     (rule "unionEqualsEmpty" (formula "15") (term "0,0"))
                     (rule "distributeIntersection" (formula "14") (term "0,0,0,0"))
                     (rule "unionEqualsEmpty" (formula "14") (term "0,0,0"))
                     (rule "commuteUnion_2" (formula "22") (term "0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "commuteUnion_2" (formula "22") (term "0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "commuteUnion_2" (formula "16") (term "0,0,1,1,0,0"))
                     (rule "commuteUnion_2" (formula "22") (term "0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "commuteUnion_2" (formula "15") (term "0,0,1,1,0,0,1"))
                     (rule "commuteUnion_2" (formula "14") (term "0,0,1,1,0,0,1"))
                     (rule "commuteUnion_2" (formula "22") (term "0,0,1,1,0,0,1,0,0,1"))
                     (rule "commuteUnion_2" (formula "22") (term "0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "commuteUnion_2" (formula "17") (term "0,0,1,1,0"))
                     (rule "commuteIntersection" (formula "14") (term "0,1,0"))
                     (rule "commuteIntersection" (formula "15") (term "0,1,0"))
                     (rule "commuteUnion_2" (formula "14") (term "0,0,1,0,0,1,0,0"))
                     (rule "commuteUnion_2" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "commuteIntersection" (formula "15") (term "0,0,0,0"))
                     (rule "commuteUnion_2" (formula "14") (term "0,0,1,0,0,1,0,0,0"))
                     (rule "commuteUnion_2" (formula "14") (term "1,0,0,0,0,0,0"))
                     (rule "commuteUnion_2" (formula "22") (term "1,1,0,0,0,0,0,0,1"))
                     (rule "commuteUnion_2" (formula "22") (term "1,1,0,0,0,1,0,1,0,1"))
                     (rule "commuteUnion_2" (formula "16") (term "1,1,0,0"))
                     (rule "commuteUnion_2" (formula "22") (term "1,1,0,0,1,0,0,0,1"))
                     (rule "commuteUnion_2" (formula "15") (term "1,1,0,0,1"))
                     (rule "commuteUnion_2" (formula "14") (term "1,1,0,0,1"))
                     (rule "commuteUnion_2" (formula "22") (term "1,1,0,0,1,0,0,1"))
                     (rule "commuteUnion_2" (formula "22") (term "1,1,0,1,0,1,0,1,0,1"))
                     (rule "commuteUnion_2" (formula "14") (term "1,1,0,1,0"))
                     (rule "commuteUnion_2" (formula "15") (term "1,1,0,1,0"))
                     (rule "commuteUnion_2" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "commuteUnion_2" (formula "15") (term "0,0,1,0,0,1,0,0"))
                     (rule "commuteUnion_2" (formula "15") (term "1,1,0,0,0,0"))
                     (rule "commuteUnion_2" (formula "14") (term "1,0,0,1,0,0,0"))
                     (rule "commuteIntersection" (formula "14") (term "0,0,0,0,0"))
                     (rule "commuteUnion_2" (formula "14") (term "0,0,1,1,0,1,0"))
                     (rule "commuteUnion_2" (formula "15") (term "0,0,1,1,0,1,0"))
                     (rule "commuteIntersection" (formula "14") (term "0,1,0,0"))
                     (rule "commuteIntersection" (formula "15") (term "0,1,0,0"))
                     (rule "commuteUnion_2" (formula "15") (term "0,0,1,1,0,0,0,0"))
                     (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "commuteIntersection" (formula "14") (term "0,1,0,0,0"))
                     (rule "commuteUnion_2" (formula "14") (term "0,0,1,1,0,0,0,0,0"))
                     (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "Definition_axiom_for_count_in_de_wiesler_Buffers" (formula "14") (term "1") (inst "b=b"))
                     (rule "translateJavaCastInt" (formula "14") (term "1"))
                     (rule "eqSymm" (formula "14"))
                     (rule "Definition_axiom_for_isClassifiedWith_in_de_wiesler_Buffers" (formula "20") (term "0,1,0,0,0") (inst "b=b"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaAddInt" (formula "20") (term "4,0,1,0,1,0,0,0"))
                     (rule "translateJavaMulInt" (formula "20") (term "3,0,1,0,1,0,0,0"))
                     (rule "translateJavaMulInt" (formula "20") (term "0,4,0,1,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "9") (inst "b=b"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "translateJavaMulInt" (formula "9") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "notLeft" (formula "10"))
                     (rule "andLeft" (formula "9"))
                     (rule "notLeft" (formula "10"))
                     (rule "notLeft" (formula "9"))
                     (rule "eqSymm" (formula "21"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "14"))
                     (rule "times_zero_1" (formula "11") (term "0,0"))
                     (rule "add_zero_left" (formula "11") (term "0"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_imp2or" (formula "28") (term "0,1,0,0"))
                     (rule "nnf_imp2or" (formula "28") (term "0,1,0,1"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "28") (term "0,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,1,0,1"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0,1"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0,1"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0,1"))
                     (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0,1"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0,1"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,1,0,1"))
                     (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0,1"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,1"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0,0"))
                     (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "19") (term "2,0"))
                     (rule "Contract_axiom_for_count_in_Buffers" (formula "19") (term "1"))
                      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")) (ifInst ""  (formula "1")))
                     (rule "wellFormedAnon" (formula "19") (term "1,0"))
                     (rule "replace_known_left" (formula "19") (term "1,1,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "2")))
                     (rule "true_left" (formula "19"))
                     (rule "Contract_axiom_for_count_in_Buffers" (formula "28") (term "0,1,0"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")) (ifInst ""  (formula "25")))
                     (rule "true_left" (formula "1"))
                     (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "translateJavaMod" (formula "17") (term "0"))
                     (rule "jmod_axiom" (formula "17") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "17"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                     (rule "newSym_eq" (formula "17") (inst "l=l_0") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(write, Z(0(#))))"))
                     (rule "times_zero_1" (formula "17") (term "0,1,1"))
                     (rule "times_zero_1" (formula "17") (term "1,1,1"))
                     (rule "add_literals" (formula "17") (term "1,1"))
                     (rule "add_zero_right" (formula "17") (term "1"))
                     (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "17"))
                     (rule "polySimp_homoEq" (formula "18"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                     (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "18"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1"))
                     (rule "polySimp_rightDist" (formula "18") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                     (rule "applyEq" (formula "29") (term "4,0,0,0,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "29") (term "4,0,0,0,0,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "29") (term "1,2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                     (rule "polySimp_addAssoc" (formula "29") (term "2,1,0,0,1,1,0,0,1,0,0,1"))
                     (rule "applyEq" (formula "29") (term "1,2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                     (rule "polySimp_addAssoc" (formula "29") (term "2,1,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "applyEq" (formula "29") (term "4,0,1,0,0,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "18"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0"))
                     (rule "applyEq" (formula "29") (term "1,2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                     (rule "polySimp_addAssoc" (formula "29") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "applyEq" (formula "24") (term "1,2,1,0,0,1,1,0") (ifseqformula "18"))
                     (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,1,1,0"))
                     (rule "applyEq" (formula "29") (term "4,0,1,0,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "29") (term "1,2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                     (rule "polySimp_addAssoc" (formula "29") (term "2,1,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "applyEq" (formula "29") (term "1,2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                     (rule "polySimp_addAssoc" (formula "29") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "applyEq" (formula "29") (term "0,1,1,1,0") (ifseqformula "18"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "29") (term "0,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                     (rule "applyEq" (formula "29") (term "0,1,1,1,1") (ifseqformula "18"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,1"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,1,1,1"))
                     (rule "polySimp_mulAssoc" (formula "29") (term "0,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,1,1,1,1"))
                     (rule "polySimp_addComm0" (formula "29") (term "1,1,1"))
                     (rule "applyEq" (formula "20") (term "1,2,1,0,0,1,1,0,1") (ifseqformula "18"))
                     (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,1,1,0,1"))
                     (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "19"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "translateJavaMulInt" (formula "19") (term "1,1,1,0,0,0,0"))
                     (rule "translateJavaSubInt" (formula "19") (term "0,2,0,1,0"))
                     (rule "translateJavaSubInt" (formula "19") (term "0,2,1,1,0"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "21"))
                     (rule "notLeft" (formula "19"))
                     (rule "notLeft" (formula "19"))
                     (rule "eqSymm" (formula "24"))
                     (rule "eqSymm" (formula "21"))
                     (rule "polySimp_elimSub" (formula "24") (term "0,2,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,2,0"))
                     (rule "eqSymm" (formula "24"))
                     (rule "polySimp_elimSub" (formula "24") (term "0,2,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,2,0"))
                     (rule "eqSymm" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "0,2,1"))
                     (rule "polySimp_addComm0" (formula "24") (term "0,2,0"))
                     (rule "inEqSimp_commuteLeq" (formula "19"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "16"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "16"))
                     (rule "applyEq" (formula "20") (term "1") (ifseqformula "16"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "19"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "14"))
                     (rule "mul_literals" (formula "18") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "18"))
                     (rule "leq_literals" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "Contract_axiom_for_count_in_Buffers" (formula "35") (term "0,1,1"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")) (ifInst ""  (formula "32")))
                     (rule "true_left" (formula "1"))
                     (rule "Definition_axiom_for_count_in_de_wiesler_Buffers" (formula "35") (term "0,1,1") (inst "b=b"))
                     (rule "translateJavaCastInt" (formula "35") (term "0,1,1"))
                     (rule "Definition_axiom_for_count_in_de_wiesler_Buffers" (formula "35") (term "0,1,0") (inst "b=b"))
                     (rule "translateJavaCastInt" (formula "35") (term "0,1,0"))
                     (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "35") (term "0,0,1,0,1,0,0"))
                     (rule "Contract_axiom_for_isClassOfSlice_in_Classifier" (formula "35") (term "0,1,0,1,0,0,0"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "3")) (ifInst ""  (formula "35")))
                     (rule "true_left" (formula "1"))
                     (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "35") (term "1,4,0,1,0,1,0,0,0"))
                     (rule "cnf_rightDist" (formula "12") (term "0"))
                     (rule "Definition_axiom_for_allElementsCounted_in_de_wiesler_Classifier" (formula "35") (term "0,0,0,0,0,0") (inst "b=b") (inst "b_0=b_0"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "translateJavaSubInt" (formula "35") (term "1,1,0,0,0,0,0"))
                     (rule "translateJavaCastInt" (formula "35") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "1,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,1,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,1,1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "35") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "applyEq" (formula "35") (term "1,0,1,0,0,0,0,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "35") (term "0,1,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "14"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,0,0,0,0,0"))
                     (rule "nnf_imp2or" (formula "35") (term "0,0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "Contract_axiom_for_count_in_Buffers" (formula "24") (term "1"))
                      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "32")) (ifInst ""  (formula "1")))
                     (rule "wellFormedAnon" (formula "24") (term "1,0"))
                     (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "3")))
                     (rule "true_left" (formula "24"))
                     (rule "Definition_axiom_for_count_in_de_wiesler_Buffers" (formula "24") (term "1") (inst "b=b"))
                     (rule "translateJavaCastInt" (formula "24") (term "1"))
                     (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "23"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "translateJavaSubInt" (formula "23") (term "3,0,1"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "24"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "25"))
                     (rule "notLeft" (formula "24"))
                     (rule "notLeft" (formula "23"))
                     (rule "polySimp_elimSub" (formula "29") (term "3,0"))
                     (rule "mul_literals" (formula "29") (term "1,3,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "3,0"))
                     (rule "inEqSimp_commuteLeq" (formula "28"))
                     (rule "inEqSimp_commuteLeq" (formula "26"))
                     (rule "inEqSimp_commuteLeq" (formula "27"))
                     (rule "inEqSimp_commuteLeq" (formula "23"))
                     (rule "applyEq" (formula "28") (term "1") (ifseqformula "25"))
                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                     (rule "applyEq" (formula "27") (term "1") (ifseqformula "25"))
                     (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "25"))
                     (rule "applyEq" (formula "21") (term "3,0") (ifseqformula "25"))
                     (rule "applyEq" (formula "31") (term "0") (ifseqformula "20"))
                     (rule "applyEq" (formula "22") (term "1,0,2,0") (ifseqformula "25"))
                     (rule "eqSymm" (formula "22"))
                     (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "25"))
                     (rule "applyEq" (formula "29") (term "1,3,0") (ifseqformula "25"))
                     (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "20"))
                     (rule "inEqSimp_commuteGeq" (formula "28"))
                     (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "20"))
                     (rule "applyEq" (formula "22") (term "1,0,2,0") (ifseqformula "25"))
                     (rule "eqSymm" (formula "22"))
                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                     (rule "mul_literals" (formula "26") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                     (rule "mul_literals" (formula "26") (term "1"))
                     (rule "distr_forallAnd" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "Definition_axiom_for_isClassOfSlice_in_de_wiesler_Classifier" (formula "44") (term "0,1,0,1,0,0,0") (inst "i=i_1"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "44") (term "0,1,0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "0,1,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1,0,0,1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,0,1,1,0,0,1,0,1,0,0,0"))
                     (rule "nnf_imp2or" (formula "44") (term "0,1,0,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "44") (term "0,0,1,0,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "0,1,0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,0,1,0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "44") (term "0,0,0,1,0,0,1,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "0,1,1,0,0,1,0,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "44") (term "1,0,0,0,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,0,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0,0,1,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,1,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0,1,0,1,0,0,0"))
                     (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "32") (term "2,1"))
                     (rule "eqSymm" (formula "32"))
                     (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "22") (term "0"))
                     (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "35"))
                      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "2")) (ifInst ""  (formula "23")))
                     (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "23") (term "0") (inst "i=i_1") (inst "j=j"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0"))
                     (rule "nnf_imp2or" (formula "23") (term "0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "23") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0"))
                     (rule "equalityToElementOfRight" (formula "40") (inst "ov=ov") (inst "fv=fv"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "allRight" (formula "40") (inst "sk=ov_0"))
                     (rule "allRight" (formula "40") (inst "sk=fv_0"))
                     (rule "notRight" (formula "40"))
                     (rule "elementOfIntersect" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "elementOfSetMinus" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "notLeft" (formula "2"))
                     (rule "elementOfUnion" (formula "35"))
                     (rule "orRight" (formula "35"))
                     (rule "elementOfUnion" (formula "35"))
                     (rule "orRight" (formula "35"))
                     (rule "elementOfArrayRange" (formula "37") (inst "iv=iv"))
                     (rule "eqSymm" (formula "37") (term "0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0,1"))
                     (rule "elementOfArrayRange" (formula "36") (inst "iv=iv"))
                     (rule "eqSymm" (formula "36") (term "0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,0,1"))
                     (rule "elementOfUnion" (formula "35"))
                     (rule "orRight" (formula "35"))
                     (rule "elementOfArrayRange" (formula "36") (inst "iv=iv"))
                     (rule "eqSymm" (formula "36") (term "0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,0,1"))
                     (rule "elementOfUnion" (formula "35"))
                     (rule "orRight" (formula "35"))
                     (rule "elementOfUnion" (formula "35"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "closeTrue" (formula "35"))
                  )
               )
               (branch "Case 2"
                  (rule "equalityToElementOfRight" (formula "21") (inst "ov=ov") (inst "fv=fv"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "allRight" (formula "21") (inst "sk=ov_0"))
                  (rule "allRight" (formula "21") (inst "sk=fv_0"))
                  (rule "notRight" (formula "21"))
                  (rule "elementOfIntersect" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                  (rule "andLeft" (formula "1"))
                  (rule "exLeft" (formula "2") (inst "sk=iv_0"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "inEqSimp_commuteLeq" (formula "3"))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                  (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "elementOfSetMinus" (formula "5"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "notLeft" (formula "5"))
                  (rule "elementOfUnion" (formula "25"))
                  (rule "orRight" (formula "25"))
                  (rule "elementOfArrayRangeConcrete" (formula "26"))
                  (rule "eqSymm" (formula "26") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0"))
                  (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "inEqSimp_homoInEq0" (formula "26") (term "1"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                  (rule "mul_literals" (formula "26") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                  (rule "elementOfUnion" (formula "25"))
                  (rule "orRight" (formula "25"))
                  (rule "elementOfArrayRangeConcrete" (formula "26"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "inEqSimp_commuteLeq" (formula "26") (term "0"))
                  (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "inEqSimp_leqRight" (formula "26"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "elementOfUnion" (formula "26"))
                  (rule "orRight" (formula "26"))
                  (rule "elementOfArrayRangeConcrete" (formula "27"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                  (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "1"))
                  (rule "elementOfUnion" (formula "26"))
                  (rule "orRight" (formula "26"))
                  (rule "elementOfArrayRangeConcrete" (formula "27"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                  (rule "mul_literals" (formula "27") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                  (rule "elementOfUnion" (formula "26"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "orRight" (formula "26"))
                  (rule "eqSymm" (formula "27"))
                  (rule "eqSymm" (formula "26"))
                  (rule "cut_direct" (formula "30") (term "1"))
                  (branch "CUT: self_103.num_buckets >= 1 + iv_0 TRUE"
                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")) (ifInst ""  (formula "10")) (ifInst ""  (formula "8")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "23")) (ifInst ""  (formula "34")))
                      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "35")) (ifInst ""  (formula "10")) (ifInst ""  (formula "8")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")) (ifInst ""  (formula "20")) (ifInst ""  (formula "23")) (ifInst ""  (formula "34")) (ifInst ""  (formula "33")))
                      (builtin "One Step Simplification" (formula "15"))
                      (builtin "One Step Simplification" (formula "14"))
                      (builtin "One Step Simplification" (formula "13"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "13"))
                     (rule "wellFormedAnon" (formula "22") (term "0,0"))
                     (rule "wellFormedAnon" (formula "21") (term "0,0"))
                     (rule "translateJavaSubInt" (formula "33") (term "1,1,0"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "19") (term "0,0"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "1,1,1"))
                     (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,0,1,0"))
                     (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,1,0,1,0"))
                     (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,0,1,0"))
                     (rule "eqSymm" (formula "18"))
                     (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "31"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "29")))
                     (rule "true_left" (formula "14"))
                     (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "9")))
                     (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "9")))
                     (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "18") (term "0,0"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "1,1,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,2,1,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "1,2,1,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "20") (term "2,1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "1,2,1,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "1,2,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "20") (term "2,1,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,2,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,1,0"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,1,0"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,1,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,1,0,0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "16"))
                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "2,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,1,1,0,0,1"))
                     (rule "disjointDefinition" (formula "20") (term "0"))
                     (rule "disjointDefinition" (formula "21") (term "0"))
                     (rule "applyEq" (formula "21") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "20") (term "1,2,1,0,1,0,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "20") (term "0,1,2,1,1,0,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "20") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "22"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "20") (term "2,1,0,0,1,0,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "20") (term "2,1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "21") (term "2,1,0,0,1,0,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "21") (term "1,2,1,0,1,0,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "21") (term "0,1,2,1,1,0,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "21") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "21") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "20") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "20") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "17"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,1"))
                     (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
                     (rule "andLeft" (formula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "6"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "1,1,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0"))
                     (rule "add_zero_right" (formula "6") (term "0"))
                     (rule "leq_literals" (formula "6"))
                     (rule "closeFalse" (formula "6"))
                  )
                  (branch "CUT: self_103.num_buckets >= 1 + iv_0 FALSE"
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "cut_direct" (formula "30") (term "1"))
                     (branch "CUT: self_103.num_buckets >= iv_0 TRUE"
                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "35")) (ifInst ""  (formula "11")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "34")))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")) (ifInst ""  (formula "11")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "17")) (ifInst ""  (formula "21")) (ifInst ""  (formula "24")) (ifInst ""  (formula "34")) (ifInst ""  (formula "33")))
                         (builtin "One Step Simplification" (formula "16"))
                         (builtin "One Step Simplification" (formula "15"))
                         (builtin "One Step Simplification" (formula "14"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "14"))
                        (rule "wellFormedAnon" (formula "23") (term "0,0"))
                        (rule "wellFormedAnon" (formula "22") (term "0,0"))
                        (rule "translateJavaSubInt" (formula "20") (term "0,0"))
                        (rule "translateJavaSubInt" (formula "33") (term "1,1,0"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,1"))
                        (rule "translateJavaSubInt" (formula "33") (term "1,1,1"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0"))
                        (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,1,0,0"))
                        (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,1"))
                        (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,0,1,0"))
                        (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,1"))
                        (rule "eqSymm" (formula "19"))
                        (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "29")))
                        (rule "true_left" (formula "15"))
                        (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "10")))
                        (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "10")))
                        (rule "polySimp_elimSub" (formula "19") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,2,1,0,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "1,1,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "23") (term "2,1,1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,2,1,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,1"))
                        (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,1,0"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,1,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "17"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,1,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "2,1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,1,0,0"))
                        (rule "disjointDefinition" (formula "21") (term "0"))
                        (rule "disjointDefinition" (formula "22") (term "0"))
                        (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "23") (term "1,2,1,0,1,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "1,2,1,0,1,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "23") (term "0,1,2,1,1,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "2,1,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "0,1,2,1,1,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "23") (term "2,1,0,0,1,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "2,1,0,0,1,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "22") (term "2,1,0,0,1,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "22") (term "1,2,1,0,1,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "22") (term "0,1,2,1,1,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "23"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,1"))
                        (rule "inEqSimp_contradInEq2" (formula "7") (ifseqformula "3"))
                        (rule "greater_literals" (formula "7") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "greater_literals" (formula "7") (term "0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "mul_literals" (formula "7") (term "0,1"))
                        (rule "inEqSimp_homoInEq1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "1,1,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0"))
                        (rule "add_zero_right" (formula "7") (term "0"))
                        (rule "leq_literals" (formula "7"))
                        (rule "closeFalse" (formula "7"))
                     )
                     (branch "CUT: self_103.num_buckets >= iv_0 FALSE"
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "false_right" (formula "31"))
                        (rule "inEqSimp_geqRight" (formula "30"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "cut_direct" (formula "29") (term "1,0"))
                        (branch "CUT: iv_0 >= begin TRUE"
                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "33")))
                            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "17")) (ifInst ""  (formula "21")) (ifInst ""  (formula "24")) (ifInst ""  (formula "33")) (ifInst ""  (formula "32")))
                            (builtin "One Step Simplification" (formula "16"))
                            (builtin "One Step Simplification" (formula "15"))
                            (builtin "One Step Simplification" (formula "14"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "14"))
                           (rule "wellFormedAnon" (formula "23") (term "0,0"))
                           (rule "wellFormedAnon" (formula "22") (term "0,0"))
                           (rule "translateJavaSubInt" (formula "32") (term "1,1,0"))
                           (rule "translateJavaSubInt" (formula "20") (term "0,0"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "1,1,1"))
                           (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0"))
                           (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "22") (term "2,1,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,1"))
                           (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                           (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                           (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
                           (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                           (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                           (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
                           (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,1,0,0"))
                           (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1"))
                           (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,0,1,0"))
                           (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,0,1,0"))
                           (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,1"))
                           (rule "eqSymm" (formula "19"))
                           (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "8")))
                           (rule "true_left" (formula "15"))
                           (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "10")))
                           (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "10")))
                           (rule "polySimp_elimSub" (formula "31") (term "1,1,0"))
                           (rule "polySimp_elimSub" (formula "19") (term "0,0"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,0,1,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "1,1,1"))
                           (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,2,1,0,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,0,1,0,0,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,0,1,1"))
                           (rule "polySimp_elimSub" (formula "23") (term "2,1,1,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,2,1,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,1,0,0,1"))
                           (rule "mul_literals" (formula "21") (term "1,2,1,0,1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "21") (term "2,1,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "1,2,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0"))
                           (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0"))
                           (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "21") (term "2,1,1,1,0,0,1"))
                           (rule "mul_literals" (formula "21") (term "1,2,1,1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0,1"))
                           (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0,1"))
                           (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "22") (term "2,1,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,2,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,2,1,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "22") (term "2,1,1,0"))
                           (rule "mul_literals" (formula "22") (term "1,2,1,1,0"))
                           (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "17"))
                           (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "2,1,1,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,0,1,0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "23") (term "2,1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "2,1,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "22") (term "2,1,1,0,0"))
                           (rule "disjointDefinition" (formula "21") (term "0"))
                           (rule "disjointDefinition" (formula "22") (term "0"))
                           (rule "applyEq" (formula "23") (term "1,2,1,0,1,1,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "21") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "21") (term "2,1,1,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "21") (term "0,1,2,1,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "21") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "21") (term "2,1,0,0,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "21") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "23") (term "0,1,2,1,1,1,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "23") (term "2,1,0,0,1,1,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "22") (term "2,1,0,0,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "22") (term "1,2,1,0,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "22") (term "0,1,2,1,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "21") (term "1,2,1,0,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "23"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0,1"))
                           (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0,1"))
                           (rule "inEqSimp_contradInEq4" (formula "3") (ifseqformula "7"))
                           (rule "greater_literals" (formula "3") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "greater_literals" (formula "3") (term "0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                        (branch "CUT: iv_0 >= begin FALSE"
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "false_right" (formula "30"))
                           (rule "inEqSimp_geqRight" (formula "29"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                           (rule "mul_literals" (formula "6") (term "0,0"))
                           (rule "add_zero_left" (formula "6") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "onlyCreatedObjectsAreReferencedFinal" (formula "4") (term "1") (ifseqformula "10") (ifseqformula "9"))
                           (rule "cut_direct" (formula "4") (term "0"))
                           (branch "CUT: buffers.buffer = null TRUE"
                               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "36")) (ifInst ""  (formula "14")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "35")))
                               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "36")) (ifInst ""  (formula "14")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "20")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "35")) (ifInst ""  (formula "34")))
                               (builtin "One Step Simplification" (formula "19"))
                               (builtin "One Step Simplification" (formula "18"))
                               (builtin "One Step Simplification" (formula "17"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "16"))
                              (rule "wellFormedAnon" (formula "25") (term "0,0"))
                              (rule "wellFormedAnon" (formula "24") (term "0,0"))
                              (rule "translateJavaSubInt" (formula "22") (term "0,0"))
                              (rule "translateJavaSubInt" (formula "33") (term "1,1,0"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,0,0,0,1"))
                              (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                              (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,1"))
                              (rule "translateJavaSubInt" (formula "33") (term "1,1,1"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,1,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,1,1,0"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "24") (term "2,1,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0"))
                              (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                              (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                              (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,1,0,0"))
                              (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                              (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,1"))
                              (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                              (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                              (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,1"))
                              (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,0,1,0"))
                              (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,1,0,0,1"))
                              (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,0,1,0"))
                              (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,1,0,0,1"))
                              (rule "eqSymm" (formula "21"))
                              (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "29")))
                              (rule "true_left" (formula "17"))
                              (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "12")))
                              (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "11")))
                              (rule "polySimp_elimSub" (formula "21") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "1,1,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,1"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,0,0"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,0,1,0,0"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,1,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,1,0"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,1,0"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,1,0,0,1"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,0,1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,1,0,0,1"))
                              (rule "mul_literals" (formula "23") (term "1,2,1,0,1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "23") (term "2,1,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,2,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,0"))
                              (rule "mul_literals" (formula "23") (term "1,2,1,0,1,0"))
                              (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,0,0"))
                              (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,2,1,0,1,0,0"))
                              (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
                              (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "23") (term "2,1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "23") (term "1,2,1,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "19"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,1,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "23") (term "2,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "2,1,1,1,0,0,1"))
                              (rule "disjointDefinition" (formula "24") (term "0"))
                              (rule "disjointDefinition" (formula "23") (term "0"))
                              (rule "applyEq" (formula "23") (term "1,2,1,0,1,0,0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "24") (term "0,1,1,0,0,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "25"))
                              (rule "applyEq" (formula "23") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "25") (term "2,1,0,0,1,1,0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "24") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "23") (term "0,1,1,0,0,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "23") (term "2,1,0,0,1,0,0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "23") (term "2,1,1,0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "23") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "0,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "24") (term "0,1,2,1,1,0,0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "24") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "26") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "23") (term "0,1,2,1,1,0,0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "0,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "32") (term "0,1,1,1,0,0,1,0,0,0,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "23") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "24") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "0,1,1,1,0,0,0,0,0,0,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "24") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "24") (term "2,1,0,0,1,0,0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "27") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "25") (term "0,1,2,1,1,1,0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "23") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "24") (term "1,2,1,0,1,0,0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "0,1,1,1,0,0,1,0,0,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "25") (term "1,2,1,0,1,1,0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "20"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,1"))
                              (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "9"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_literals" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "CUT: buffers.buffer = null FALSE"
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferencedFinal" (formula "31") (term "0") (ifseqformula "11") (ifseqformula "13"))
                              (rule "cut_direct" (formula "1") (term "0"))
                              (branch "CUT: self_103.sorted_splitters = null TRUE"
                                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "38")) (ifInst ""  (formula "15")) (ifInst ""  (formula "13")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "37")))
                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "38")) (ifInst ""  (formula "15")) (ifInst ""  (formula "13")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "21")) (ifInst ""  (formula "25")) (ifInst ""  (formula "28")) (ifInst ""  (formula "37")) (ifInst ""  (formula "36")))
                                  (builtin "One Step Simplification" (formula "20"))
                                  (builtin "One Step Simplification" (formula "19"))
                                  (builtin "One Step Simplification" (formula "18"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "17"))
                                 (rule "wellFormedAnon" (formula "26") (term "0,0"))
                                 (rule "wellFormedAnon" (formula "25") (term "0,0"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,0"))
                                 (rule "translateJavaSubInt" (formula "35") (term "1,1,0"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "27") (term "2,1,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,1,1,0,0,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,0,1,1,0,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "2,1,1,1,0,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "35") (term "1,1,1"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,0,1,0"))
                                 (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,1,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "35") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,1,0,0"))
                                 (rule "translateJavaMulInt" (formula "35") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "35") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "35") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "translateJavaMulInt" (formula "35") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "translateJavaMulInt" (formula "35") (term "0,2,1,1,1,0,0,1,1"))
                                 (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,1,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "25") (term "2,1,1,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "25") (term "2,1,1,0,1,0"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "31")))
                                 (rule "true_left" (formula "18"))
                                 (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "12")))
                                 (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "13")))
                                 (rule "polySimp_elimSub" (formula "22") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,2,1,0,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,1,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "26") (term "2,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,2,1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,2,1,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "24") (term "2,1,1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,2,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "24") (term "1,2,1,0,1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,0"))
                                 (rule "mul_literals" (formula "24") (term "1,2,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "24") (term "2,1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "24") (term "1,2,1,1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,1,0"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "20"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "26") (term "2,1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "24") (term "2,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "24") (term "2,1,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0,1"))
                                 (rule "disjointDefinition" (formula "24") (term "0"))
                                 (rule "disjointDefinition" (formula "25") (term "0"))
                                 (rule "applyEq" (formula "25") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "34") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "24") (term "2,1,0,0,1,0,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "25") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "25") (term "2,1,0,0,1,0,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "25") (term "0,1,2,1,1,0,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "24") (term "1,2,1,0,1,0,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "34") (term "0,1,1") (ifseqformula "26"))
                                 (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "25") (term "0,0,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "24") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "25") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "34") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "34") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "34") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "34") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "24") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "24") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "25") (term "1,2,1,0,1,0,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "34") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "26") (term "0,0,0,0,0,0,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "24") (term "0,1,2,1,1,0,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "25") (term "0,0,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "26") (term "2,1,0,0,1,1,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "34") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "24") (term "2,1,1,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "28"))
                                 (rule "applyEq" (formula "33") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "33") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "33") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "33") (term "0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "33") (term "0,0,0,0,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "24") (term "0,0,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "33") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "24") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "33") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "33") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "25") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "33") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "24") (term "0,0,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "33") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "33") (term "0,0,0,0,0,0,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "26") (term "0,1,2,1,1,1,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "21"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0,0"))
                                 (rule "inEqSimp_contradInEq2" (formula "10") (ifseqformula "4"))
                                 (rule "greater_literals" (formula "10") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "greater_literals" (formula "10") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1"))
                                 (rule "mul_literals" (formula "10") (term "0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0"))
                                 (rule "add_zero_right" (formula "10") (term "0"))
                                 (rule "leq_literals" (formula "10"))
                                 (rule "closeFalse" (formula "10"))
                              )
                              (branch "CUT: self_103.sorted_splitters = null FALSE"
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferencedFinal" (formula "34") (term "0,0") (ifseqformula "12") (ifseqformula "14"))
                                 (rule "cut_direct" (formula "1") (term "0"))
                                 (branch "CUT: self_103.tree = null TRUE"
                                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "40")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "39")))
                                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "40")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "22")) (ifInst ""  (formula "26")) (ifInst ""  (formula "29")) (ifInst ""  (formula "39")) (ifInst ""  (formula "38")))
                                     (builtin "One Step Simplification" (formula "21"))
                                     (builtin "One Step Simplification" (formula "20"))
                                     (builtin "One Step Simplification" (formula "19"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "18"))
                                    (rule "wellFormedAnon" (formula "27") (term "0,0"))
                                    (rule "wellFormedAnon" (formula "26") (term "0,0"))
                                    (rule "translateJavaSubInt" (formula "24") (term "0,0"))
                                    (rule "translateJavaSubInt" (formula "37") (term "1,1,0"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,0,0,0,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,0,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "37") (term "1,1,1"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "26") (term "2,1,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,1,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "28") (term "0,2,1,1,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,1,1"))
                                    (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,1,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,0,1,0"))
                                    (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,1,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,0,1,0"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "35"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "12")))
                                    (rule "true_left" (formula "19"))
                                    (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "13")))
                                    (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "13")))
                                    (rule "polySimp_elimSub" (formula "23") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,1,0"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,0,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,0,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0"))
                                    (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "25") (term "2,1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,2,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "21"))
                                    (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0,0"))
                                    (rule "disjointDefinition" (formula "26") (term "0"))
                                    (rule "disjointDefinition" (formula "25") (term "0"))
                                    (rule "applyEq" (formula "26") (term "1,2,1,0,1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "26") (term "0,0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "2,1,0,0,1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "26") (term "0,1,2,1,1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "27"))
                                    (rule "applyEq" (formula "25") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,0,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "27") (term "0,1,2,1,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "26") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "26") (term "0,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "27") (term "1,2,1,0,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "26") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "27") (term "0,0,1,0,0,0,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "25") (term "1,2,1,0,1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "25") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "25") (term "2,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "25") (term "2,1,0,0,1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "25") (term "0,1,2,1,1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "27") (term "2,1,0,0,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "26") (term "0,0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "36") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "22"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "11"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_literals" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                                 (branch "CUT: self_103.tree = null FALSE"
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferencedFinal" (formula "36") (term "0") (ifseqformula "13") (ifseqformula "1"))
                                    (rule "cut_direct" (formula "1") (term "0"))
                                    (branch "CUT: self_103.tree.tree = null TRUE"
                                        (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "42")) (ifInst ""  (formula "17")) (ifInst ""  (formula "15")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "41")))
                                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "42")) (ifInst ""  (formula "17")) (ifInst ""  (formula "15")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "23")) (ifInst ""  (formula "27")) (ifInst ""  (formula "30")) (ifInst ""  (formula "41")) (ifInst ""  (formula "40")))
                                        (builtin "One Step Simplification" (formula "22"))
                                        (builtin "One Step Simplification" (formula "21"))
                                        (builtin "One Step Simplification" (formula "20"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "19"))
                                       (rule "wellFormedAnon" (formula "28") (term "0,0"))
                                       (rule "wellFormedAnon" (formula "27") (term "0,0"))
                                       (rule "translateJavaSubInt" (formula "25") (term "0,0"))
                                       (rule "translateJavaSubInt" (formula "39") (term "1,1,0"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "29") (term "2,1,0,0,0,1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "29") (term "2,1,0,1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "29") (term "2,1,1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,1,1,0,0,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,0,1,1,0,0,1,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "2,1,1,1,0,0,1,1"))
                                       (rule "translateJavaSubInt" (formula "39") (term "1,1,1"))
                                       (rule "translateJavaMulInt" (formula "28") (term "0,2,1,1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,0,0,0,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,0,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,0,1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,0,0,0,1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,1,1,0,0,1"))
                                       (rule "translateJavaMulInt" (formula "39") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                       (rule "translateJavaMulInt" (formula "39") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                       (rule "translateJavaMulInt" (formula "29") (term "0,2,1,1,1,0,0"))
                                       (rule "translateJavaMulInt" (formula "39") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                       (rule "translateJavaMulInt" (formula "39") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "translateJavaMulInt" (formula "39") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "translateJavaMulInt" (formula "39") (term "0,2,1,1,1,0,0,1,1"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,1,1,0,0,1"))
                                       (rule "translateJavaMulInt" (formula "28") (term "0,2,1,1,0,1,0"))
                                       (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,0,1,0"))
                                       (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,1,0,0,1"))
                                       (rule "eqSymm" (formula "24"))
                                       (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "35")))
                                       (rule "true_left" (formula "20"))
                                       (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "15")))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "15")))
                                       (rule "polySimp_elimSub" (formula "24") (term "0,0"))
                                       (rule "polySimp_elimSub" (formula "38") (term "1,1,0"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,0,0,0,1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,0,0,0,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,0,1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,0,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "1,1,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0,0,1,1"))
                                       (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "26") (term "2,1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "26") (term "1,2,1,1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,0"))
                                       (rule "mul_literals" (formula "26") (term "1,2,1,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,2,1,0,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "26") (term "1,2,1,0,1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,2,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,0,1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,0,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,1,0"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,1,1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "0,2,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,0,0,0,1,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,0,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "22"))
                                       (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "26") (term "2,1,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,1,1,0,0,1"))
                                       (rule "disjointDefinition" (formula "26") (term "0"))
                                       (rule "disjointDefinition" (formula "27") (term "0"))
                                       (rule "applyEq" (formula "27") (term "0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "27") (term "0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "38") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "2,1,0,0,1,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "1,2,1,0,1,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "28") (term "0,1,0,0,0,0,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "26") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "38") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "0,1,2,1,1,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "1,2,1,0,1,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "26") (term "2,1,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,1,1,0,0,1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "38") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "2,1,0,0,1,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "0,1,2,1,1,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "28") (term "2,1,0,0,1,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "28") (term "0,1,2,1,1,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "28") (term "1,2,1,0,1,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "38") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "33"))
                                       (rule "applyEq" (formula "37") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "37") (term "0,1,1") (ifseqformula "28"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0,1"))
                                       (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0,1"))
                                       (rule "inEqSimp_contradInEq4" (formula "6") (ifseqformula "12"))
                                       (rule "greater_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "greater_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0"))
                                       (rule "add_literals" (formula "6") (term "0"))
                                       (rule "leq_literals" (formula "6"))
                                       (rule "closeFalse" (formula "6"))
                                    )
                                    (branch "CUT: self_103.tree.tree = null FALSE"
                                        (builtin "One Step Simplification" (formula "1"))
                                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "42")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "41")))
                                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "42")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "22")) (ifInst ""  (formula "26")) (ifInst ""  (formula "29")) (ifInst ""  (formula "41")) (ifInst ""  (formula "40")))
                                        (builtin "One Step Simplification" (formula "21"))
                                        (builtin "One Step Simplification" (formula "20"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "wellFormedAnon" (formula "28") (term "0,0"))
                                       (rule "wellFormedAnon" (formula "27") (term "0,0"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,0,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,0,0,0,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,0,0,0,1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "28") (term "2,1,0,1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,0,1,0"))
                                       (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                       (rule "translateJavaMulInt" (formula "28") (term "0,2,1,1,1,0,0,1"))
                                       (rule "translateJavaMulInt" (formula "28") (term "0,2,1,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "27") (term "2,1,1,0,1,0"))
                                       (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,1,0,0,1"))
                                       (rule "replace_known_left" (formula "28") (term "1,0,0") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "14")))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "15")))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,1,0"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,0,0,0,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,0,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,0,0,0,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,0,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,0,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,0,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,0,1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,0,1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,0,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,0"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "27") (term "2,1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "27") (term "1,2,1,1,1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "0,2,1,1,1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "0,2,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,0,0,0,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,0,0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,0,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "2,1,1,1,0,0,1"))
                                       (rule "disjointDefinition" (formula "28") (term "0"))
                                       (rule "disjointDefinition" (formula "27") (term "0"))
                                       (rule "distributeIntersection" (formula "28") (term "0,0"))
                                       (rule "distributeIntersection" (formula "27") (term "0,0"))
                                       (rule "distributeIntersection" (formula "28") (term "0,0,0"))
                                       (rule "distributeIntersection" (formula "27") (term "0,0,0"))
                                       (rule "unionEqualsEmpty" (formula "28") (term "0"))
                                       (rule "unionEqualsEmpty" (formula "27") (term "0"))
                                       (rule "unionEqualsEmpty" (formula "28") (term "0,0"))
                                       (rule "unionEqualsEmpty" (formula "27") (term "0,0"))
                                       (rule "distributeIntersection" (formula "27") (term "0,0,0,0"))
                                       (rule "unionEqualsEmpty" (formula "27") (term "0,0,0"))
                                       (rule "commuteUnion_2" (formula "28") (term "0,0,1,1,0,0,1"))
                                       (rule "commuteUnion_2" (formula "27") (term "0,0,1,1,0,0,1"))
                                       (rule "commuteUnion_2" (formula "28") (term "1,0,0,1,0"))
                                       (rule "commuteUnion_2" (formula "27") (term "0,0,1,0,0,1,0"))
                                       (rule "commuteIntersection" (formula "28") (term "0,1,0,0"))
                                       (rule "commuteUnion_2" (formula "28") (term "0,0,1,0,0,0,0,0"))
                                       (rule "commuteIntersection" (formula "27") (term "0,1,0,0"))
                                       (rule "commuteIntersection" (formula "27") (term "0,0,0,0,0"))
                                       (rule "commuteIntersection" (formula "27") (term "0,1,0,0,0"))
                                       (rule "commuteUnion_2" (formula "28") (term "1,1,0,0,1"))
                                       (rule "commuteUnion_2" (formula "27") (term "1,1,0,0,1"))
                                       (rule "commuteUnion_2" (formula "28") (term "0,0,1,0,0,1,0"))
                                       (rule "commuteUnion_2" (formula "27") (term "1,0,0,1,0"))
                                       (rule "commuteUnion_2" (formula "28") (term "0,0,1,1,0,1,0,0"))
                                       (rule "commuteUnion_2" (formula "28") (term "1,0,0,0,0,0"))
                                       (rule "commuteUnion_2" (formula "27") (term "1,1,0,1,0,0"))
                                       (rule "commuteUnion_2" (formula "27") (term "1,1,0,0,0,0,0"))
                                       (rule "commuteUnion_2" (formula "27") (term "1,1,0,1,0,0,0"))
                                       (rule "commuteIntersection" (formula "28") (term "0,1,0"))
                                       (rule "commuteIntersection" (formula "27") (term "0,1,0"))
                                       (rule "commuteUnion_2" (formula "28") (term "1,1,0,1,0,0"))
                                       (rule "commuteIntersection" (formula "28") (term "0,0,0,0"))
                                       (rule "commuteUnion_2" (formula "27") (term "0,0,1,1,0,1,0,0"))
                                       (rule "commuteUnion_2" (formula "27") (term "0,0,1,1,0,0,0,0,0"))
                                       (rule "commuteUnion_2" (formula "27") (term "0,0,1,1,0,1,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "25") (term "0,0"))
                                       (rule "translateJavaSubInt" (formula "29") (term "2,1,1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "40") (term "1,1,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,0,1,1,0,0,1,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,1,1,0,0,1,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "29") (term "2,1,0,1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "29") (term "2,1,0,0,0,1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,1,1,0,0,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "40") (term "1,1,0"))
                                       (rule "translateJavaMulInt" (formula "29") (term "0,2,1,1,1,0,0"))
                                       (rule "translateJavaMulInt" (formula "40") (term "0,2,1,1,1,0,0,1,1"))
                                       (rule "translateJavaMulInt" (formula "40") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "translateJavaMulInt" (formula "40") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "translateJavaMulInt" (formula "40") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                       (rule "translateJavaMulInt" (formula "40") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                       (rule "translateJavaMulInt" (formula "40") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                       (rule "eqSymm" (formula "24"))
                                       (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "13")))
                                       (rule "true_left" (formula "20"))
                                       (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "37"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "polySimp_elimSub" (formula "24") (term "0,0"))
                                       (rule "polySimp_elimSub" (formula "39") (term "1,1,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,0,1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,0,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,0,0,0,1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,0,0,0,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "1,1,0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "2,1,1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,2,1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,1,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,1,1,0,0,1,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,1,1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "39") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "39") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "0,2,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "0,2,1,1,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,0,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,0,0,0,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,1,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,1,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "22"))
                                       (rule "applyEq" (formula "39") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,1,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,0,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,1,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,1,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,1,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "28") (term "0,1,2,1,1,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "28") (term "1,2,1,0,1,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,1,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,1,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,0,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "28") (term "2,1,0,0,1,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,1,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "2,0,0,1,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,1,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,0,0,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "39") (term "0,1,1") (ifseqformula "28"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0,1"))
                                       (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0,0"))
                                       (rule "inEqSimp_contradInEq4" (formula "6") (ifseqformula "12"))
                                       (rule "greater_literals" (formula "6") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "greater_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0"))
                                       (rule "leq_literals" (formula "6"))
                                       (rule "closeFalse" (formula "6"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Case 2"
               (rule "equalityToElementOfRight" (formula "21") (inst "ov=ov") (inst "fv=fv"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "allRight" (formula "21") (inst "sk=ov_0"))
               (rule "allRight" (formula "21") (inst "sk=fv_0"))
               (rule "notRight" (formula "21"))
               (rule "elementOfIntersect" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
               (rule "andLeft" (formula "1"))
               (rule "exLeft" (formula "2") (inst "sk=iv_0"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_commuteLeq" (formula "3"))
               (rule "inEqSimp_homoInEq0" (formula "4"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
               (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "2"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "mul_literals" (formula "4") (term "0,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
               (rule "elementOfSetMinus" (formula "5"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "notLeft" (formula "5"))
               (rule "elementOfUnion" (formula "25"))
               (rule "orRight" (formula "25"))
               (rule "elementOfArrayRangeConcrete" (formula "26"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "inEqSimp_commuteLeq" (formula "26") (term "0"))
               (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "inEqSimp_leqRight" (formula "26"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "elementOfUnion" (formula "26"))
               (rule "orRight" (formula "26"))
               (rule "elementOfArrayRangeConcrete" (formula "27"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
               (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
               (rule "polySimp_addComm1" (formula "27") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1"))
               (rule "mul_literals" (formula "27") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
               (rule "elementOfUnion" (formula "26"))
               (rule "orRight" (formula "26"))
               (rule "elementOfArrayRangeConcrete" (formula "27"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
               (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "1"))
               (rule "elementOfUnion" (formula "26"))
               (rule "orRight" (formula "26"))
               (rule "elementOfArrayRangeConcrete" (formula "27"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
               (rule "polySimp_addComm1" (formula "27") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1"))
               (rule "mul_literals" (formula "27") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
               (rule "elementOfUnion" (formula "26"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "orRight" (formula "26"))
               (rule "eqSymm" (formula "26"))
               (rule "eqSymm" (formula "27"))
               (rule "cut_direct" (formula "30") (term "1"))
               (branch "CUT: self_103.num_buckets * 256 >= 1 + iv_0 TRUE"
                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")) (ifInst ""  (formula "10")) (ifInst ""  (formula "8")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "23")) (ifInst ""  (formula "34")))
                   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "35")) (ifInst ""  (formula "10")) (ifInst ""  (formula "8")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")) (ifInst ""  (formula "20")) (ifInst ""  (formula "23")) (ifInst ""  (formula "34")) (ifInst ""  (formula "33")))
                   (builtin "One Step Simplification" (formula "15"))
                   (builtin "One Step Simplification" (formula "14"))
                   (builtin "One Step Simplification" (formula "13"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "13"))
                  (rule "wellFormedAnon" (formula "22") (term "0,0"))
                  (rule "wellFormedAnon" (formula "21") (term "0,0"))
                  (rule "translateJavaSubInt" (formula "33") (term "1,1,0"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "19") (term "0,0"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,1"))
                  (rule "translateJavaSubInt" (formula "33") (term "1,1,1"))
                  (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0"))
                  (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "21") (term "2,1,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,0,1,0"))
                  (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0"))
                  (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1"))
                  (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                  (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                  (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0"))
                  (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,1"))
                  (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                  (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                  (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,1"))
                  (rule "translateJavaSubInt" (formula "22") (term "2,1,1,0,1,0"))
                  (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,1"))
                  (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,0,1,0"))
                  (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1"))
                  (rule "eqSymm" (formula "18"))
                  (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "7")))
                  (rule "true_left" (formula "14"))
                  (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "30"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "8")))
                  (rule "replace_known_left" (formula "20") (term "1,0,0") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "8")))
                  (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "18") (term "0,0"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "1,1,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,1"))
                  (rule "polySimp_elimSub" (formula "21") (term "2,1,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,2,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "21") (term "2,1,1,0"))
                  (rule "mul_literals" (formula "21") (term "1,2,1,1,0"))
                  (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,1,0,0,1"))
                  (rule "mul_literals" (formula "21") (term "1,2,1,0,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "21") (term "2,1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "21") (term "1,2,1,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "20") (term "2,1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "20") (term "1,2,1,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "20") (term "2,1,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,2,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,2,1,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,0"))
                  (rule "mul_literals" (formula "20") (term "1,2,1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,1,0,0,1"))
                  (rule "mul_literals" (formula "20") (term "1,2,1,0,1,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "16"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "2,1,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "20") (term "2,1,1,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "20") (term "2,1,1,0,0"))
                  (rule "disjointDefinition" (formula "21") (term "0"))
                  (rule "disjointDefinition" (formula "20") (term "0"))
                  (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "20") (term "2,1,0,0,1,0,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "20") (term "1,2,1,0,1,0,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "20") (term "2,1,1,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "20") (term "0,1,2,1,1,0,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "20") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "20") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "21") (term "1,2,1,0,1,0,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "21") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "21") (term "2,1,0,0,1,0,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "20") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "21") (term "0,1,2,1,1,0,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "21") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "21") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "22"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
                  (rule "andLeft" (formula "6"))
                  (rule "inEqSimp_homoInEq1" (formula "6"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "1,1,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0"))
                  (rule "add_zero_right" (formula "6") (term "0"))
                  (rule "leq_literals" (formula "6"))
                  (rule "closeFalse" (formula "6"))
               )
               (branch "CUT: self_103.num_buckets * 256 >= 1 + iv_0 FALSE"
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "false_right" (formula "31"))
                  (rule "inEqSimp_geqRight" (formula "30"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "cut_direct" (formula "30") (term "1"))
                  (branch "CUT: self_103.num_buckets >= iv_0 TRUE"
                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "35")) (ifInst ""  (formula "11")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "34")))
                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")) (ifInst ""  (formula "11")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "17")) (ifInst ""  (formula "21")) (ifInst ""  (formula "24")) (ifInst ""  (formula "34")) (ifInst ""  (formula "33")))
                      (builtin "One Step Simplification" (formula "16"))
                      (builtin "One Step Simplification" (formula "15"))
                      (builtin "One Step Simplification" (formula "14"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "14"))
                     (rule "wellFormedAnon" (formula "23") (term "0,0"))
                     (rule "wellFormedAnon" (formula "22") (term "0,0"))
                     (rule "translateJavaSubInt" (formula "20") (term "0,0"))
                     (rule "translateJavaSubInt" (formula "33") (term "1,1,0"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,1"))
                     (rule "translateJavaSubInt" (formula "33") (term "1,1,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0"))
                     (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,1"))
                     (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,0,1,0"))
                     (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,1"))
                     (rule "eqSymm" (formula "19"))
                     (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "31"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "8")))
                     (rule "true_left" (formula "15"))
                     (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "10")))
                     (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "9")))
                     (rule "polySimp_elimSub" (formula "19") (term "0,0"))
                     (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "1,1,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "23") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,1"))
                     (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,1,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,1,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "21") (term "2,1,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,2,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "17"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,1,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0,0"))
                     (rule "disjointDefinition" (formula "22") (term "0"))
                     (rule "disjointDefinition" (formula "21") (term "0"))
                     (rule "applyEq" (formula "21") (term "2,1,0,0,1,0,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "21") (term "1,2,1,0,1,0,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "21") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "21") (term "0,1,2,1,1,0,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "18"))
                     (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "21") (term "2,1,1,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "22") (term "2,1,0,0,1,0,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "21") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "23") (term "0,1,2,1,1,1,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "22") (term "1,2,1,0,1,0,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "22") (term "0,1,2,1,1,0,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "23") (term "1,2,1,0,1,1,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "21") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "23") (term "2,1,0,0,1,1,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "23"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,1"))
                     (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,1"))
                     (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "3"))
                     (rule "andLeft" (formula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "1,1,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0"))
                     (rule "add_zero_right" (formula "7") (term "0"))
                     (rule "leq_literals" (formula "7"))
                     (rule "closeFalse" (formula "7"))
                  )
                  (branch "CUT: self_103.num_buckets >= iv_0 FALSE"
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "cut_direct" (formula "29") (term "1,0"))
                     (branch "CUT: iv_0 >= begin TRUE"
                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "33")))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "17")) (ifInst ""  (formula "21")) (ifInst ""  (formula "24")) (ifInst ""  (formula "33")) (ifInst ""  (formula "32")))
                         (builtin "One Step Simplification" (formula "16"))
                         (builtin "One Step Simplification" (formula "15"))
                         (builtin "One Step Simplification" (formula "14"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "14"))
                        (rule "wellFormedAnon" (formula "23") (term "0,0"))
                        (rule "wellFormedAnon" (formula "22") (term "0,0"))
                        (rule "translateJavaSubInt" (formula "32") (term "1,1,0"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "20") (term "0,0"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                        (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "32") (term "2,1,1,1,0,0,1,1"))
                        (rule "translateJavaSubInt" (formula "32") (term "1,1,1"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,0,1,0"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,1,0,0"))
                        (rule "translateJavaMulInt" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
                        (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1"))
                        (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,0,1,0"))
                        (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,0,1,0"))
                        (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,1"))
                        (rule "eqSymm" (formula "19"))
                        (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "28")))
                        (rule "true_left" (formula "15"))
                        (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "9")))
                        (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "10")))
                        (rule "polySimp_elimSub" (formula "31") (term "1,1,0"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "19") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,0,1,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,2,1,0,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "31") (term "1,1,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "23") (term "2,1,1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,2,1,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,0,1,1"))
                        (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,1,0"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,1,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "17"))
                        (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,1,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "2,1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0,1"))
                        (rule "disjointDefinition" (formula "21") (term "0"))
                        (rule "disjointDefinition" (formula "22") (term "0"))
                        (rule "applyEq" (formula "21") (term "1,2,1,0,1,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "2,1,0,0,1,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                        (rule "applyEq" (formula "22") (term "2,1,0,0,1,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "22") (term "1,2,1,0,1,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "22") (term "0,1,2,1,1,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "2,1,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "0,1,2,1,1,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "23") (term "1,2,1,0,1,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "23") (term "0,1,2,1,1,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "23") (term "2,1,0,0,1,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "21") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "23"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "7"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "CUT: iv_0 >= begin FALSE"
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "false_right" (formula "30"))
                        (rule "inEqSimp_geqRight" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                        (rule "mul_literals" (formula "6") (term "0,0"))
                        (rule "add_zero_left" (formula "6") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "onlyCreatedObjectsAreReferencedFinal" (formula "4") (term "1") (ifseqformula "10") (ifseqformula "9"))
                        (rule "cut_direct" (formula "4") (term "0"))
                        (branch "CUT: buffers.indices = null TRUE"
                            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "36")) (ifInst ""  (formula "14")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "35")))
                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "36")) (ifInst ""  (formula "14")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "20")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "35")) (ifInst ""  (formula "34")))
                            (builtin "One Step Simplification" (formula "19"))
                            (builtin "One Step Simplification" (formula "18"))
                            (builtin "One Step Simplification" (formula "17"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "16"))
                           (rule "wellFormedAnon" (formula "25") (term "0,0"))
                           (rule "wellFormedAnon" (formula "24") (term "0,0"))
                           (rule "translateJavaSubInt" (formula "22") (term "0,0"))
                           (rule "translateJavaSubInt" (formula "33") (term "1,1,0"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,0,0,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,0,1,1,0,0,1,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,0,1,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0,0,1,1"))
                           (rule "translateJavaSubInt" (formula "33") (term "1,1,1"))
                           (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "25") (term "2,1,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "25") (term "2,1,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "25") (term "2,1,1,1,0"))
                           (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,0,1,0"))
                           (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "24") (term "2,1,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0"))
                           (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0,0,1"))
                           (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                           (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                           (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,0,0,1"))
                           (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,1,0,0"))
                           (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                           (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                           (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0,0,1,1"))
                           (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,0,1,0"))
                           (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0,0,1"))
                           (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,0,1,0"))
                           (rule "eqSymm" (formula "21"))
                           (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "29"))
                            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "10")))
                           (rule "true_left" (formula "17"))
                           (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "12")))
                           (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "11")))
                           (rule "polySimp_elimSub" (formula "21") (term "0,0"))
                           (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,0,1,1,0,0,1,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "1,1,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "2,1,1,1,0,0,1,1"))
                           (rule "mul_literals" (formula "32") (term "1,2,1,1,1,0,0,1,1"))
                           (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "1,2,1,0,1,0"))
                           (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,2,1,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "23") (term "2,1,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,2,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "23") (term "2,1,1,1,0,0,1"))
                           (rule "mul_literals" (formula "23") (term "1,2,1,1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,1,0,0,1"))
                           (rule "mul_literals" (formula "23") (term "1,2,1,0,1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "24") (term "2,1,1,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,2,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,2,1,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "24") (term "2,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "1,2,1,1,0"))
                           (rule "polySimp_elimSub" (formula "24") (term "2,1,1,1,0,0,1"))
                           (rule "mul_literals" (formula "24") (term "1,2,1,1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,1,0,0,1"))
                           (rule "mul_literals" (formula "24") (term "1,2,1,0,1,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,0,1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "19"))
                           (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "2,1,1,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,1,1,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "23") (term "2,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "2,1,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "24") (term "2,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "2,1,1,1,0,0,1"))
                           (rule "disjointDefinition" (formula "23") (term "0"))
                           (rule "disjointDefinition" (formula "24") (term "0"))
                           (rule "applyEq" (formula "23") (term "0,1,2,1,1,0,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "23") (term "0,1,0,1,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "23") (term "1,2,1,0,1,0,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "25") (term "2,1,0,0,1,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "25") (term "0,1,0,1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "24") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "24") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "27") (term "1") (ifseqformula "4"))
                           (rule "applyEq" (formula "26") (term "1") (ifseqformula "4"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "23") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "24") (term "1,2,1,0,1,0,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "23") (term "2,1,0,0,1,0,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "23") (term "2,1,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "23") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "24") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "24") (term "0,1,2,1,1,0,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "23") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "24") (term "2,1,0,0,1,0,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,0,1,1,0,0,1,0,0,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "24") (term "0,1,0,1,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "25") (term "0,1,2,1,1,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "32") (term "0,1,0,1,1,0,0,1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "32") (term "0,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "25") (term "1,2,1,0,1,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "4"))
                           (rule "applyEq" (formula "24") (term "0,1,0,1,1,0,0,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "23") (term "0,1,0,1,1,0,0,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "25"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,1"))
                           (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,1"))
                           (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "2"))
                           (rule "andLeft" (formula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,1,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0"))
                           (rule "add_literals" (formula "9") (term "0"))
                           (rule "leq_literals" (formula "9"))
                           (rule "closeFalse" (formula "9"))
                        )
                        (branch "CUT: buffers.indices = null FALSE"
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "onlyCreatedObjectsAreReferencedFinal" (formula "31") (term "0") (ifseqformula "11") (ifseqformula "13"))
                           (rule "cut_direct" (formula "1") (term "0"))
                           (branch "CUT: self_103.sorted_splitters = null TRUE"
                               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "38")) (ifInst ""  (formula "15")) (ifInst ""  (formula "13")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "37")))
                               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "38")) (ifInst ""  (formula "15")) (ifInst ""  (formula "13")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "21")) (ifInst ""  (formula "25")) (ifInst ""  (formula "28")) (ifInst ""  (formula "37")) (ifInst ""  (formula "36")))
                               (builtin "One Step Simplification" (formula "20"))
                               (builtin "One Step Simplification" (formula "19"))
                               (builtin "One Step Simplification" (formula "18"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "17"))
                              (rule "wellFormedAnon" (formula "26") (term "0,0"))
                              (rule "wellFormedAnon" (formula "25") (term "0,0"))
                              (rule "translateJavaSubInt" (formula "23") (term "0,0"))
                              (rule "translateJavaSubInt" (formula "35") (term "1,1,0"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,1,1,0,0,0,0,0,0,1"))
                              (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "27") (term "2,1,1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,1,1,0,0,1,0,0,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,0,1,1,0,0,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,1,1,0,0,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,0,0,0,1,1,0,0,1,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,0,1,1,0,0,1,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "2,1,1,1,0,0,1,1"))
                              (rule "translateJavaSubInt" (formula "35") (term "1,1,1"))
                              (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0"))
                              (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "26") (term "2,1,1,0,1,0"))
                              (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                              (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,0,1,0"))
                              (rule "translateJavaMulInt" (formula "25") (term "0,2,1,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,0,1,1,0"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                              (rule "translateJavaMulInt" (formula "35") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                              (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,1,0,0"))
                              (rule "translateJavaMulInt" (formula "35") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                              (rule "translateJavaMulInt" (formula "35") (term "0,2,1,1,1,0,0,1,0,0,1"))
                              (rule "translateJavaMulInt" (formula "35") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                              (rule "translateJavaMulInt" (formula "35") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                              (rule "translateJavaMulInt" (formula "35") (term "0,2,1,1,1,0,0,1,1"))
                              (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,1,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "25") (term "2,1,1,0,1,0"))
                              (rule "eqSymm" (formula "22"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "11")))
                              (rule "true_left" (formula "18"))
                              (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "32"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "13")))
                              (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "13")))
                              (rule "polySimp_elimSub" (formula "22") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,1,0,0"))
                              (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,1,0,0"))
                              (rule "mul_literals" (formula "26") (term "1,2,1,0,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,0,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "1,1,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,0,0,0,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_elimSub" (formula "26") (term "2,1,1,1,0,0"))
                              (rule "mul_literals" (formula "26") (term "1,2,1,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,1,0,0,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "34") (term "2,1,1,1,0,0,1,1"))
                              (rule "mul_literals" (formula "34") (term "1,2,1,1,1,0,0,1,1"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,1,0,0,1"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,0,1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,0,1,0,0"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,0,0"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,1,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,0"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,0,1,0"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "24") (term "2,1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "24") (term "1,2,1,1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0,1"))
                              (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,0,0"))
                              (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "25") (term "2,1,1,0"))
                              (rule "mul_literals" (formula "25") (term "1,2,1,1,0"))
                              (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0,0"))
                              (rule "polySimp_elimSub" (formula "25") (term "2,1,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,2,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                              (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,0,1,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "20"))
                              (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,0,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "26") (term "2,1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,1,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "2,1,1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,1,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0,0"))
                              (rule "disjointDefinition" (formula "24") (term "0"))
                              (rule "disjointDefinition" (formula "25") (term "0"))
                              (rule "applyEq" (formula "25") (term "0,0,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "1,2,1,0,1,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "25") (term "0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "34") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "24") (term "2,1,0,0,1,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "34") (term "0,1,1") (ifseqformula "26"))
                              (rule "applyEq" (formula "26") (term "0,0,0,0,0,0,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "2,1,0,0,1,1,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "24") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "24") (term "0,0,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "0,1,2,1,1,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "25") (term "2,1,0,0,1,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "24") (term "0,1,2,1,1,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "24") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "34") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                              (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "24") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "34") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "24") (term "1,2,1,0,1,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "34") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "34") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "24") (term "2,1,1,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "21"))
                              (rule "applyEq" (formula "34") (term "0,0,0,0,0,0,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "0,1,2,1,1,1,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "34") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "34") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "34") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "24") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "24") (term "0,0,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "34") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "34") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "34") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "28"))
                              (rule "applyEq" (formula "25") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "33") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "33") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "25") (term "0,0,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "33") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "33") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "33") (term "0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "21"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0,1"))
                              (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "3"))
                              (rule "andLeft" (formula "10"))
                              (rule "inEqSimp_homoInEq1" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,1,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0"))
                              (rule "add_zero_right" (formula "10") (term "0"))
                              (rule "leq_literals" (formula "10"))
                              (rule "closeFalse" (formula "10"))
                           )
                           (branch "CUT: self_103.sorted_splitters = null FALSE"
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferencedFinal" (formula "34") (term "0,0") (ifseqformula "12") (ifseqformula "14"))
                              (rule "cut_direct" (formula "1") (term "0"))
                              (branch "CUT: self_103.tree = null TRUE"
                                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "40")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "39")))
                                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "40")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "22")) (ifInst ""  (formula "26")) (ifInst ""  (formula "29")) (ifInst ""  (formula "39")) (ifInst ""  (formula "38")))
                                  (builtin "One Step Simplification" (formula "21"))
                                  (builtin "One Step Simplification" (formula "20"))
                                  (builtin "One Step Simplification" (formula "19"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "18"))
                                 (rule "wellFormedAnon" (formula "27") (term "0,0"))
                                 (rule "wellFormedAnon" (formula "26") (term "0,0"))
                                 (rule "translateJavaSubInt" (formula "24") (term "0,0"))
                                 (rule "translateJavaSubInt" (formula "37") (term "1,1,0"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "28") (term "2,1,0,0,0,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "28") (term "2,1,0,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "28") (term "2,1,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,0,1,1,0,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "2,1,1,1,0,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "37") (term "1,1,1"))
                                 (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "27") (term "2,1,1,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "27") (term "2,1,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "27") (term "2,1,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,1,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "26") (term "2,1,0,1,1,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "28") (term "0,2,1,1,1,0,0"))
                                 (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "translateJavaMulInt" (formula "37") (term "0,2,1,1,1,0,0,1,1"))
                                 (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,1,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,0,1,0"))
                                 (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,1,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "26") (term "0,2,1,1,0,1,0"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "12")))
                                 (rule "true_left" (formula "19"))
                                 (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "14")))
                                 (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "13")))
                                 (rule "polySimp_elimSub" (formula "23") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "36") (term "1,1,0"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,2,1,0,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "1,1,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "27") (term "2,1,1,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,2,1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "36") (term "1,2,1,1,1,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0"))
                                 (rule "mul_literals" (formula "26") (term "1,2,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "26") (term "2,1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "26") (term "1,2,1,1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "26") (term "1,2,1,0,1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,2,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,2,1,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "21"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "27") (term "2,1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "2,1,1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "26") (term "2,1,1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0,0"))
                                 (rule "disjointDefinition" (formula "25") (term "0"))
                                 (rule "disjointDefinition" (formula "26") (term "0"))
                                 (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,0,1,1,0,0,1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,0,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "25") (term "2,1,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "26") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "27") (term "0,0,1,0,0,0,0,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "27") (term "2,1,0,0,1,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "26") (term "0,0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "26") (term "1,2,1,0,1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "25") (term "0,1,2,1,1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "25") (term "1,2,1,0,1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "27") (term "1,2,1,0,1,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "27") (term "0,1,2,1,1,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "26") (term "0,1,2,1,1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "26") (term "2,1,0,0,1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "26") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "26") (term "0,0,1,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "25") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "25") (term "2,1,0,0,1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "25") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "26") (term "0,0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "25") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "27"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "11"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_literals" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                              (branch "CUT: self_103.tree = null FALSE"
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferencedFinal" (formula "36") (term "0") (ifseqformula "13") (ifseqformula "1"))
                                 (rule "cut_direct" (formula "1") (term "0"))
                                 (branch "CUT: self_103.tree.tree = null TRUE"
                                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "42")) (ifInst ""  (formula "17")) (ifInst ""  (formula "15")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "41")))
                                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "42")) (ifInst ""  (formula "17")) (ifInst ""  (formula "15")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "23")) (ifInst ""  (formula "27")) (ifInst ""  (formula "30")) (ifInst ""  (formula "41")) (ifInst ""  (formula "40")))
                                     (builtin "One Step Simplification" (formula "22"))
                                     (builtin "One Step Simplification" (formula "21"))
                                     (builtin "One Step Simplification" (formula "20"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "19"))
                                    (rule "wellFormedAnon" (formula "28") (term "0,0"))
                                    (rule "wellFormedAnon" (formula "27") (term "0,0"))
                                    (rule "translateJavaSubInt" (formula "39") (term "1,1,0"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "25") (term "0,0"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "29") (term "2,1,0,0,0,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,1,1,0,0,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "29") (term "2,1,0,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "29") (term "2,1,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,0,1,1,0,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "2,1,1,1,0,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "39") (term "1,1,1"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "28") (term "0,2,1,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,0,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,0,0,0,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,0,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,0,1,0"))
                                    (rule "translateJavaMulInt" (formula "39") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "39") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "39") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "39") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "translateJavaMulInt" (formula "29") (term "0,2,1,1,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "39") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "translateJavaMulInt" (formula "39") (term "0,2,1,1,1,0,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,1,1,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "28") (term "0,2,1,1,0,1,0"))
                                    (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,0,1,0"))
                                    (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,1,0,0,1"))
                                    (rule "eqSymm" (formula "24"))
                                    (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "35"))
                                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "13")))
                                    (rule "true_left" (formula "20"))
                                    (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "35"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "14")))
                                    (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "15")))
                                    (rule "polySimp_elimSub" (formula "38") (term "1,1,0"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "24") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,0,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,0,0,0,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,0,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,0,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,2,1,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,0,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,2,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,0,0,0,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,0,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "22"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "2,1,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,1,1,0,0,1"))
                                    (rule "disjointDefinition" (formula "26") (term "0"))
                                    (rule "disjointDefinition" (formula "27") (term "0"))
                                    (rule "applyEq" (formula "26") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "38") (term "0,1,1") (ifseqformula "28"))
                                    (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "28") (term "0,1,2,1,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "27") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "38") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "38") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "38") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "38") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "38") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "38") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "38") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "2,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "2,1,0,0,1,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "38") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "1,2,1,0,1,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "0,1,2,1,1,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "28") (term "1,2,1,0,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "1,2,1,0,1,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "38") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "27") (term "0,1,0,0,0,0,1,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "27") (term "0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "28") (term "2,1,0,0,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "2,1,0,0,1,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "0,1,2,1,1,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "38") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "38") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "0,1,0,0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "28") (term "0,1,0,0,0,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "applyEq" (formula "37") (term "0,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "37") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "37") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "37") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "37") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "23"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "12"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_literals" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                                 (branch "CUT: self_103.tree.tree = null FALSE"
                                     (builtin "One Step Simplification" (formula "1"))
                                     (builtin "One Step Simplification" (formula "19"))
                                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "42")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "18")) (ifInst ""  (formula "20")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "41")))
                                     (builtin "One Step Simplification" (formula "20"))
                                     (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "41")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "18")) (ifInst ""  (formula "21")) (ifInst ""  (formula "25")) (ifInst ""  (formula "28")) (ifInst ""  (formula "40")) (ifInst ""  (formula "39")))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "19"))
                                    (rule "wellFormedAnon" (formula "28") (term "0,0"))
                                    (rule "wellFormedAnon" (formula "27") (term "0,0"))
                                    (rule "translateJavaMulInt" (formula "28") (term "0,2,1,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,0,0,0,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,0,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,0,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,0,0,1,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "27") (term "2,1,0,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "28") (term "2,1,1,0,1,0"))
                                    (rule "translateJavaMulInt" (formula "28") (term "0,2,1,1,1,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,1,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "27") (term "0,2,1,1,0,1,0"))
                                    (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "15")))
                                    (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "15")))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,1,0"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,0,0,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,0,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,0,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,0,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,0,1,0"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "27") (term "2,1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "1,2,1,1,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,2,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,2,1,1,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,0,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "2,1,1,1,0,0,1"))
                                    (rule "disjointDefinition" (formula "28") (term "0"))
                                    (rule "disjointDefinition" (formula "27") (term "0"))
                                    (rule "distributeIntersection" (formula "28") (term "0,0"))
                                    (rule "distributeIntersection" (formula "27") (term "0,0"))
                                    (rule "distributeIntersection" (formula "28") (term "0,0,0"))
                                    (rule "unionEqualsEmpty" (formula "27") (term "0"))
                                    (rule "unionEqualsEmpty" (formula "28") (term "0"))
                                    (rule "distributeIntersection" (formula "27") (term "0,0,0"))
                                    (rule "unionEqualsEmpty" (formula "28") (term "0,0"))
                                    (rule "distributeIntersection" (formula "27") (term "0,0,0,0"))
                                    (rule "unionEqualsEmpty" (formula "27") (term "0,0"))
                                    (rule "unionEqualsEmpty" (formula "27") (term "0,0,0"))
                                    (rule "commuteUnion_2" (formula "28") (term "0,0,1,1,0,0,1"))
                                    (rule "commuteUnion_2" (formula "27") (term "0,0,1,1,0,0,1"))
                                    (rule "commuteUnion_2" (formula "27") (term "1,0,0,1,0"))
                                    (rule "commuteUnion_2" (formula "28") (term "1,0,0,1,0"))
                                    (rule "commuteUnion_2" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "commuteIntersection" (formula "28") (term "0,1,0,0"))
                                    (rule "commuteIntersection" (formula "27") (term "0,1,0,0"))
                                    (rule "commuteIntersection" (formula "27") (term "0,0,0,0,0"))
                                    (rule "commuteIntersection" (formula "27") (term "0,1,0,0,0"))
                                    (rule "commuteUnion_2" (formula "28") (term "1,1,0,0,1"))
                                    (rule "commuteUnion_2" (formula "27") (term "1,1,0,0,1"))
                                    (rule "commuteIntersection" (formula "27") (term "0,1,0"))
                                    (rule "commuteUnion_2" (formula "28") (term "0,0,1,0,0,1,0"))
                                    (rule "commuteUnion_2" (formula "28") (term "0,0,1,0,0,0,0,0"))
                                    (rule "commuteUnion_2" (formula "28") (term "1,1,0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "27") (term "0,0,1,1,0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "27") (term "0,0,1,1,0,0,0,0,0"))
                                    (rule "commuteUnion_2" (formula "27") (term "0,0,1,1,0,1,0,0,0"))
                                    (rule "commuteUnion_2" (formula "27") (term "0,0,1,1,0,1,0"))
                                    (rule "commuteIntersection" (formula "28") (term "0,1,0"))
                                    (rule "commuteIntersection" (formula "28") (term "0,0,0,0"))
                                    (rule "commuteUnion_2" (formula "28") (term "0,0,1,1,0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "27") (term "1,1,0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "27") (term "1,1,0,0,0,0,0"))
                                    (rule "commuteUnion_2" (formula "27") (term "1,1,0,1,0,0,0"))
                                    (rule "Definition_axiom_for_isClassifiedBlocksRange_in_de_wiesler_Classifier" (formula "28") (term "1,1") (inst "block=block"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "translateJavaAddInt" (formula "28") (term "4,0,1,0,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "28") (term "3,0,1,0,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "28") (term "0,1,1,0,0,0,1,1"))
                                    (rule "translateJavaMulInt" (formula "28") (term "1,4,0,1,0,0,1,1"))
                                    (rule "translateJavaMulInt" (formula "28") (term "1,3,0,1,0,0,1,1"))
                                    (rule "translateJavaDivInt" (formula "28") (term "1,1,0,0,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "28") (term "0,1,4,0,1,0,0,1,1"))
                                    (rule "eqSymm" (formula "28") (term "1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "0,1,1,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,4,0,1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "0,1,1,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "1,1,4,0,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,4,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "28") (term "0,1,4,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "4,0,1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "0,4,0,1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0,1"))
                                    (rule "nnf_imp2or" (formula "28") (term "0,0,0,1"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1"))
                                    (rule "Definition_axiom_for_allElementsCounted_in_de_wiesler_Classifier" (formula "27") (term "1,1") (inst "b=b") (inst "b_0=b_0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "translateJavaCastInt" (formula "27") (term "0,1,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "27") (term "1,1,0,1,1"))
                                    (rule "eqSymm" (formula "27") (term "1"))
                                    (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "27") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0,0,1"))
                                    (rule "nnf_imp2or" (formula "27") (term "0,0,0,0,1"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,0,0,1"))
                                    (rule "Definition_axiom_for_isClassifiedBlocksRange_in_de_wiesler_Classifier" (formula "28") (term "1,1") (inst "block=block"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "translateJavaAddInt" (formula "28") (term "4,0,1,0,1,1"))
                                    (rule "translateJavaDivInt" (formula "28") (term "1,1,0,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "28") (term "3,0,1,0,1,1"))
                                    (rule "translateJavaMulInt" (formula "28") (term "1,4,0,1,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "28") (term "0,1,1,0,0,1,1"))
                                    (rule "translateJavaMulInt" (formula "28") (term "1,3,0,1,0,1,1"))
                                    (rule "translateJavaAddInt" (formula "28") (term "0,1,4,0,1,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,4,0,1,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "1,1,4,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,4,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "28") (term "0,1,4,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "4,0,1,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "0,4,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,1"))
                                    (rule "nnf_imp2or" (formula "28") (term "0,1,1"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0,1,1"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,1"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,1"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0,1,1"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "25") (term "0,0"))
                                    (rule "translateJavaSubInt" (formula "40") (term "1,1,1"))
                                    (rule "translateJavaSubInt" (formula "29") (term "2,1,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,0,1,1,0,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "29") (term "2,1,0,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,1,1,0,0,1,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "29") (term "2,1,0,0,0,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,1,1,0,0,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "40") (term "1,1,0"))
                                    (rule "translateJavaMulInt" (formula "29") (term "0,2,1,1,1,0,0"))
                                    (rule "translateJavaMulInt" (formula "40") (term "0,2,1,1,1,0,0,1,1"))
                                    (rule "translateJavaMulInt" (formula "40") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "translateJavaMulInt" (formula "40") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "translateJavaMulInt" (formula "40") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "40") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "translateJavaMulInt" (formula "40") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "eqSymm" (formula "24"))
                                    (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "13")))
                                    (rule "true_left" (formula "20"))
                                    (rule "polySimp_elimSub" (formula "24") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,0,0,0,1,1,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,0,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,0,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,0,0,0,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,0,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,0"))
                                    (rule "polySimp_elimSub" (formula "28") (term "2,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,2,1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,1,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,1,1,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,1,1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,2,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,2,1,1,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,0,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,0,0,0,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "2,1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,1,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,1,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "2,1,1,1,0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "22"))
                                    (rule "applyEq" (formula "39") (term "0,1,2,1,1,1,0,0,1,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "0,1,2,1,1,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "1,2,1,0,1,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "0,1,2,1,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "1,2,1,0,1,1,0,0,1,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "0,1,2,1,1,1,0,0,0,1,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,0,1,0,1,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,1,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "2,1,0,0,1,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,0,1,0,1,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,1,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "28") (term "2,1,0,0,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,1,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "2,0,0,1,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "28") (term "1,2,1,0,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "0,1,2,1,1,1,0,0,1,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "1,2,1,0,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,1,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "1,2,1,0,1,1,0,0,1,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,1,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,1,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "1,0,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "2,1,0,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "1,1,0,0,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,0,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "2,1,0,0,1,1,0,0,1,0,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,0,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "1,2,1,0,1,1,0,1,0,1,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "0,1,2,1,1,1,0,1,0,1,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "1,2,1,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "2,1,0,0,0,1,1,0,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "0,1,2,1,0,1,1,0,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "2,1,0,0,1,1,0,0,1,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "2,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,1,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "2,1,0,0,1,1,0,0,0,1,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,0,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,1,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "27") (term "1,2,1,1,1,0,0,1,0,1,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "28") (term "0,1,2,1,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "1,2,1,1,1,0,1,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "0,1,2,1,0,1,1,0,1,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "2,1,0,0,0,1,1,0,1,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "39") (term "0,1,1") (ifseqformula "28"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "12"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")) (ifInst ""  (formula "4")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "8")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "24")))
             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "25")) (ifInst ""  (formula "4")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "8")) (ifInst ""  (formula "10")) (ifInst ""  (formula "14")) (ifInst ""  (formula "17")) (ifInst ""  (formula "24")) (ifInst ""  (formula "23")))
             (builtin "One Step Simplification" (formula "9"))
             (builtin "One Step Simplification" (formula "8"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "wellFormedAnon" (formula "16") (term "0,0"))
            (rule "wellFormedAnon" (formula "15") (term "0,0"))
            (rule "translateJavaSubInt" (formula "23") (term "1,1,0"))
            (rule "translateJavaSubInt" (formula "13") (term "0,0"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,0,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0,1,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0,1,1"))
            (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0,1,1"))
            (rule "translateJavaSubInt" (formula "23") (term "1,1,1"))
            (rule "translateJavaSubInt" (formula "17") (term "2,1,0,0,0,1,1,0,0"))
            (rule "translateJavaSubInt" (formula "17") (term "2,1,0,1,1,0,0"))
            (rule "translateJavaSubInt" (formula "17") (term "2,1,1,1,0,0"))
            (rule "translateJavaSubInt" (formula "16") (term "2,1,0,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "16") (term "2,1,0,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "16") (term "2,1,0,0,0,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "16") (term "2,1,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "16") (term "2,1,1,1,0"))
            (rule "translateJavaSubInt" (formula "16") (term "2,1,0,0,0,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "16") (term "2,1,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0"))
            (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "15") (term "2,1,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,0,1,0"))
            (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
            (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
            (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1,0,0,1"))
            (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
            (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
            (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0,1,1"))
            (rule "translateJavaMulInt" (formula "17") (term "0,2,1,1,1,0,0"))
            (rule "translateJavaMulInt" (formula "16") (term "0,2,1,1,0,1,0"))
            (rule "translateJavaMulInt" (formula "16") (term "0,2,1,1,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0,0,1"))
            (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,0,1,0"))
            (rule "eqSymm" (formula "12"))
            (rule "close" (formula "18") (ifseqformula "12"))
         )
      )
      (branch "CUT: buffers.<created> = TRUE FALSE"
          (builtin "One Step Simplification" (formula "21"))
         (rule "false_right" (formula "21"))
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "23")))
          (builtin "One Step Simplification" (formula "6"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "7")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "23")) (ifInst ""  (formula "22")))
          (builtin "One Step Simplification" (formula "8"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "6"))
         (rule "wellFormedAnon" (formula "15") (term "0,0"))
         (rule "wellFormedAnon" (formula "14") (term "0,0"))
         (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0"))
         (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "15") (term "2,1,1,0,1,0"))
         (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "14") (term "2,1,0,0,0,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "14") (term "2,1,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "14") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "14") (term "2,1,1,1,0,0,1"))
         (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0,0,1"))
         (rule "translateJavaMulInt" (formula "14") (term "0,2,1,1,0,1,0"))
         (rule "translateJavaMulInt" (formula "14") (term "0,2,1,1,1,0,0,1"))
         (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
         (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
         (rule "polySimp_elimSub" (formula "15") (term "2,1,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "15") (term "1,2,1,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "15") (term "2,1,1,0"))
         (rule "mul_literals" (formula "15") (term "1,2,1,1,0"))
         (rule "polySimp_elimSub" (formula "15") (term "2,1,1,1,0,0,1"))
         (rule "mul_literals" (formula "15") (term "1,2,1,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "15") (term "2,1,1,0,0"))
         (rule "mul_literals" (formula "15") (term "1,2,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "15") (term "2,1,0,1,0,0"))
         (rule "mul_literals" (formula "15") (term "1,2,1,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "15") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "mul_literals" (formula "15") (term "1,2,1,0,0,0,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "15") (term "2,1,0,1,1,0,0,1"))
         (rule "mul_literals" (formula "15") (term "1,2,1,0,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "14") (term "2,1,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "1,2,1,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "14") (term "2,1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "1,2,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "14") (term "2,1,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "1,2,1,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "14") (term "2,1,0,1,0"))
         (rule "mul_literals" (formula "14") (term "1,2,1,0,1,0"))
         (rule "polySimp_elimSub" (formula "14") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "mul_literals" (formula "14") (term "1,2,1,0,0,0,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "14") (term "2,1,0,1,1,0,0,1"))
         (rule "mul_literals" (formula "14") (term "1,2,1,0,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "14") (term "2,1,1,1,0,0,1"))
         (rule "mul_literals" (formula "14") (term "1,2,1,1,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "15") (term "2,1,0,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "15") (term "2,1,1,0"))
         (rule "polySimp_addComm0" (formula "15") (term "2,1,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "15") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "15") (term "2,1,0,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "2,1,0,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "14") (term "2,1,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "14") (term "2,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "14") (term "2,1,0,0,0,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "2,1,0,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "15") (term "2,1,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "15") (term "2,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "14") (term "2,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "14") (term "2,1,1,1,0,0,1"))
         (rule "disjointDefinition" (formula "15") (term "0"))
         (rule "disjointDefinition" (formula "14") (term "0"))
         (rule "distributeIntersection" (formula "15") (term "0,0"))
         (rule "distributeIntersection" (formula "14") (term "0,0"))
         (rule "unionEqualsEmpty" (formula "15") (term "0"))
         (rule "distributeIntersection" (formula "14") (term "0,0,0"))
         (rule "distributeIntersection" (formula "15") (term "0,0,0"))
         (rule "unionEqualsEmpty" (formula "14") (term "0"))
         (rule "unionEqualsEmpty" (formula "15") (term "0,0"))
         (rule "distributeIntersection" (formula "14") (term "0,0,0,0"))
         (rule "unionEqualsEmpty" (formula "14") (term "0,0"))
         (rule "unionEqualsEmpty" (formula "14") (term "0,0,0"))
         (rule "commuteUnion_2" (formula "15") (term "0,0,1,1,0,0,1"))
         (rule "commuteUnion_2" (formula "14") (term "0,0,1,1,0,0,1"))
         (rule "commuteUnion_2" (formula "15") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "14") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "15") (term "1,0,0,1,0,0"))
         (rule "commuteIntersection" (formula "15") (term "0,0,0,0"))
         (rule "commuteIntersection" (formula "14") (term "0,1,0,0"))
         (rule "commuteIntersection" (formula "14") (term "0,1,0,0,0"))
         (rule "commuteUnion_2" (formula "14") (term "0,0,1,0,0,0,0,0,0"))
         (rule "commuteUnion_2" (formula "15") (term "1,1,0,0,1"))
         (rule "commuteUnion_2" (formula "14") (term "1,1,0,0,1"))
         (rule "commuteUnion_2" (formula "15") (term "0,0,1,0,0,1,0"))
         (rule "commuteIntersection" (formula "14") (term "0,1,0"))
         (rule "commuteIntersection" (formula "15") (term "0,1,0,0"))
         (rule "commuteUnion_2" (formula "15") (term "1,1,0,0,0,0"))
         (rule "commuteUnion_2" (formula "14") (term "0,0,1,1,0,1,0,0"))
         (rule "commuteUnion_2" (formula "14") (term "1,1,0,1,0,0,0"))
         (rule "commuteUnion_2" (formula "14") (term "1,0,0,0,0,0,0"))
         (rule "commuteIntersection" (formula "15") (term "0,1,0"))
         (rule "commuteUnion_2" (formula "14") (term "1,1,0,1,0"))
         (rule "commuteUnion_2" (formula "15") (term "0,0,1,1,0,1,0,0"))
         (rule "commuteUnion_2" (formula "15") (term "0,0,1,1,0,0,0,0"))
         (rule "commuteUnion_2" (formula "14") (term "1,1,0,1,0,0"))
         (rule "commuteUnion_2" (formula "14") (term "0,0,1,1,0,1,0,0,0"))
         (rule "commuteIntersection" (formula "14") (term "0,0,0,0,0"))
         (rule "Definition_axiom_for_isClassifiedBlocksRange_in_de_wiesler_Classifier" (formula "15") (term "1,1") (inst "block=block"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "translateJavaSubInt" (formula "15") (term "0,1,1,0,0,0,1,1"))
         (rule "translateJavaAddInt" (formula "15") (term "3,0,1,0,0,1,1"))
         (rule "translateJavaAddInt" (formula "15") (term "4,0,1,0,0,1,1"))
         (rule "translateJavaDivInt" (formula "15") (term "1,1,0,0,0,1,1"))
         (rule "translateJavaMulInt" (formula "15") (term "1,3,0,1,0,0,1,1"))
         (rule "translateJavaMulInt" (formula "15") (term "1,4,0,1,0,0,1,1"))
         (rule "translateJavaAddInt" (formula "15") (term "0,1,4,0,1,0,0,1,1"))
         (rule "eqSymm" (formula "15") (term "1"))
         (rule "polySimp_elimSub" (formula "15") (term "0,1,1,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,4,0,1,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "15") (term "0,1,1,0,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "15") (term "1,1,4,0,1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "15") (term "1,4,0,1,0,0,0,1"))
         (rule "mul_literals" (formula "15") (term "0,1,4,0,1,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "15") (term "4,0,1,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "15") (term "0,4,0,1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,0,1"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,0,1"))
         (rule "nnf_imp2or" (formula "15") (term "0,0,0,1"))
         (rule "nnf_notAnd" (formula "15") (term "0,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0,0,1"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,0,1"))
         (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0,1"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,0,1"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,0,1"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,0,1"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,1"))
         (rule "Definition_axiom_for_allElementsCounted_in_de_wiesler_Classifier" (formula "14") (term "1,1") (inst "b=b") (inst "b_0=b_0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "translateJavaCastInt" (formula "14") (term "0,1,0,1,1"))
         (rule "translateJavaSubInt" (formula "14") (term "1,1,0,1,1"))
         (rule "eqSymm" (formula "14") (term "1"))
         (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,0,0,1"))
         (rule "nnf_imp2or" (formula "14") (term "0,0,0,0,1"))
         (rule "nnf_notAnd" (formula "14") (term "0,0,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0,0,0,1"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0,0,1"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0,0,1"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "1,1,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,1,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,1,1"))
         (rule "translateJavaSubInt" (formula "16") (term "2,1,1,1,0,0"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,1,1"))
         (rule "translateJavaSubInt" (formula "16") (term "2,1,0,1,1,0,0"))
         (rule "translateJavaSubInt" (formula "16") (term "2,1,0,0,0,1,1,0,0"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "12") (term "0,0"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,1,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0,0,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "22") (term "1,1,0"))
         (rule "translateJavaMulInt" (formula "16") (term "0,2,1,1,1,0,0"))
         (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,1,1"))
         (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
         (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
         (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,1,0,0,1"))
         (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
         (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "11"))
         (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "17")))
         (rule "closeFalse" (formula "7"))
      )
   )
   (branch "Case 2"
       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "23")) (userinteraction))
      (rule "impLeft" (formula "18") (userinteraction))
      (branch "Case 1"
         (rule "andRight" (formula "20") (userinteraction))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "20")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "23")) (ifInst ""  (formula "22")))
            (rule "wellFormedAnon" (formula "20"))
             (builtin "One Step Simplification" (formula "8"))
             (builtin "One Step Simplification" (formula "7"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "14"))
            (rule "translateJavaSubInt" (formula "12") (term "0,0"))
            (rule "translateJavaSubInt" (formula "21") (term "1,1,0"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,0,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,0,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1,0,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "14") (term "2,1,0,0,0,1,1,0,0"))
            (rule "translateJavaSubInt" (formula "14") (term "2,1,0,1,1,0,0"))
            (rule "translateJavaSubInt" (formula "14") (term "2,1,1,1,0,0"))
            (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,1,0,0"))
            (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0,0"))
            (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0,0"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,1,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,1,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,1,0,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0,1,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0,1,1"))
            (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0,1,1"))
            (rule "translateJavaSubInt" (formula "21") (term "1,1,1"))
            (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,0,0,0,0,1"))
            (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1,0,0,0,1"))
            (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1,0,0,1"))
            (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,0,1,0,1,0,1"))
            (rule "translateJavaMulInt" (formula "14") (term "0,2,1,1,1,0,0"))
            (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,1,0,0"))
            (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,1,0,1,0,1,0,1"))
            (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0,1,1"))
            (rule "eqSymm" (formula "11"))
            (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "2")))
            (rule "closeTrue" (formula "16"))
         )
         (branch "Case 2"
            (rule "translateJavaSubInt" (formula "20") (term "2,1,0,0,0,1,0"))
            (rule "translateJavaSubInt" (formula "20") (term "2,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "20") (term "2,1,1,0"))
            (rule "translateJavaSubInt" (formula "20") (term "2,1,1"))
            (rule "translateJavaMulInt" (formula "20") (term "0,2,1,1,0"))
            (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "20") (term "2,1,1"))
            (rule "polySimp_elimSub" (formula "20") (term "2,1,1,0"))
            (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,1,0,1,0"))
            (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,1,1"))
            (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,1,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1,0"))
            (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "20") (term "2,1,1"))
            (rule "polySimp_addComm0" (formula "20") (term "2,1,1,0"))
            (rule "disjointDefinition" (formula "20"))
            (rule "distributeIntersection" (formula "20") (term "0"))
            (rule "distributeIntersection" (formula "20") (term "0,0"))
            (rule "unionEqualsEmpty" (formula "20"))
            (rule "unionEqualsEmpty" (formula "20") (term "0"))
            (rule "commuteUnion_2" (formula "20") (term "1,0,0,1"))
            (rule "commuteUnion_2" (formula "20") (term "1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "20") (term "0,0,1,0,0,0,0"))
            (rule "commuteUnion_2" (formula "20") (term "0,0,1,0,0,1"))
            (rule "commuteIntersection" (formula "20") (term "0,1,0"))
            (rule "commuteUnion_2" (formula "20") (term "1,0,0,0,0"))
            (rule "commuteIntersection" (formula "20") (term "0,1"))
            (rule "commuteIntersection" (formula "20") (term "0,0,0"))
            (rule "commute_and_2" (formula "20"))
            (rule "cut_direct" (formula "20") (term "0,0"))
            (branch "CUT: self_103.sorted_splitters.* cap allLocs setMinus self_103.sorted_splitters.* cup self_103.tree.tree.* cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(values_0, begin, -1 + write) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} TRUE"
                (builtin "One Step Simplification" (formula "21"))
               (rule "cut_direct" (formula "21") (term "1"))
               (branch "CUT: self_103.tree.tree.* cap allLocs setMinus self_103.sorted_splitters.* cup self_103.tree.tree.* cup arrayRange(values_0, begin, -1 + write) cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} TRUE"
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "commuteUnion_2" (formula "1") (term "0,0,1,1,0"))
                  (rule "equalityToElementOfRight" (formula "22") (inst "ov=ov") (inst "fv=fv"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "allRight" (formula "22") (inst "sk=ov_0"))
                  (rule "allRight" (formula "22") (inst "sk=fv_0"))
                  (rule "notRight" (formula "22"))
                  (rule "elementOfIntersect" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                  (rule "andLeft" (formula "1"))
                  (rule "exLeft" (formula "2") (inst "sk=iv_0"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "inEqSimp_commuteLeq" (formula "3"))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "elementOfSetMinus" (formula "5"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "notLeft" (formula "5"))
                  (rule "elementOfUnion" (formula "26"))
                  (rule "orRight" (formula "26"))
                  (rule "elementOfArrayRangeConcrete" (formula "27"))
                  (rule "eqSymm" (formula "27") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                  (rule "mul_literals" (formula "27") (term "0,1,1"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                  (rule "elementOfUnion" (formula "26"))
                  (rule "orRight" (formula "26"))
                  (rule "elementOfArrayRangeConcrete" (formula "27"))
                  (rule "eqSymm" (formula "27") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                  (rule "mul_literals" (formula "27") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                  (rule "elementOfUnion" (formula "26"))
                  (rule "orRight" (formula "26"))
                  (rule "elementOfArrayRangeConcrete" (formula "27"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0"))
                  (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "inEqSimp_leqRight" (formula "27"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_literals" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "CUT: self_103.tree.tree.* cap allLocs setMinus self_103.sorted_splitters.* cup self_103.tree.tree.* cup arrayRange(values_0, begin, -1 + write) cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} FALSE"
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "false_right" (formula "22"))
                  (rule "commuteUnion_2" (formula "21") (term "0,0,1,1,0"))
                  (rule "equalityToElementOfRight" (formula "21") (inst "ov=ov") (inst "fv=fv"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "allRight" (formula "21") (inst "sk=ov_0"))
                  (rule "allRight" (formula "21") (inst "sk=fv_0"))
                  (rule "notRight" (formula "21"))
                  (rule "elementOfIntersect" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "elementOfSetMinus" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "notLeft" (formula "2"))
                  (rule "elementOfUnion" (formula "22"))
                  (rule "orRight" (formula "22"))
                  (rule "elementOfArrayRange" (formula "23") (inst "iv=iv"))
                  (rule "eqSymm" (formula "23") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1"))
                  (rule "elementOfUnion" (formula "22"))
                  (rule "orRight" (formula "22"))
                  (rule "elementOfArrayRange" (formula "23") (inst "iv=iv"))
                  (rule "eqSymm" (formula "23") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1"))
                  (rule "elementOfUnion" (formula "22"))
                  (rule "orRight" (formula "22"))
                  (rule "elementOfArrayRange" (formula "23") (inst "iv=iv"))
                  (rule "eqSymm" (formula "23") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1"))
                  (rule "elementOfUnion" (formula "22"))
                  (rule "orRight" (formula "22"))
                  (rule "elementOfUnion" (formula "22"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "closeTrue" (formula "22"))
               )
            )
            (branch "CUT: self_103.sorted_splitters.* cap allLocs setMinus self_103.sorted_splitters.* cup self_103.tree.tree.* cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(values_0, begin, -1 + write) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} FALSE"
                (builtin "One Step Simplification" (formula "21"))
               (rule "false_right" (formula "21"))
               (rule "equalityToElementOfRight" (formula "20") (inst "ov=ov") (inst "fv=fv"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "allRight" (formula "20") (inst "sk=ov_0"))
               (rule "allRight" (formula "20") (inst "sk=fv_0"))
               (rule "notRight" (formula "20"))
               (rule "elementOfIntersect" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
               (rule "elementOfSetMinus" (formula "2"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "notLeft" (formula "2"))
               (rule "elementOfUnion" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "elementOfArrayRange" (formula "22") (inst "iv=iv"))
               (rule "eqSymm" (formula "22") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1"))
               (rule "elementOfUnion" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "elementOfArrayRange" (formula "22") (inst "iv=iv"))
               (rule "eqSymm" (formula "22") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1"))
               (rule "elementOfUnion" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "elementOfUnion" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "elementOfArrayRange" (formula "23") (inst "iv=iv"))
               (rule "eqSymm" (formula "23") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1"))
               (rule "elementOfArrayRange" (formula "22") (inst "iv=iv"))
               (rule "eqSymm" (formula "22") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1"))
               (rule "elementOfUnion" (formula "21"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "closeTrue" (formula "21"))
            )
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "9")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "23")) (ifInst ""  (formula "22")) (userinteraction))
         (rule "impLeft" (formula "17") (userinteraction))
         (branch "Case 1"
            (rule "wellFormedAnon" (formula "20") (term "0"))
            (rule "translateJavaSubInt" (formula "20") (term "2,1,0,0,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "20") (term "2,1,0,1,0,1"))
            (rule "translateJavaSubInt" (formula "20") (term "2,1,1,0,1"))
            (rule "translateJavaSubInt" (formula "20") (term "2,1,0,1,1"))
            (rule "translateJavaMulInt" (formula "20") (term "0,2,1,1,0,1"))
            (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "2")))
            (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1"))
            (rule "mul_literals" (formula "20") (term "1,2,1,0,1"))
            (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "20") (term "2,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "20") (term "2,1,1,0"))
            (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,1,0,0,0,1,0"))
            (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,1,0,1,0"))
            (rule "polySimp_elimOneLeft0" (formula "20") (term "1,2,1,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1,0"))
            (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1"))
            (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "20") (term "2,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "20") (term "2,1,1,0"))
            (rule "disjointDefinition" (formula "20"))
            (rule "distributeIntersection" (formula "20") (term "0"))
            (rule "unionEqualsEmpty" (formula "20"))
            (rule "distributeIntersection" (formula "20") (term "0,0"))
            (rule "distributeIntersection" (formula "20") (term "0,0,0"))
            (rule "unionEqualsEmpty" (formula "20") (term "0"))
            (rule "unionEqualsEmpty" (formula "20") (term "0,0"))
            (rule "commuteIntersection" (formula "20") (term "0,1"))
            (rule "commuteIntersection" (formula "20") (term "0,1,0"))
            (rule "commuteIntersection" (formula "20") (term "0,1,0,0"))
            (rule "commuteUnion_2" (formula "20") (term "1,0,0,0,0,0"))
            (rule "commuteUnion_2" (formula "20") (term "0,0,1,1,0,1"))
            (rule "commuteUnion_2" (formula "20") (term "1,1,0,1,0"))
            (rule "commuteUnion_2" (formula "20") (term "1,1,0,1,0,0"))
            (rule "commuteUnion_2" (formula "20") (term "0,0,1,0,0,0,0,0"))
            (rule "commuteUnion_2" (formula "20") (term "1,1,0,1"))
            (rule "commuteIntersection" (formula "20") (term "0,0,0,0"))
            (rule "commute_and_2" (formula "20"))
            (rule "commute_and_2" (formula "20") (term "0"))
            (rule "cut_direct" (formula "20") (term "0,0,0"))
            (branch "CUT: self_103.sorted_splitters.* cap allLocs setMinus self_103.sorted_splitters.* cup self_103.tree.tree.* cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(values_0, begin, -1 + write) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} TRUE"
                (builtin "One Step Simplification" (formula "21"))
               (rule "cut_direct" (formula "21") (term "1,0"))
               (branch "CUT: self_103.tree.tree.* cap allLocs setMinus self_103.sorted_splitters.* cup self_103.tree.tree.* cup arrayRange(values_0, begin, -1 + write) cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} TRUE"
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "commuteUnion_2" (formula "1") (term "0,0,1,1,0"))
                  (rule "onlyCreatedObjectsAreReferencedFinal" (formula "2") (term "0,0,0") (ifseqformula "3") (ifseqformula "5"))
                  (rule "cut_direct" (formula "2") (term "0"))
                  (branch "CUT: self_103.sorted_splitters = null TRUE"
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "23") (term "0,0,0,0,0,0,1,1,0,1") (ifseqformula "2"))
                     (rule "applyEq" (formula "23") (term "0,0,0,0,0,0,1,1,0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "0,0,0,0,0,0,1,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "1") (term "0,0,0,0,0,0,1,1,0") (ifseqformula "2"))
                     (rule "commuteUnion_2" (formula "23") (term "0,0,1,1,0,1"))
                     (rule "onlyCreatedObjectsAreReferencedFinal" (formula "3") (term "0,0,1,0,0,0,0,1,1,0") (ifseqformula "4") (ifseqformula "6"))
                     (rule "cut_direct" (formula "3") (term "0"))
                     (branch "CUT: self_103.tree = null TRUE"
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "24") (term "0,0,1,0,0,0,0,1,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "24") (term "0,0,1,0,0,0,0,1,1,0,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "4") (term "0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                        (rule "cut_direct" (formula "24") (term "0"))
                        (branch "CUT: arrayRange(bucket_starts, 0, self_103.num_buckets) cap allLocs setMinus null.* cup de.wiesler.Tree.tree.* cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(values_0, begin, -1 + write) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} TRUE"
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "equalityToElementOfRight" (formula "25") (inst "ov=ov") (inst "fv=fv"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "allRight" (formula "25") (inst "sk=ov_0"))
                           (rule "allRight" (formula "25") (inst "sk=fv_0"))
                           (rule "notRight" (formula "25"))
                           (rule "elementOfIntersect" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "elementOfSetMinus" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "notLeft" (formula "2"))
                           (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                           (rule "andLeft" (formula "1"))
                           (rule "exLeft" (formula "2") (inst "sk=iv_0"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "2"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                           (rule "eqSymm" (formula "30") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                           (rule "mul_literals" (formula "30") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                           (rule "eqSymm" (formula "30") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                           (rule "mul_literals" (formula "30") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "0"))
                           (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_leqRight" (formula "30"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                           (rule "andLeft" (formula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,1,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0"))
                           (rule "add_literals" (formula "5") (term "0"))
                           (rule "leq_literals" (formula "5"))
                           (rule "closeFalse" (formula "5"))
                        )
                        (branch "CUT: arrayRange(bucket_starts, 0, self_103.num_buckets) cap allLocs setMinus null.* cup de.wiesler.Tree.tree.* cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(values_0, begin, -1 + write) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} FALSE"
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "false_right" (formula "25"))
                           (rule "equalityToElementOfRight" (formula "24") (inst "ov=ov") (inst "fv=fv"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "allRight" (formula "24") (inst "sk=ov_0"))
                           (rule "allRight" (formula "24") (inst "sk=fv_0"))
                           (rule "notRight" (formula "24"))
                           (rule "elementOfIntersect" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                           (rule "andLeft" (formula "1"))
                           (rule "exLeft" (formula "2") (inst "sk=iv_0"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "2"))
                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                           (rule "elementOfSetMinus" (formula "5"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "notLeft" (formula "5"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1"))
                           (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_leqRight" (formula "29"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                     (branch "CUT: self_103.tree = null FALSE"
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "cut_direct" (formula "25") (term "0"))
                        (branch "CUT: arrayRange(bucket_starts, 0, self_103.num_buckets) cap allLocs setMinus null.* cup self_103.tree.tree.* cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(values_0, begin, -1 + write) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} TRUE"
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "equalityToElementOfRight" (formula "26") (inst "ov=ov") (inst "fv=fv"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "allRight" (formula "26") (inst "sk=ov_0"))
                           (rule "allRight" (formula "26") (inst "sk=fv_0"))
                           (rule "notRight" (formula "26"))
                           (rule "elementOfIntersect" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                           (rule "andLeft" (formula "1"))
                           (rule "exLeft" (formula "2") (inst "sk=iv_0"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "elementOfSetMinus" (formula "5"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "notLeft" (formula "5"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                           (rule "eqSymm" (formula "30") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                           (rule "mul_literals" (formula "30") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                           (rule "eqSymm" (formula "30") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                           (rule "mul_literals" (formula "30") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "0"))
                           (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_leqRight" (formula "30"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "CUT: arrayRange(bucket_starts, 0, self_103.num_buckets) cap allLocs setMinus null.* cup self_103.tree.tree.* cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(values_0, begin, -1 + write) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} FALSE"
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "false_right" (formula "26"))
                           (rule "equalityToElementOfRight" (formula "25") (inst "ov=ov") (inst "fv=fv"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "allRight" (formula "25") (inst "sk=ov_0"))
                           (rule "allRight" (formula "25") (inst "sk=fv_0"))
                           (rule "notRight" (formula "25"))
                           (rule "elementOfIntersect" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                           (rule "andLeft" (formula "1"))
                           (rule "exLeft" (formula "2") (inst "sk=iv_0"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                           (rule "elementOfSetMinus" (formula "5"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "notLeft" (formula "5"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "0"))
                           (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_leqRight" (formula "29"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                           (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                           (rule "add_literals" (formula "32") (term "0,0,1"))
                           (rule "leq_literals" (formula "32") (term "0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "false_right" (formula "32"))
                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                           (rule "andLeft" (formula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,1,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0"))
                           (rule "add_zero_right" (formula "5") (term "0"))
                           (rule "leq_literals" (formula "5"))
                           (rule "closeFalse" (formula "5"))
                        )
                     )
                  )
                  (branch "CUT: self_103.sorted_splitters = null FALSE"
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "onlyCreatedObjectsAreReferencedFinal" (formula "3") (term "0,0,1,0,0,0,0,1,1,0") (ifseqformula "4") (ifseqformula "6"))
                     (rule "cut_direct" (formula "3") (term "0"))
                     (branch "CUT: self_103.tree = null TRUE"
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,1,1,0,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "4") (term "0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,1,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                        (rule "commuteUnion_2" (formula "25") (term "0,0,1,1,0,1"))
                        (rule "cut_direct" (formula "25") (term "0"))
                        (branch "CUT: arrayRange(bucket_starts, 0, self_103.num_buckets) cap allLocs setMinus self_103.sorted_splitters.* cup de.wiesler.Tree.tree.* cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(values_0, begin, -1 + write) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} TRUE"
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "equalityToElementOfRight" (formula "26") (inst "ov=ov") (inst "fv=fv"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "allRight" (formula "26") (inst "sk=ov_0"))
                           (rule "allRight" (formula "26") (inst "sk=fv_0"))
                           (rule "notRight" (formula "26"))
                           (rule "elementOfIntersect" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "elementOfSetMinus" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "notLeft" (formula "2"))
                           (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                           (rule "andLeft" (formula "1"))
                           (rule "exLeft" (formula "2") (inst "sk=iv_0"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                           (rule "eqSymm" (formula "30") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                           (rule "mul_literals" (formula "30") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                           (rule "eqSymm" (formula "30") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                           (rule "mul_literals" (formula "30") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "0"))
                           (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_leqRight" (formula "30"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                           (rule "andLeft" (formula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,1,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0"))
                           (rule "add_zero_right" (formula "5") (term "0"))
                           (rule "leq_literals" (formula "5"))
                           (rule "closeFalse" (formula "5"))
                        )
                        (branch "CUT: arrayRange(bucket_starts, 0, self_103.num_buckets) cap allLocs setMinus self_103.sorted_splitters.* cup de.wiesler.Tree.tree.* cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(values_0, begin, -1 + write) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} FALSE"
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "false_right" (formula "26"))
                           (rule "equalityToElementOfRight" (formula "25") (inst "ov=ov") (inst "fv=fv"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "allRight" (formula "25") (inst "sk=ov_0"))
                           (rule "allRight" (formula "25") (inst "sk=fv_0"))
                           (rule "notRight" (formula "25"))
                           (rule "elementOfIntersect" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "elementOfSetMinus" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "notLeft" (formula "2"))
                           (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                           (rule "andLeft" (formula "1"))
                           (rule "exLeft" (formula "2") (inst "sk=iv_0"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "applyEq" (formula "28") (term "1") (ifseqformula "2"))
                           (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1"))
                           (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_leqRight" (formula "29"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "CUT: self_103.tree = null FALSE"
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "cut_direct" (formula "26") (term "0"))
                        (branch "CUT: arrayRange(bucket_starts, 0, self_103.num_buckets) cap allLocs setMinus self_103.sorted_splitters.* cup self_103.tree.tree.* cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(values_0, begin, -1 + write) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} TRUE"
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "equalityToElementOfRight" (formula "27") (inst "ov=ov") (inst "fv=fv"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "allRight" (formula "27") (inst "sk=ov_0"))
                           (rule "allRight" (formula "27") (inst "sk=fv_0"))
                           (rule "notRight" (formula "27"))
                           (rule "elementOfIntersect" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "elementOfSetMinus" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "notLeft" (formula "2"))
                           (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                           (rule "andLeft" (formula "1"))
                           (rule "exLeft" (formula "2") (inst "sk=iv_0"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "29") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                           (rule "eqSymm" (formula "30") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                           (rule "mul_literals" (formula "30") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                           (rule "eqSymm" (formula "30") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                           (rule "mul_literals" (formula "30") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "1"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                           (rule "elementOfUnion" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "30"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "0"))
                           (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_leqRight" (formula "30"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "CUT: arrayRange(bucket_starts, 0, self_103.num_buckets) cap allLocs setMinus self_103.sorted_splitters.* cup self_103.tree.tree.* cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(values_0, begin, -1 + write) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} FALSE"
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "false_right" (formula "27"))
                           (rule "equalityToElementOfRight" (formula "26") (inst "ov=ov") (inst "fv=fv"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "allRight" (formula "26") (inst "sk=ov_0"))
                           (rule "allRight" (formula "26") (inst "sk=fv_0"))
                           (rule "notRight" (formula "26"))
                           (rule "elementOfIntersect" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "elementOfSetMinus" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "notLeft" (formula "2"))
                           (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                           (rule "andLeft" (formula "1"))
                           (rule "exLeft" (formula "2") (inst "sk=iv_0"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "applyEq" (formula "28") (term "1") (ifseqformula "2"))
                           (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                           (rule "elementOfUnion" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "29"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "0"))
                           (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_leqRight" (formula "29"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                           (rule "andLeft" (formula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,1,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0"))
                           (rule "add_zero_right" (formula "5") (term "0"))
                           (rule "leq_literals" (formula "5"))
                           (rule "closeFalse" (formula "5"))
                        )
                     )
                  )
               )
               (branch "CUT: self_103.tree.tree.* cap allLocs setMinus self_103.sorted_splitters.* cup self_103.tree.tree.* cup arrayRange(values_0, begin, -1 + write) cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} FALSE"
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "false_right" (formula "22"))
                  (rule "commuteUnion_2" (formula "21") (term "0,0,1,1,0"))
                  (rule "equalityToElementOfRight" (formula "21") (inst "ov=ov") (inst "fv=fv"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "allRight" (formula "21") (inst "sk=ov_0"))
                  (rule "allRight" (formula "21") (inst "sk=fv_0"))
                  (rule "notRight" (formula "21"))
                  (rule "elementOfIntersect" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "elementOfSetMinus" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "notLeft" (formula "2"))
                  (rule "elementOfUnion" (formula "22"))
                  (rule "orRight" (formula "22"))
                  (rule "elementOfArrayRange" (formula "23") (inst "iv=iv"))
                  (rule "eqSymm" (formula "23") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1"))
                  (rule "elementOfUnion" (formula "22"))
                  (rule "orRight" (formula "22"))
                  (rule "elementOfUnion" (formula "22"))
                  (rule "orRight" (formula "22"))
                  (rule "elementOfArrayRange" (formula "24") (inst "iv=iv"))
                  (rule "eqSymm" (formula "24") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,1"))
                  (rule "elementOfArrayRange" (formula "23") (inst "iv=iv"))
                  (rule "eqSymm" (formula "23") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1"))
                  (rule "elementOfUnion" (formula "22"))
                  (rule "orRight" (formula "22"))
                  (rule "elementOfUnion" (formula "22"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "closeTrue" (formula "22"))
               )
            )
            (branch "CUT: self_103.sorted_splitters.* cap allLocs setMinus self_103.sorted_splitters.* cup self_103.tree.tree.* cup arrayRange(bucket_starts, 0, self_103.num_buckets) cup arrayRange(values_0, begin, -1 + write) cup arrayRange(buffers.buffer, 0, -1 + self_103.num_buckets * 256) cup arrayRange(buffers.indices, 0, -1 + self_103.num_buckets) = {} FALSE"
                (builtin "One Step Simplification" (formula "21"))
               (rule "false_right" (formula "21"))
               (rule "equalityToElementOfRight" (formula "20") (inst "ov=ov") (inst "fv=fv"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "allRight" (formula "20") (inst "sk=ov_0"))
               (rule "allRight" (formula "20") (inst "sk=fv_0"))
               (rule "notRight" (formula "20"))
               (rule "elementOfIntersect" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
               (rule "elementOfSetMinus" (formula "2"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "notLeft" (formula "2"))
               (rule "elementOfUnion" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "elementOfArrayRange" (formula "22") (inst "iv=iv"))
               (rule "eqSymm" (formula "22") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1"))
               (rule "elementOfUnion" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "elementOfUnion" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "elementOfArrayRange" (formula "23") (inst "iv=iv"))
               (rule "eqSymm" (formula "23") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1"))
               (rule "elementOfArrayRange" (formula "22") (inst "iv=iv"))
               (rule "eqSymm" (formula "22") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1"))
               (rule "elementOfUnion" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "elementOfArrayRange" (formula "22") (inst "iv=iv"))
               (rule "eqSymm" (formula "22") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1"))
               (rule "elementOfUnion" (formula "21"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "closeTrue" (formula "21"))
            )
         )
         (branch "Case 2"
            (rule "applyEqReverse" (formula "25") (term "0,0,0,0,0,0") (ifseqformula "17") (userinteraction))
            (rule "applyEqReverse" (formula "25") (term "0,1,0,0,0,0") (ifseqformula "18") (userinteraction))
            (rule "applyEqReverse" (formula "25") (term "0,1,0,0,0") (ifseqformula "19") (userinteraction))
            (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "20") (userinteraction))
            (rule "equiv_right" (formula "25") (userinteraction))
            (branch "Case '->'"
               (rule "andRight" (formula "26"))
               (branch "Case 1"
                  (rule "andRight" (formula "26"))
                  (branch "Case 1"
                     (rule "andRight" (formula "26"))
                     (branch "Case 1"
                        (rule "andRight" (formula "26"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "9"))
                            (builtin "One Step Simplification" (formula "8"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "13") (term "0,0"))
                           (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "16") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "16") (term "2,1,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "16") (term "2,1,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "17") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "17") (term "2,1,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "17") (term "2,1,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "18") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "18") (term "2,1,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "18") (term "2,1,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,0,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,0,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,0,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,1,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,1,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,1,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "1") (term "1,1"))
                           (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0"))
                           (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,1,0,0"))
                           (rule "translateJavaMulInt" (formula "16") (term "0,2,1,1,1,0,0"))
                           (rule "translateJavaMulInt" (formula "17") (term "0,2,1,1,1,0,0"))
                           (rule "translateJavaMulInt" (formula "18") (term "0,2,1,1,1,0,0"))
                           (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,0,0,0,0"))
                           (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,1,0,0,0"))
                           (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,1,0,0"))
                           (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "close" (formula "27") (ifseqformula "1"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "9"))
                            (builtin "One Step Simplification" (formula "8"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "13") (term "0,0"))
                           (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "16") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "16") (term "2,1,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "16") (term "2,1,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "17") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "17") (term "2,1,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "17") (term "2,1,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "18") (term "2,1,0,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "18") (term "2,1,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "18") (term "2,1,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,0,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,0,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,0,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,1,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,1,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,1,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,1"))
                           (rule "translateJavaSubInt" (formula "1") (term "1,1"))
                           (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0"))
                           (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,1,0,0"))
                           (rule "translateJavaMulInt" (formula "16") (term "0,2,1,1,1,0,0"))
                           (rule "translateJavaMulInt" (formula "17") (term "0,2,1,1,1,0,0"))
                           (rule "translateJavaMulInt" (formula "18") (term "0,2,1,1,1,0,0"))
                           (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,0,0,0,0"))
                           (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,1,0,0,0"))
                           (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,1,0,0"))
                           (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "close" (formula "27") (ifseqformula "2"))
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "9"))
                         (builtin "One Step Simplification" (formula "8"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "13") (term "0,0"))
                        (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "16") (term "2,1,0,0,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "16") (term "2,1,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "16") (term "2,1,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "17") (term "2,1,0,0,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "17") (term "2,1,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "17") (term "2,1,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "18") (term "2,1,0,0,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "18") (term "2,1,0,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "18") (term "2,1,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,0,0,0,0"))
                        (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,0,0,0,0"))
                        (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,0,0,0,0"))
                        (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,1,0,0,0"))
                        (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,1,0,0,0"))
                        (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,1,0,0,0"))
                        (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,1,0,0"))
                        (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,1,0,0"))
                        (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,1,0,0"))
                        (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,1"))
                        (rule "translateJavaSubInt" (formula "1") (term "1,1"))
                        (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0"))
                        (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,1,0,0"))
                        (rule "translateJavaMulInt" (formula "16") (term "0,2,1,1,1,0,0"))
                        (rule "translateJavaMulInt" (formula "17") (term "0,2,1,1,1,0,0"))
                        (rule "translateJavaMulInt" (formula "18") (term "0,2,1,1,1,0,0"))
                        (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,0,0,0,0"))
                        (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,1,0,0,0"))
                        (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,1,0,0"))
                        (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "close" (formula "26") (ifseqformula "2"))
                     )
                  )
                  (branch "Case 2"
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "allRight" (formula "30") (inst "sk=b_0") (userinteraction))
                     (rule "instAll" (formula "30") (term "1,0,0") (ifseqformula "4") (userinteraction))
                      (builtin "Use Dependency Contract" (formula "31") (term "0,0,1") (ifInst ""  (formula "5") (term "0,0,1,0")) (contract "de.wiesler.Buffers[de.wiesler.Buffers::bufferLen(int)].JML accessible clause.0") (userinteraction))
                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "28")) (ifInst ""  (formula "7")) (ifInst ""  (formula "18")))
                      (builtin "One Step Simplification" (formula "14"))
                      (builtin "One Step Simplification" (formula "13"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "wellFormedAnon" (formula "24") (term "1,0,0,0"))
                     (rule "translateJavaSubInt" (formula "3") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "6") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "6") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "6") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "3") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "3") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "2") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "6") (term "1"))
                     (rule "translateJavaSubInt" (formula "4") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "4") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "2") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "2") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "29") (term "2,1,0,0,0,1,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "29") (term "2,1,0,1,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "4") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "29") (term "2,1,1,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "29") (term "2,1,0,0,0,1,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "29") (term "2,1,0,1,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "29") (term "2,1,1,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "20") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "20") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "20") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "18") (term "0,0"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,1,0,1,0"))
                     (rule "translateJavaMulInt" (formula "6") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "3") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "2") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "4") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "29") (term "0,2,1,1,1,0,0,0,1"))
                     (rule "translateJavaMulInt" (formula "29") (term "0,2,1,1,1,0,1,0,1"))
                     (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "20") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,0,1,0"))
                     (rule "impRight" (formula "29"))
                     (rule "andLeft" (formula "1"))
                     (rule "eqSymm" (formula "19"))
                     (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "28"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                     (rule "replace_known_left" (formula "26") (term "1,1,0,0,0") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "15")) (ifInst ""  (formula "9")) (ifInst ""  (formula "1")))
                     (rule "polySimp_elimSub" (formula "5") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "8") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "8") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "5") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "4") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "8") (term "1"))
                     (rule "polySimp_elimSub" (formula "6") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "6") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "4") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "20") (term "0,0"))
                     (rule "polySimp_elimSub" (formula "8") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "5") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "4") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "6") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "23") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,1,0"))
                     (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,1,0"))
                     (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,1,0"))
                     (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,1,1,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,1,1,0,0,0"))
                     (rule "polySimp_elimSub" (formula "31") (term "2,1,0,1,1,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "1,2,1,0,1,1,0,0,0"))
                     (rule "polySimp_elimSub" (formula "31") (term "2,1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "1,2,1,1,1,0,0,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,1,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "5") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "5") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "18"))
                     (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,1,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "31") (term "2,1,0,1,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "5") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "2,1,1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "31") (term "2,1,1,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                     (rule "disjointDefinition" (formula "26") (term "1,0"))
                     (rule "disjointWithSingleton1" (formula "26") (term "1,0"))
                     (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "19"))
                     (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEq" (formula "24") (term "0") (ifseqformula "6"))
                     (rule "eqSymm" (formula "24"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "23"))
                     (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "8") (term "0,1,2,1,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                     (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "4"))
                     (rule "eqSymm" (formula "22"))
                     (rule "applyEq" (formula "31") (term "1,2,1,0,1,1,0,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "4") (term "1,2,1,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "4") (term "2,1,0,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "6") (term "2,1,0,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "8") (term "1,2,1,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "4") (term "0,1,2,1,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "25") (term "1,2,1,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "31") (term "0,1,2,1,1,1,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "23") (term "1,2,1,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "23") (term "2,1,0,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "6") (term "0,1,2,1,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "8") (term "2,1,0,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "25") (term "2,1,0,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "23") (term "0,1,2,1,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "31") (term "2,1,0,0,1,1,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "6") (term "1,2,1,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "25") (term "0,1,2,1,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "19"))
                     (rule "applyEq" (formula "23") (term "1") (ifseqformula "5"))
                     (rule "applyEq" (formula "26") (term "1,2,1,0,1,2,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "26") (term "2,1,0,0,1,2,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "26") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "19"))
                     (rule "applyEq" (formula "26") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "19"))
                     (rule "applyEq" (formula "26") (term "0,1,2,1,1,2,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "25"))
                     (rule "applyEq" (formula "25") (term "1") (ifseqformula "8"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                     (rule "elementOfSetMinus" (formula "26") (term "0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "elementOfUnion" (formula "26") (term "0"))
                     (rule "elementOfArrayRangeConcrete" (formula "26") (term "1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1,0"))
                     (rule "replace_known_left" (formula "26") (term "1,0,1,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_homoInEq0" (formula "26") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,1,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,1,1,0"))
                     (rule "elementOfUnion" (formula "26") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "26") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,1,0,0"))
                     (rule "replace_known_left" (formula "26") (term "0,1,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                     (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "26"))
                     (rule "pullOutSelect" (formula "31") (term "1,0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "15")))
                     (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,1,0,0"))
                     (rule "replace_known_left" (formula "1") (term "1,0,1,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,1,0,0,0"))
                     (rule "replace_known_left" (formula "1") (term "1,0,1,0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1,0,0,0"))
                     (rule "replace_known_left" (formula "1") (term "1,1,0,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,0,0,0"))
                     (rule "replace_known_left" (formula "1") (term "0,1,0,0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0"))
                     (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "1"))
                     (rule "close" (formula "32") (ifseqformula "4"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "9"))
                   (builtin "One Step Simplification" (formula "8"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "23") (term "1"))
                  (rule "translateJavaSubInt" (formula "13") (term "0,0"))
                  (rule "translateJavaSubInt" (formula "15") (term "2,1,0,0,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "15") (term "2,1,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "16") (term "2,1,0,0,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "16") (term "2,1,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "16") (term "2,1,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "17") (term "2,1,0,0,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "17") (term "2,1,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "17") (term "2,1,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "18") (term "2,1,0,0,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "18") (term "2,1,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "18") (term "2,1,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,0,0,0,0"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,0,0,0,0"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,0,0,0,0"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,1,0,0,0"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,1,0,0,0"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,1,0,0,0"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,1,0,0"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,1,0,0"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,1,0,0"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,1"))
                  (rule "translateJavaSubInt" (formula "1") (term "1,1"))
                  (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0"))
                  (rule "translateJavaMulInt" (formula "15") (term "0,2,1,1,1,0,0"))
                  (rule "translateJavaMulInt" (formula "16") (term "0,2,1,1,1,0,0"))
                  (rule "translateJavaMulInt" (formula "17") (term "0,2,1,1,1,0,0"))
                  (rule "translateJavaMulInt" (formula "18") (term "0,2,1,1,1,0,0"))
                  (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,0,0,0,0"))
                  (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,1,0,0,0"))
                  (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,1,0,0"))
                  (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,1"))
                  (rule "andLeft" (formula "1"))
                  (rule "close" (formula "24") (ifseqformula "2"))
               )
            )
            (branch "Case '<-'"
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "1") (userinteraction))
               (rule "andRight" (formula "30"))
               (branch "Case 1"
                  (rule "andRight" (formula "30"))
                  (branch "Case 1"
                     (rule "andRight" (formula "30"))
                     (branch "Case 1"
                        (rule "andRight" (formula "30"))
                        (branch "Case 1"
                           (rule "closeTrue" (formula "30"))
                        )
                        (branch "Case 2"
                           (rule "close" (formula "30") (ifseqformula "2"))
                        )
                     )
                     (branch "Case 2"
                        (rule "close" (formula "30") (ifseqformula "3"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "30") (inst "sk=b_0") (userinteraction))
                     (rule "instAll" (formula "30") (term "1,0,0") (ifseqformula "4") (userinteraction))
                      (builtin "Use Dependency Contract" (formula "1") (term "0,0,1") (ifInst ""  (formula "31") (term "0,0,1")) (contract "de.wiesler.Buffers[de.wiesler.Buffers::bufferLen(int)].JML accessible clause.0") (userinteraction))
                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "28")) (ifInst ""  (formula "7")) (ifInst ""  (formula "18")))
                      (builtin "One Step Simplification" (formula "14"))
                      (builtin "One Step Simplification" (formula "13"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "wellFormedAnon" (formula "24") (term "1,0,0,0"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "18") (term "0,0"))
                     (rule "translateJavaSubInt" (formula "20") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "20") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "21") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "22") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "2") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "2") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "2") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "3") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "3") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "23") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "3") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "4") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "4") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "4") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "5") (term "2,1,0,0,0,1,1,0,0,0,1,0"))
                     (rule "translateJavaSubInt" (formula "20") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "5") (term "2,1,0,1,1,0,0,0,1,0"))
                     (rule "translateJavaSubInt" (formula "5") (term "2,1,1,1,0,0,0,1,0"))
                     (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,0,0,1"))
                     (rule "translateJavaSubInt" (formula "1") (term "2,1,0,0,0,1,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "1") (term "2,1,0,1,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "5") (term "2,1,0,0,0,1,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "5") (term "2,1,0,1,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "5") (term "2,1,1,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "1") (term "2,1,1,1,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "6") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "6") (term "2,1,0,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "6") (term "2,1,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "6") (term "1"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,1,0,1,0"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "translateJavaSubInt" (formula "24") (term "2,1,1,1,0,0,1"))
                     (rule "translateJavaMulInt" (formula "21") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "22") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "2") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "23") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "3") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "4") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "20") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "5") (term "0,2,1,1,1,0,0,0,1,0"))
                     (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,0,0,1"))
                     (rule "translateJavaMulInt" (formula "5") (term "0,2,1,1,1,0,1,0,1,0"))
                     (rule "translateJavaMulInt" (formula "1") (term "0,2,1,1,1,0,1,0,1"))
                     (rule "translateJavaMulInt" (formula "6") (term "0,2,1,1,1,0,0"))
                     (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,0,1,0"))
                     (rule "translateJavaMulInt" (formula "24") (term "0,2,1,1,1,0,0,1"))
                     (rule "impRight" (formula "29"))
                     (rule "andLeft" (formula "1"))
                     (rule "eqSymm" (formula "19"))
                     (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "28"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                     (rule "replace_known_left" (formula "26") (term "0,1,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "15")) (ifInst ""  (formula "9")) (ifInst ""  (formula "10")))
                     (rule "polySimp_elimSub" (formula "20") (term "0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "23") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "4") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "4") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "5") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "5") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "6") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "6") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "7") (term "2,1,0,0,0,1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "7") (term "1,2,1,0,0,0,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "7") (term "2,1,0,1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "7") (term "1,2,1,0,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "7") (term "2,1,0,0,0,1,1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "7") (term "1,2,1,0,0,0,1,1,0,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "7") (term "2,1,0,1,1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "7") (term "1,2,1,0,1,1,0,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "8") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "8") (term "2,1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,2,1,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "8") (term "1"))
                     (rule "polySimp_elimSub" (formula "23") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "4") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "25") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "5") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "6") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "22") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "7") (term "2,1,1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "7") (term "1,2,1,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "7") (term "2,1,1,1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "7") (term "1,2,1,1,1,0,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "8") (term "2,1,1,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,2,1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "3") (term "2,1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "1,2,1,1,1,0,0,0"))
                     (rule "polySimp_elimSub" (formula "3") (term "2,1,0,0,0,1,1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "1,2,1,0,0,0,1,1,0,0,0"))
                     (rule "polySimp_elimSub" (formula "3") (term "2,1,1,1,0,1,0"))
                     (rule "mul_literals" (formula "3") (term "1,2,1,1,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "3") (term "2,1,0,1,1,0,1,0"))
                     (rule "mul_literals" (formula "3") (term "1,2,1,0,1,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "3") (term "2,1,0,1,1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "1,2,1,0,1,1,0,0,0"))
                     (rule "polySimp_elimSub" (formula "3") (term "2,1,0,0,0,1,1,0,1,0"))
                     (rule "mul_literals" (formula "3") (term "1,2,1,0,0,0,1,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,1,0,0,1"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,1,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,1,1,0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "5") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,1,1,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "5") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,1,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,1,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "7") (term "2,1,0,0,0,1,1,0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "7") (term "2,1,0,1,1,0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "7") (term "2,1,0,0,0,1,1,0,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "7") (term "2,1,0,1,1,0,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "2,1,0,0,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "2,1,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "18"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "2,1,0,0,0,1,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_addComm0" (formula "3") (term "2,1,0,1,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "2,1,0,1,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "2,1,0,0,0,1,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "5") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "2,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "7") (term "2,1,1,1,0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "7") (term "2,1,1,1,0,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "2,1,1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "polySimp_addComm0" (formula "3") (term "2,1,1,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "2,1,1,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,1,1,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                     (rule "disjointDefinition" (formula "26") (term "1,0"))
                     (rule "disjointWithSingleton1" (formula "26") (term "1,0"))
                     (rule "applyEq" (formula "26") (term "1,2,1,0,1,2,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "26") (term "0,1,2,1,1,2,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "19"))
                     (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEq" (formula "23") (term "0") (ifseqformula "5"))
                     (rule "eqSymm" (formula "23"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "25"))
                     (rule "applyEq" (formula "5") (term "2,1,0,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "6") (term "1,2,1,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "7") (term "1,2,1,0,1,1,0,0,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "5") (term "1,2,1,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "4") (term "0,1,2,1,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "3") (term "2,1,0,0,1,1,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "7") (term "0,1,2,1,1,1,0,1,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "4") (term "1,2,1,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "7") (term "2,1,0,0,1,1,0,0,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "3") (term "0,1,2,1,1,1,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "25") (term "1,2,1,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "5") (term "0,1,2,1,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "3") (term "1,2,1,0,1,1,0,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "6") (term "0,1,2,1,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "3") (term "0,1,2,1,1,1,0,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "24") (term "0,1,2,1,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "25") (term "0,1,2,1,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "7") (term "2,1,0,0,1,1,0,1,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "3") (term "1,2,1,0,1,1,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "25") (term "2,1,0,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "22") (term "0,1,2,1,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                     (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "7") (term "0,1,2,1,1,1,0,0,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "3") (term "2,1,0,0,1,1,0,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "24") (term "1,2,1,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "6") (term "2,1,0,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "7") (term "1,2,1,0,1,1,0,1,0,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "24") (term "2,1,0,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "22") (term "2,1,0,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "4") (term "2,1,0,0,1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "26") (term "2,1,0,0,1,1,0,0,1") (ifseqformula "19"))
                     (rule "applyEq" (formula "26") (term "2,1,0,0,1,2,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "26") (term "0,1,2,1,1,1,0,0,1") (ifseqformula "19"))
                     (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,0,0,1") (ifseqformula "19"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "24"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "22"))
                     (rule "applyEq" (formula "25") (term "1") (ifseqformula "8"))
                     (rule "applyEq" (formula "24") (term "1") (ifseqformula "6"))
                     (rule "applyEq" (formula "22") (term "1") (ifseqformula "4"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                     (rule "elementOfSetMinus" (formula "26") (term "0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "elementOfUnion" (formula "26") (term "0"))
                     (rule "elementOfArrayRangeConcrete" (formula "26") (term "1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1,0"))
                     (rule "replace_known_left" (formula "26") (term "1,0,1,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_homoInEq0" (formula "26") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,1,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,1,1,0"))
                     (rule "elementOfUnion" (formula "26") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "26") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,1,0,0"))
                     (rule "replace_known_left" (formula "26") (term "0,1,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                     (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "26"))
                     (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnon" (formula "3"))
                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")) (ifInst ""  (formula "15")))
                     (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "ifthenelse_negated" (formula "3") (term "0"))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                     (rule "eqSymm" (formula "3") (term "0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,1,0,0"))
                     (rule "replace_known_left" (formula "3") (term "1,0,1,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,1,1,0,0"))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0,0"))
                     (rule "eqSymm" (formula "3") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,1,0,0,0"))
                     (rule "replace_known_left" (formula "3") (term "1,0,1,0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "1,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,1,1,0,0,0"))
                     (rule "replace_known_left" (formula "3") (term "1,1,0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "0,1,0,0,0,0"))
                     (rule "replace_known_left" (formula "3") (term "0,1,0,0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_subsumption1" (formula "3") (term "1,0,0,0,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0,1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,1,0,0,0,0"))
                     (rule "qeq_literals" (formula "3") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                     (rule "close" (formula "32") (ifseqformula "4"))
                  )
               )
               (branch "Case 2"
                  (rule "close" (formula "30") (ifseqformula "5"))
               )
            )
         )
      )
   )
)
)
}
